{"version":3,"sources":["reportWebVitals.ts","Components/mainLayout/footer/footer.tsx","Components/redux/authState.ts","Components/model/userDetails.ts","Components/redux/ErrorState.ts","Components/redux/customersState.ts","Components/model/Customer.ts","Components/redux/adminState.ts","Components/redux/couponsState.ts","Components/utils/Globals.ts","Components/axios/GuestAxiosService.ts","Components/redux/companiesState.ts","Components/model/Company.ts","Components/redux/store.ts","Components/mainLayout/header/header.tsx","Components/coupons/couponSmallCard/couponSmallCard.tsx","Components/coupons/viewCouponsSmall/viewCouponsSmall.tsx","Components/guestComponents/getCoupons/getCoupons.tsx","Components/guestComponents/main/main.tsx","Components/mainComponent/about/about.tsx","Components/coupons/couponCard/couponCard.tsx","Components/model/CouponDetails.ts","Components/coupons/getOneCoupon/getOneCoupon.tsx","Components/utils/Notify.ts","Components/axios/JWTAxios.ts","Components/axios/CompanyAxiosService.ts","Components/axios/CustomerAxiosService.ts","Components/axios/GeneralAxiosService.ts","Components/mainComponent/LoginFC/LoginFC.tsx","Components/mainComponent/page404/page404.tsx","Components/mainLayout/privateAside/privateAside.tsx","Components/axios/AdminAxiosService.ts","Components/adminComponents/addCompany/addCompany.tsx","Components/adminComponents/addCustomer/addCustomer.tsx","Components/companyComponents/addCoupon/addCoupon.tsx","Components/companyComponents/deleteCoupon/deleteCoupon.tsx","Components/companyComponents/updateCoupon/updateCoupon.tsx","Components/companyComponents/companyDetails/companyDetails.tsx","Components/customerComponents/customerDetails/customerDetails.tsx","Components/mainLayout/privateMain/privateMain.tsx","Components/customerComponents/paymentPage/paymentPage.tsx","Components/companyComponents/companyCoupons/companyCoupons.tsx","Components/customerComponents/customerCoupons/customerCoupons.tsx","Components/adminComponents/updateCustomer/updateCustomer.tsx","Components/adminComponents/adminCustomers/adminCustomers.tsx","Components/adminComponents/updateCompany/updateCompany.tsx","Components/adminComponents/adminCompanies/adminCompanies.tsx","Components/customerComponents/purchasePage/purchasePage.tsx","Components/mainLayout/privateRouting/privateRouting.tsx","Components/mainLayout/privateScreen/privateScreen.tsx","Components/mainLayout/mainRouting/mainRouting.tsx","Components/mainLayout/layout/layout.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","AuthActionType","className","UserDetails","token","clientType","id","AuthState","userDetails","logoutUser","type","LogoutUser","payload","loginUser","ErrorsActionType","ErrorsState","error404","wrongDetails","error404Action","Error404","wrongDetailsAction","CustomerActionType","Customer","firstName","lastName","email","password","coupons","CustomersState","customer","customerDetailsAction","CustomerDetails","purchaseCouponAction","coupon","PurchaseCoupon","AdminActionType","AdminState","companies","customers","companyDownloadedAction","CompaniesDownload","addCompanyAction","company","AddCompany","updateCompanyAction","UpdateCompany","deleteCompanyAction","DeleteCompany","customerDownloadedAction","ad","addCustomerAction","AddCustomer","updateCustomerAction","UpdateCustomer","deleteCustomerAction","DeleteCustomer","CouponsActionType","CouponsState","allCoupons","couponsForView","couponsDownloadedAction","CouponsDownload","couponsForViewAction","CouponsForView","Globals","globals","urls","administrator","guest","general","getAllCoupons","a","axios","post","res","console","log","store","dispatch","data","catch","err","CompanyActionType","Company","name","CompaniesState","companyDetailsAction","CompanyDetails","deleteCouponAction","DeleteCoupon","updateCouponAction","UpdateCoupon","reducers","combineReducers","authState","currentState","action","newState","localStorage","setItem","removeItem","decoded","jwtDecode","UpdateToken","push","findIndex","item","splice","parseInt","AddCoupon","createStore","applyMiddleware","thunkMiddleware","Header","useState","getState","ClientType","setType","openLogoutBox","setOpenLogoutBox","useEffect","unsubscribeMe","subscribe","history","useHistory","handleLogoutBox","home","Button","startIcon","onClick","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","CouponSmallCard","props","deleteCoupon","updateCoupon","purchaseCoupon","src","image","title","description","price","options","location","pathname","value","purchase","edit","ViewCouponsSmall","setData","map","GetCoupons","syncSetData","Main","About","myButton","setValue","hide","setHide","more","CouponCard","startDate","setStartDate","endDate","setEndDate","formatDate","date","myNewDate","split","companyID","categoryID","amount","CouponDetails","Date","GetOneCoupon","Coupon1","propId","replace","find","toString","go","notify","notification","Notyf","duration","position","x","y","message","this","success","error","jwtAxios","create","interceptors","request","use","headers","response","status","authorization","addCouponAxios","companyCouponsAxios","deleteCouponAxios","deleteUrl","delete","updateCouponAxios","companyDetailsAxios","url","customerDetailsAxios","purchaseCouponAxios","loginAxios","loginGetDetailsAxios","fileHandler","myEvent","myFileUrl","file","target","files","Backendless","initApp","Files","upload","fileURL","LoginFC","useForm","register","handleSubmit","errors","setError","formState","loginDetails","onSubmit","Typography","variant","TextField","label","required","pattern","minLength","maxLength","Select","style","width","defaultValue","MenuItem","ButtonGroup","color","Page404","height","allow","PrivateAside","fullWidth","getAllCompaniesAxios","addCompanyAxios","updateCompanyAxios","deleteCompanyAxios","getAllCustomersAxios","addCustomerAxios","updateCustomerAxios","deleteCustomerAxios","fontSize","margin","imgEvent","setImgEvent","undefined","InputLabelProps","shrink","min","accept","onChange","event","CouponNow","Company1","Customer1","PrivateMain","PaymentPage","couponId","myCoupon","buy","setBuy","login","showLogin","CompanyCoupons","searchType","args","couponFilter","couponsInStore","couponsArray","idCoupon","filter","searchBy","CustomerCoupons","CustomerNow","AdminCustomers","React","page","setPage","rowsPerPage","setRowsPerPage","passss","setPass","CustomerInRow","setCustomerInRow","openPasswordBox","setOpenPasswordBox","isAllow","setAllowedPassword","openUpdateBox","setOpenUpdateBox","registerCust","handleSubmitCust","errorsCust","openCouponsBox","setOpenCouponsBox","openDeleteBox","setOpenDeleteBox","showPassword","show","chekAdminDetails","deleteCustomer","handleClosePasswordBox","handleCloseUpdateBox","handleCloseDeleteBox","handleCloseCouponsBox","columns","minWidth","align","format","toLocaleString","createData","customer1","update","deleteIt","handleOpenCouponsBox","rows","customersArray","myCustomer","customersFirstNameArray","mycustomerFirstName","includes","customerItem","customersLastNameArray","mycustomerLastName","Paper","sx","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","role","tabIndex","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","newPage","onRowsPerPageChange","CompanyNow","AdminCompanies","CompanyInRow","setCompanyInRow","registerComp","handleSubmitComp","errorsComp","deleteCompany","company1","companiesArray","myCompany","companiesNameArray","myCompanyName","companyyy","PurchasePage","customerCoupons","ready","setReady","index","PrivateRouting","path","render","match","exact","params","Component","PrivateScreen","MainRouting","set404","error404unsubscribeMe","from","to","Layout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3755303b.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./footer.css\";\n\nfunction Footer(): JSX.Element {\n    return (\n        <div className=\"footer\">\n\t\t\t@Yehushua Rozenberg & Shalom Gottlieb  *contact us in about page* \n        </div>\n    );\n}\n\nexport default Footer;\n","import jwtDecode from \"jwt-decode\";\r\nimport UserDetails from \"../model/userDetails\";\r\n\r\n\r\nexport class AuthState {\r\n    public userDetails: UserDetails = new UserDetails();\r\n}\r\n\r\nexport enum AuthActionType {\r\n    userDetails = \"userDetails\",\r\n    LogoutUser = \"LogoutUser\",\r\n    loginUser = \"loginUser\",\r\n    UpdateToken = \"UpdateToken\",\r\n}\r\n\r\nexport interface AuthAction {\r\n    type: AuthActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function userDetails(user: UserDetails): AuthAction {\r\n    return { type: AuthActionType.userDetails, payload: user }\r\n}\r\n\r\nexport function logoutUser(): AuthAction {\r\n    return { type: AuthActionType.LogoutUser, payload: null }\r\n}\r\n\r\nexport function loginUser(token: string): AuthAction {\r\n    return { type: AuthActionType.loginUser, payload: token }\r\n}\r\n\r\nexport function updateToken(token: string): AuthAction {\r\n    return { type: AuthActionType.UpdateToken, payload: token }\r\n}\r\n\r\nexport function authReducer(currentState: AuthState = new AuthState(), action: AuthAction): AuthState {\r\n    const newState = { ...currentState };\r\n    switch (action.type) {\r\n        case AuthActionType.userDetails:\r\n            newState.userDetails = action.payload;\r\n            localStorage.setItem(\"token\", action.payload);\r\n            break;\r\n        case AuthActionType.LogoutUser:\r\n            newState.userDetails = new UserDetails();\r\n            localStorage.removeItem(\"token\");\r\n            break;\r\n        case AuthActionType.loginUser:\r\n            newState.userDetails.token = action.payload;\r\n            const decoded: UserDetails = jwtDecode(newState.userDetails.token);\r\n            newState.userDetails.clientType = decoded.clientType;\r\n            newState.userDetails.id = decoded.id;\r\n            console.log(\"-------------------------------\");\r\n            console.log(decoded);\r\n            console.log(newState.userDetails.clientType)\r\n            console.log(newState.userDetails.id)\r\n            console.log(\"-------------------------------\");\r\n            break;\r\n\r\n        case AuthActionType.UpdateToken:\r\n            newState.userDetails.token = action.payload;\r\n            localStorage.setItem(\"token\", action.payload);\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n\r\n\r\n","class UserDetails{\r\n    token:string = \"\";\r\n    clientType:string = \"\";\r\n    id:number=0;\r\n}\r\n\r\nexport default UserDetails;","export class ErrorsState {\r\n    public error404: boolean = false;\r\n    public wrongDetails: boolean = false;\r\n\r\n}\r\n\r\nexport enum ErrorsActionType {\r\n    Error404 = \"Error404\",\r\n    wrongDetails = \"wrongDetails\"\r\n}\r\n\r\nexport interface ErrorsAction {\r\n    type: ErrorsActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function error404Action(error404: boolean): ErrorsAction {\r\n    return { type: ErrorsActionType.Error404, payload: error404 }\r\n}\r\n\r\nexport function wrongDetailsAction(wrongDetails: boolean): ErrorsAction {\r\n    return { type: ErrorsActionType.wrongDetails, payload: wrongDetails }\r\n}\r\n\r\nexport function errorsReducer(currentState: ErrorsState = new ErrorsState(), action: ErrorsAction): ErrorsState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case ErrorsActionType.Error404:\r\n            newState.error404 = action.payload;\r\n            console.log(newState.error404);\r\n            break;\r\n        case ErrorsActionType.wrongDetails:\r\n            newState.wrongDetails = action.payload;\r\n            console.log(newState.wrongDetails);\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n","import CouponDetails from \"../model/CouponDetails\";\r\nimport Customer from '../model/Customer';\r\n\r\nexport class CustomersState {\r\n    public customer: Customer = new Customer();\r\n}\r\n\r\nexport enum CustomerActionType {\r\n    CustomerDetails = \"CustomerDetails\",\r\n    PurchaseCoupon = \"PurchaseCoupon\",\r\n}\r\n\r\nexport interface CustomerAction {\r\n    type: CustomerActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function customerDetailsAction(customer: Customer): CustomerAction {\r\n    return { type: CustomerActionType.CustomerDetails, payload: customer }\r\n}\r\n\r\nexport function purchaseCouponAction(coupon: CouponDetails): CustomerAction {\r\n    return { type: CustomerActionType.PurchaseCoupon, payload: coupon }\r\n}\r\n\r\nexport function customersReduser(currentState: CustomersState = new CustomersState(), action: CustomerAction): CustomersState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case CustomerActionType.CustomerDetails:\r\n            newState.customer = action.payload\r\n            break;\r\n        case CustomerActionType.PurchaseCoupon:\r\n            newState.customer.coupons.push(action.payload)\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n\r\n","import CouponDetails from \"./CouponDetails\";\r\n\r\nclass Customer{\r\n    public id: number=0;\r\n    public firstName: string=\"\";\r\n    public lastName: string=\"\";\r\n    public email: string=\"\";\r\n    public password: string=\"\";\r\n    public coupons: CouponDetails[] = []; \r\n    \r\n}\r\n\r\nexport default Customer;\r\n\r\n","import Company from \"../model/Company\";\r\nimport Customer from \"../model/Customer\";\r\n\r\nexport class AdminState {\r\n    public companies: Company[] = [];\r\n    public customers: Customer[] = [];\r\n}\r\n\r\nexport enum AdminActionType {\r\n    CompaniesDownload = \"CompaniesDownloaded\",\r\n    AddCompany = \"AddCompany\",\r\n    UpdateCompany = \"UpdateCompany\",\r\n    DeleteCompany = \"DeleteCompany\",\r\n    ad = \"aded\",\r\n    AddCustomer = \"AddCustomer\",\r\n    UpdateCustomer = \"UpdateCustomer\",\r\n    DeleteCustomer = \"DeleteCustomer\",\r\n}\r\n\r\nexport interface AdminAction {\r\n    type: AdminActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function companyDownloadedAction(companies: Company[]): AdminAction {\r\n    return { type: AdminActionType.CompaniesDownload, payload: companies }\r\n}\r\n\r\nexport function addCompanyAction(company: Company): AdminAction {\r\n    return { type: AdminActionType.AddCompany, payload: company }\r\n}\r\n\r\nexport function updateCompanyAction(company: Company): AdminAction {\r\n    return { type: AdminActionType.UpdateCompany, payload: company }\r\n}\r\n\r\nexport function deleteCompanyAction(id: number): AdminAction {\r\n    return { type: AdminActionType.DeleteCompany, payload: id }\r\n}\r\n\r\nexport function customerDownloadedAction(customers: Customer[]): AdminAction {\r\n    return { type: AdminActionType.ad, payload: customers }\r\n}\r\n\r\nexport function addCustomerAction(customer: Customer): AdminAction {\r\n    return { type: AdminActionType.AddCustomer, payload: customer }\r\n}\r\n\r\nexport function updateCustomerAction(customer: Customer): AdminAction {\r\n    return { type: AdminActionType.UpdateCustomer, payload: customer }\r\n}\r\n\r\nexport function deleteCustomerAction(id: number): AdminAction {\r\n    return { type: AdminActionType.DeleteCustomer, payload: id }\r\n}\r\n\r\n\r\nexport function adminReducer(currentState: AdminState = new AdminState(), action: AdminAction): AdminState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case AdminActionType.CompaniesDownload:\r\n            newState.companies = action.payload;\r\n            break;\r\n        case AdminActionType.AddCompany:\r\n            newState.companies.push(action.payload);\r\n            break;\r\n        case AdminActionType.UpdateCompany:\r\n            newState.companies[newState.companies.findIndex(item => item.id == action.payload.id)] = action.payload;\r\n            break;\r\n        case AdminActionType.DeleteCompany:\r\n            newState.companies.splice(newState.companies.findIndex(item => item.id === parseInt(action.payload)), 1);\r\n            break;\r\n        case AdminActionType.ad:\r\n            newState.customers = action.payload;\r\n            break;\r\n        case AdminActionType.AddCustomer:\r\n            newState.customers.push(action.payload);\r\n            break;\r\n        case AdminActionType.UpdateCustomer:\r\n            newState.customers[newState.customers.findIndex(item => item.id == action.payload.id)] = action.payload;\r\n            break;\r\n        case AdminActionType.DeleteCustomer:\r\n            newState.customers.splice(newState.customers.findIndex(item => item.id === parseInt(action.payload)), 1);\r\n            break;\r\n\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n","import CouponDetails from \"../model/CouponDetails\";\r\n\r\nexport class CouponsState {\r\n    public allCoupons: CouponDetails[] = [];\r\n    public couponsForView: CouponDetails[] = [];\r\n\r\n}\r\n\r\nexport enum CouponsActionType {\r\n    CouponsDownload = \"CouponsDownloaded\",\r\n    CouponsForView = \"CouponsForView\",\r\n}\r\n\r\n\r\nexport interface CouponsAction {\r\n    type: CouponsActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function couponsDownloadedAction(coupons: CouponDetails[]): CouponsAction {\r\n    return { type: CouponsActionType.CouponsDownload, payload: coupons }\r\n}\r\n\r\nexport function couponsForViewAction(coupons: CouponDetails[]): CouponsAction {\r\n    return { type: CouponsActionType.CouponsForView, payload: coupons }\r\n}\r\n\r\nexport function couponsReducer(currentState: CouponsState = new CouponsState(), action: CouponsAction): CouponsState {\r\n    const newState = { ...currentState };\r\n    switch (action.type) {\r\n        case CouponsActionType.CouponsDownload:\r\n            newState.allCoupons = action.payload;\r\n            break;\r\n        case CouponsActionType.CouponsForView:\r\n            newState.couponsForView = action.payload;\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n","class Globals { }\r\n\r\nclass DevelopmentGlobals extends Globals {\r\n    public urls = {\r\n        general: \"http://localhost:8080/couponsProject/\",\r\n        administrator: \"http://localhost:8080/couponsProject/admin/\",\r\n        company: \"http://localhost:8080/couponsProject/company/\",\r\n        customer: \"http://localhost:8080/couponsProject/customer/\",\r\n        guest: \"http://localhost:8080/couponsProject/guest/\"\r\n    }\r\n}\r\n\r\nclass ProductionGlobals extends Globals {\r\n    public urls = {\r\n        administrator: \"/admin/\",\r\n        company: \"/company/\",\r\n        customer: \"/customer/\",\r\n        guest: \"/guest/\",\r\n        general: \"/\"\r\n    }\r\n}\r\n\r\nconst globals = process.env.NODE_ENV === \"production\" ? new ProductionGlobals() : new DevelopmentGlobals();\r\n\r\nexport default globals;","import axios from \"axios\";\r\nimport { couponsDownloadedAction } from \"../redux/couponsState\";\r\nimport store from \"../redux/store\";\r\nimport globals from \"../utils/Globals\";\r\n\r\nexport async function getAllCoupons() {\r\n    await axios.post(globals.urls.guest + \"coupons/get\")\r\n        .then(res => {\r\n            console.log(\"new data:\\n\" + res);\r\n            store.dispatch(couponsDownloadedAction(res.data))\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\n","import { getAllCoupons } from \"../axios/GuestAxiosService\";\r\nimport Company from \"../model/Company\";\r\nimport CouponDetails from \"../model/CouponDetails\";\r\n\r\nexport class CompaniesState {\r\n    public company: Company = new Company();\r\n}\r\n\r\nexport enum CompanyActionType {\r\n    CompanyDetails = \"CompanyDetails\",\r\n    AddCoupon = \"AddCoupon\",\r\n    DeleteCoupon = \"DeleteCoupon\",\r\n    UpdateCoupon = \"UpdateCoupon\",\r\n}\r\n\r\nexport interface CompanyAction {\r\n    type: CompanyActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function companyDetailsAction(company: Company): CompanyAction {\r\n    return { type: CompanyActionType.CompanyDetails, payload: company }\r\n}\r\n\r\nexport function addCouponAction(coupon: CouponDetails): CompanyAction {\r\n    return { type: CompanyActionType.AddCoupon, payload: coupon }\r\n}\r\n\r\nexport function deleteCouponAction(id: string): CompanyAction {\r\n    return { type: CompanyActionType.DeleteCoupon, payload: id }\r\n}\r\n\r\nexport function updateCouponAction(coupon: CouponDetails): CompanyAction {\r\n    return { type: CompanyActionType.UpdateCoupon, payload: coupon }\r\n}\r\n\r\n\r\nexport function companiesReducer(currentState: CompaniesState = new CompaniesState(), action: CompanyAction): CompaniesState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case CompanyActionType.CompanyDetails:\r\n            newState.company = action.payload\r\n            break;\r\n        case CompanyActionType.AddCoupon:\r\n            newState.company.coupons =action.payload;\r\n            getAllCoupons();\r\n            break;\r\n        case CompanyActionType.DeleteCoupon:\r\n            newState.company.coupons.splice(newState.company.coupons.findIndex(item => item.id === parseInt(action.payload)), 1);\r\n            getAllCoupons();\r\n            break;\r\n        case CompanyActionType.UpdateCoupon:\r\n            newState.company.coupons[newState.company.coupons.findIndex(item => item.id == action.payload.id)] = action.payload;\r\n            getAllCoupons();\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n","import CouponDetails from \"./CouponDetails\";\r\n\r\nclass Company{\r\n    public id: number=0;\r\n    public name: string=\"\";\r\n    public email: string=\"\";\r\n    public password: string=\"\";\r\n    public coupons: CouponDetails[] = []; \r\n    \r\n}\r\n\r\nexport default Company;","import { errorsReducer } from './ErrorState';\r\nimport { customersReduser } from './customersState';\r\nimport { adminReducer } from './adminState';\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport { authReducer } from \"./authState\";\r\nimport { couponsReducer } from './couponsState';\r\nimport { applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { companiesReducer } from './companiesState';\r\n\r\nconst reducers = combineReducers({\r\n    authState: authReducer,\r\n    AdminState: adminReducer,\r\n    CompaniesState: companiesReducer,\r\n    CustomersState: customersReduser,\r\n    CouponsState: couponsReducer,\r\n    ErrorsState: errorsReducer,\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;\r\n","import {  Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport {  useHistory } from \"react-router-dom\";\nimport { logoutUser } from \"../../redux/authState\";\nimport store from \"../../redux/store\";\nimport PersonIcon from '@mui/icons-material/Person';\nimport \"./header.css\";\nimport LoginIcon from '@mui/icons-material/Login';\nimport HomeIcon from '@mui/icons-material/Home';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\n\nfunction Header(): JSX.Element {\n    const [ClientType, setType] = useState(store.getState().authState.userDetails.clientType);\n    const [openLogoutBox, setOpenLogoutBox] = useState(false);\n\n    useEffect(() => {\n        const unsubscribeMe = store.subscribe(() => setType(store.getState().authState.userDetails.clientType));\n        return () => unsubscribeMe();\n    }, []);\n\n    let history = useHistory();\n\n    function handleLogoutBox() {\n        setOpenLogoutBox(!openLogoutBox);\n    }\n\n\n    function logout() {\n        setOpenLogoutBox(!openLogoutBox);\n        store.dispatch(logoutUser())\n        console.log(store.getState().authState.userDetails.clientType);\n        home();\n    }\n\n    function logIn() {\n        history.push(\"/login\");\n    }\n\n    function home() {\n        history.push(\"/guest/main\");\n    }\n\n    function privateArea() {\n        history.push(\"/private/screen\");\n    }\n\n    function about() {\n        history.push(\"/about\");\n    }\n\n\n    return (\n        <div className=\"header\">\n            <div className=\"title\">\n                <h1>BETTER LIFE</h1>\n                <h3>BETTER LIFE IN CHEEPER PRICE</h3>\n            </div>\n\n            <div className=\"buttons\">\n                <div>\n                <Button startIcon={<LoginIcon />} onClick={!ClientType?logIn:handleLogoutBox}></Button>\n                    <Dialog\n                        open={openLogoutBox}\n                        onClose={handleLogoutBox}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">\n                            {\"Sure you want to logout?\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">\n                                you will go to home page\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleLogoutBox}>NO, Go Back</Button>\n                            <Button onClick={logout} autoFocus>YES</Button>\n                        </DialogActions>\n                    </Dialog>\n                    <Button startIcon={<PersonIcon />} onClick={privateArea} ></Button>\n                    <Button startIcon={<HomeIcon />} onClick={home} ></Button>\n                    <Button startIcon={<InfoOutlinedIcon />} onClick={about} ></Button>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import { useHistory } from \"react-router-dom\";\nimport \"./couponSmallCard.css\";\nimport store from \"../../redux/store\";\n\ninterface CouponSmallCard {\n    id: number;\n    title: string;\n    price: number;\n    description: string;\n    image: string;\n}\n\nfunction CouponSmallCard(props: CouponSmallCard): JSX.Element {\n    let history = useHistory();\n    let type = store.getState().authState.userDetails.clientType\n    console.log(\"in small card\")\n    console.log(store.getState().CouponsState.allCoupons)\n\n\n\n    function moreInfo() {\n        if (type === \"\") {\n            history.push(\"/coupon/getOne/:\" + props.id)\n        }\n        else { history.push(\"/private/screen/coupon/getOne/:\" + props.id)\n     }\n    }\n\n        function deleteCoupon() {\n            history.push(\"/private/screen/company/coupon/delete/:\" + props.id)\n        }\n\n        function updateCoupon() {\n            history.push(\"/private/screen/company/coupon/update/:\" + props.id)\n        }\n\n        function purchaseCoupon() {\n            if (type === \"\") {\n                history.push(\"/coupon/payment/:\" + props.id)\n            }\n            else {\n                history.push(\"/private/screen/customer/coupon/payment/:\" + props.id)\n            }\n        }\n\n        function edit() {\n            let options;\n            if (type === \"Companies\" && (history.location.pathname != \"/guest/main\")) {\n                options =\n                    <div>\n                        <input type=\"button\" value=\"Update Coupon\" onClick={updateCoupon} />\n                        <br /><br />\n                        <input type=\"button\" value=\"Delete Coupon\" onClick={deleteCoupon} />\n                        <br /><br />\n\n                    </div>\n            }\n            return options;\n        }\n\n        function purchase() {\n            console.log(history.location.pathname)\n            let options;\n            if ((type != \"Companies\" && type != \"Administrator\") || (history.location.pathname === \"/guest/main\")) {\n                if (history.location.pathname != \"/private/screen/customer/coupons\") {\n                    options =\n                        <div>\n                            <input type=\"button\" value=\"purchase Coupon\" onClick={purchaseCoupon} />\n                            <br /><br />\n\n                        </div>\n                }\n            }\n            return options;\n        }\n\n        return (\n            <div className=\"CouponSmallCard smallBox\">\n                <img src={props.image}></img>\n                {props.id} <br />\n                {props.title} <br />\n                description: {props.description} <br />\n                {props.price} $ <br />\n                {purchase()}\n                <input type=\"button\" value=\"See More Information\" onClick={moreInfo} />\n\n                {edit()}\n            </div>\n        );\n    }\n\n    export default CouponSmallCard;\n","import { useState, useEffect } from \"react\";\nimport CouponSmallCard from \"../couponSmallCard/couponSmallCard\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport store from \"../../redux/store\";\nimport \"./viewCouponsSmall.css\";\n\n\nfunction ViewCouponsSmall(): JSX.Element {\n    const [coupons, setData] = useState<CouponDetails[]>(store.getState().CouponsState.couponsForView);\n\n    useEffect(() => {\n        setData(store.getState().CouponsState.couponsForView);\n        const unsubscribeMe = store.subscribe(() => setData(store.getState().CouponsState.couponsForView))\n        return () => { unsubscribeMe(); }\n    }, [])\n\n\n\n    return (\n        <div className=\"viewCouponsSmall\">\n            {coupons.map(item => <CouponSmallCard\n                key={item.id}\n                id={item.id}\n                title={item.title}\n                description={item.description}\n                price={item.price}\n                image={item.image} />\n            )}\n\n        </div>\n    );\n}\n\nexport default ViewCouponsSmall;\n","\nimport { useEffect } from \"react\";\nimport { getAllCoupons } from \"../../axios/GuestAxiosService\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport store from \"../../redux/store\";\nimport \"./getCoupons.css\";\n\n\nfunction GetCoupons(): JSX.Element {\n\n    useEffect(() => {\n        syncSetData();\n    }, []);\n\n    async function syncSetData() {\n        await getAllCoupons();\n        store.dispatch(couponsForViewAction(store.getState().CouponsState.allCoupons))\n    }\n\n\n    return (\n        <div className=\"getCoupons\">\n            <ViewCouponsSmall />\n\n        </div>\n    );\n}\n\nexport default GetCoupons;\n\n\n","import GetCoupons from \"../getCoupons/getCoupons\";\nimport \"./main.css\";\n\nfunction Main(): JSX.Element {\n\n\n    return (\n        <div className=\"main\">\n            <GetCoupons />\n        </div>\n    );\n}\n\nexport default Main;\n\n","import { useState } from \"react\";\nimport \"./about.css\";\n\nfunction About(): JSX.Element {\n    const [myButton, setValue] = useState(\"Contact Us\")\n    const [hide, setHide] = useState(false)\n\n    function readMore() {\n        if (hide) {\n            setValue(\"Contact Us\")\n        }\n        else { setValue(\"close\") }\n        setHide(!hide)\n    }\n\n    function more() {\n        let text;\n        if (hide) {\n            text = <div>\n                <div><h2>Shalom Gottlieb and yehoshua Rosenberg,</h2></div>\n                <div><h4>full stuck Software Developers, graduates of John Bryce's Java full stack course with honors.</h4></div>\n                <div><h4>we are controlled in Java, Spring, Type script and React.</h4></div>\n                <div><h4>Try us, and you won't be disappointed!</h4></div>\n\n                <div><h2> Shalom Gottlieb </h2></div>\n                <div><h2> Phone: 058-6126333</h2></div>\n                <div><h2> email: shalomgottlieb@gmail.com‏ </h2></div>\n\n                <div><h2> yehoshua Rosenberg</h2></div>\n                <div><h2> Phone: 054-2106049</h2></div>\n                <div><h2>  Email: yerozenberg@gmail.com</h2></div>            </div>\n            return text;\n        }\n    }\n\n    return (\n        <div className=\"about\">\n            <div> <h1> About BETTER AND CHEEPER  </h1></div>\n            <div> <h2> We are here to unite people into a huge purchasing power </h2>  </div>\n            <div> On BETTER AND CHEEPER website, countless deals are published at more affordable prices than ever, thanks to the group's purchasing power  </div>\n            <div>  Why pay dearly, when you can get the same thing at a group price, significantly cheaper?  </div>\n            <div> <h2> BETTER AND CHEEPER: because of the reliability, service, and price </h2>  </div>\n            <div> Reliability: We have no hidden clauses or small print that are hidden. You can be sure that you will get what you want, without surprises </div>\n            <div> Service: The businesses we work with have been carefully selected, with an emphasis on a developed service consciousness </div>\n            <div>  And the price? No need to expand. Just take a look at our deals, and you will understand for yourself  </div>\n            {more()}\n            <input type=\"button\" value={myButton} onClick={readMore} />\n\n        </div>\n    );\n}\n\nexport default About;\n","import { useEffect, useState } from \"react\";\nimport \"./couponCard.css\";\n\n\ninterface CouponCardProps {\n    id: number;\n    companyID: number;\n    categoryID: number;\n    title: string;\n    description: string;\n    startDate: string;\n    endDate: string;\n    amount: number;\n    price: number;\n    image: string;\n}\n\n\nfunction CouponCard(props: CouponCardProps): JSX.Element {\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n\n    useEffect(() => {\n        setStartDate(formatDate(props.startDate));\n        setEndDate(formatDate(props.endDate));\n    })\n\n    function formatDate(date: string) {\n        var myNewDate = date.split('T')[0].split(\"-\");\n        var formattedDate = myNewDate[2] + \"/\" + myNewDate[1] + \"/\" + myNewDate[0];\n        return formattedDate;\n    }\n\n    return (\n        <div className=\"couponCard smallBox\">\n            <img src={props.image}></img>\n            {props.id} <br /><br />\n            {props.title}<br />\n            {props.companyID}<br />\n            {props.categoryID} <br />\n            description: {props.description}  <br />\n            {props.price} $ <br />\n            amount: {props.amount} <br />\n            startDate: {startDate}  <br />\n            expDate: {endDate} <br />\n\n\n        </div>\n\n    );\n}\n\nexport default CouponCard;\n\n","\r\nexport default class CouponDetails {\r\n    id: number = 0;\r\n    companyID: number = 0;\r\n    categoryID: number = 0;\r\n    title: string = \"\";\r\n    description: string = \"\";\r\n    startDate: Date = new Date();\r\n    endDate: Date = new Date();\r\n    amount: number = 0;\r\n    price: number = 0;\r\n    image: string = \"\";\r\n}\r\n\r\n\r\n\r\n","import \"./getOneCoupon.css\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CouponCard from \"../couponCard/couponCard\";\nimport store from \"../../redux/store\";\nimport CouponDetails from \"../../model/CouponDetails\";\n\n\ninterface GetOneId {\n    id: string;\n}\n\nfunction GetOneCoupon(props: GetOneId): JSX.Element {\n\n    const [Coupon1, setData] = useState(new CouponDetails());\n    const propId = parseInt(props.id.replace(\":\", \"\"));\n\n    useEffect(() => {\n        console.log(\"in get one coupon\")\n        setData(store.getState().CouponsState.allCoupons.find(coupon => coupon.id == propId));\n    }, []);\n\n    let history = useHistory();\n\n    return (\n        <div className=\"getOneCoupon\">\n            <h2>Coupon #{props.id} details</h2><br />\n            <div className=\"center\">\n                <CouponCard\n                    id={Coupon1.id}\n                    companyID={Coupon1.companyID}\n                    categoryID={Coupon1.categoryID}\n                    title={Coupon1.title}\n                    startDate={Coupon1.startDate.toString()}\n                    endDate={Coupon1.endDate.toString()}\n                    description={Coupon1.description}\n                    amount={Coupon1.amount}\n                    price={Coupon1.price}\n                    image={Coupon1.image} />\n            </div>\n            <input type=\"button\" value=\"back\" onClick={() => history.go(-1)} />\n\n        </div>\n    );\n}\n\nexport default GetOneCoupon;\n","import { Notyf } from \"notyf\";\r\n\r\nclass Notify {\r\n    private notification = new Notyf({ duration: 4000, position: { x: \"center\", y: \"center\" } });\r\n\r\n    public success(message: string) {\r\n        this.notification.success(message);\r\n    }\r\n\r\n    public error(message: string) {\r\n        this.notification.error(message);\r\n    }\r\n}\r\n\r\nconst notify = new Notify();\r\n\r\nexport default notify;","import { error404Action } from './../redux/ErrorState';\r\nimport { logoutUser, updateToken } from './../redux/authState';\r\nimport axios from \"axios\";\r\nimport store from \"../redux/store\";\r\nimport notify from '../utils/Notify';\r\n\r\n\r\n\r\nconst jwtAxios = axios.create();\r\n\r\njwtAxios.interceptors.request.use(request => {\r\n  request.headers = {\r\n    \"Authorization\": store.getState().authState.userDetails.token,\r\n    'Content-Type': 'application/json',\r\n  }\r\n  return request;\r\n});\r\n\r\njwtAxios.interceptors.response.use(\r\n  response => {\r\n    switch (response.status) {\r\n      case 200:\r\n        console.log(\"ok\")\r\n        break;\r\n      case 202:\r\n        console.log(\"accepted\")\r\n        notify.success(response.data)\r\n        break;\r\n      default:\r\n        console.log(response.status);\r\n        break;\r\n    }\r\n    store.dispatch(updateToken(response.headers.authorization))\r\n    return response;\r\n  },\r\n  error => {\r\n    console.log(\"in erorr interceptor\");\r\n    if (error.response.status === 401) {\r\n      console.log(\"token time expired\")\r\n      notify.error(\"connection time expired, log in again to continue\")\r\n      store.dispatch(logoutUser());\r\n      throw error;\r\n    } else {\r\n      switch (error.response.status) {\r\n        case 400:\r\n          notify.error(error.response.data.description)\r\n          throw error\r\n        case 405:\r\n          notify.error(\"error in send\")\r\n          throw error;\r\n        case 404:\r\n          store.dispatch(error404Action(true))\r\n          throw error;\r\n        case 500:\r\n          notify.error(error.response.data.description)\r\n          throw error;\r\n        default:\r\n          throw error;\r\n      }\r\n\r\n    }\r\n  }\r\n);\r\nexport default jwtAxios;\r\n\r\n","import CouponDetails from \"../model/CouponDetails\";\r\nimport { addCouponAction, companyDetailsAction, deleteCouponAction, updateCouponAction } from '../redux/companiesState';\r\nimport store from '../redux/store';\r\nimport globals from '../utils/Globals';\r\nimport jwtAxios from \"./JWTAxios\";\r\n\r\n\r\nexport async function addCouponAxios(coupon: CouponDetails) {\r\n    await jwtAxios.post(globals.urls.company + \"coupon/add\", coupon)\r\n        .then( (response) => {\r\n            console.log(response.data);\r\n            console.log(\"coupon added sucssfuly\");\r\n            companyCouponsAxios();\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n}\r\n\r\nexport async function deleteCouponAxios(id: string) {\r\n    const deleteUrl = globals.urls.company + \"coupon/delete/\" + id\r\n    await jwtAxios.delete(deleteUrl).then((response) => {\r\n        console.log(response.data);\r\n        console.log(\"coupon added sucssfuly\");\r\n        store.dispatch(deleteCouponAction(id));\r\n    })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n}\r\n\r\n\r\nexport async function updateCouponAxios(coupon: CouponDetails) {\r\n    await jwtAxios.post<CouponDetails>(globals.urls.company + \"coupon/update\", coupon)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            store.dispatch(updateCouponAction(coupon))\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n}\r\n\r\nexport async function companyDetailsAxios() {\r\n    const url = globals.urls.company + \"getDetails\";\r\n    console.log(url);\r\n    await jwtAxios.post(url)\r\n        .then(res => {\r\n            store.dispatch(companyDetailsAction(res.data))\r\n            console.log(store.getState().CompaniesState.company)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n}\r\nexport  function companyCouponsAxios() {\r\n    console.log(\"in couponsAxios\")\r\n    const url = globals.urls.company + \"coupon/getAll\";\r\n     jwtAxios.post(url)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            store.dispatch(addCouponAction(res.data));\r\n            console.log(res.data)\r\n        }\r\n        )\r\n        .catch((err) => {\r\n            console.log(\"something was terrebliy wrong\");\r\n        })\r\n\r\n}\r\n","import CouponDetails from \"../model/CouponDetails\";\r\nimport { customerDetailsAction, purchaseCouponAction } from '../redux/customersState';\r\nimport store from '../redux/store';\r\nimport globals from '../utils/Globals';\r\nimport { getAllCoupons } from './GuestAxiosService';\r\nimport jwtAxios from \"./JWTAxios\";\r\n\r\n\r\nexport async function customerDetailsAxios() {\r\n    const url = globals.urls.customer + \"getDetails\";\r\n    await jwtAxios.post(url).then(async (res) => {\r\n        store.dispatch(customerDetailsAction(res.data));\r\n        console.log(\"got customer details:\")\r\n        console.log(res.data)\r\n        console.log(store.getState().CustomersState.customer)\r\n        await getAllCoupons();\r\n\r\n    }\r\n    )\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport async function purchaseCouponAxios(coupon: CouponDetails) {\r\n    await jwtAxios.post(globals.urls.customer + \"coupon/purchase\", coupon)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            console.log(\"coupon purchase secsfuly\")\r\n            store.dispatch(purchaseCouponAction(coupon))\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n}\r\n\r\n","import UserDetails from \"../model/LoginDetails\";\r\nimport { loginUser } from \"../redux/authState\";\r\nimport { wrongDetailsAction } from \"../redux/ErrorState\";\r\nimport store from \"../redux/store\";\r\nimport globals from \"../utils/Globals\";\r\nimport { companyDetailsAxios } from \"./CompanyAxiosService\";\r\nimport { customerDetailsAxios } from \"./CustomerAxiosService\";\r\nimport jwtAxios from \"./JWTAxios\";\r\nimport Backendless from \"backendless\";\r\n\r\n//login\r\nexport async function loginAxios(userDetails: UserDetails) {\r\n    await jwtAxios.post(globals.urls.general + \"loginManager/login\", userDetails)\r\n        .then(async (response) => {\r\n            store.dispatch(loginUser(response.headers.authorization));\r\n            await loginGetDetailsAxios(userDetails.clientType);\r\n            store.dispatch(wrongDetailsAction(false));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            store.dispatch(wrongDetailsAction(true));\r\n\r\n        });\r\n\r\n}\r\nasync function loginGetDetailsAxios(type: string) {\r\n    switch (type) {\r\n        case (\"Companies\"):\r\n            await companyDetailsAxios();\r\n            break;\r\n        case (\"Customers\"):\r\n            console.log(\"in customers\")\r\n            await customerDetailsAxios();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\n\r\n//backendless\r\ninterface myFileName {\r\n    fileURL: string\r\n}\r\n\r\nexport async function fileHandler(myEvent: any) {\r\n    var myFileUrl = \"\";\r\n    console.log(myEvent);\r\n    console.log(\"in file handler\")\r\n    var file: File = myEvent.target.files[0];\r\n    Backendless.initApp(\"A27F4009-7EAA-5BC6-FFF3-6D154177E700\", \"5B256D83-CDA2-4D0A-9EFB-74E6802A143E\");\r\n    await Backendless.Files.upload(file, \"img\", true)\r\n        .then(response => {\r\n            console.log(\"File successfully uploaded. Path to download: \");\r\n            myFileUrl = (response as myFileName).fileURL;\r\n            console.log(myFileUrl);\r\n        })\r\n        .catch(error => {\r\n            console.log(\"error - \" + error.message);\r\n        })\r\n    return myFileUrl;\r\n\r\n}\r\n\r\n","import \"./LoginFC.css\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport LoginDetails from \"../../model/LoginDetails\";\nimport store from \"../../redux/store\";\nimport { Typography, TextField, Select, MenuItem, ButtonGroup, Button } from \"@material-ui/core\";\nimport { loginAxios } from \"../../axios/GeneralAxiosService\";\n\nfunction LoginFC(): JSX.Element {\n    const { register, handleSubmit, setError, formState: { errors } } = useForm<LoginDetails>();\n    const history = useHistory();\n\n    async function send(loginDetails: LoginDetails) {\n        console.log(loginDetails.clientType);\n        await loginAxios(loginDetails);\n        if (store.getState().authState.userDetails.clientType != \"\") { history.push(\"/private/screen\") }\n    }\n\n\n\n\n    return (\n        <div className=\"LoginFC\">\n\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Sign In</Typography><br />\n                <TextField label=\"email\" variant=\"outlined\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"field is required\" }, pattern: {\n                            value: /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'Invalid Email'\n                        }\n                    })} />\n                <span className=\"errors\" > {errors.email && <p>{errors.email.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                    {...register(\"password\", { required: true, minLength: 3, maxLength: 10 })} />\n                <br /><br />\n                select user type <br />\n                <Select style={{ width: 250 }} defaultValue=\"Customers\"/*\"select user type\"*/ {...register(\"clientType\", { required: true })}>\n                    <MenuItem id=\"1\" value=\"Administrator\">System Administrator</MenuItem>\n                    <MenuItem id=\"2\" value=\"Companies\">Company</MenuItem>\n                    <MenuItem id=\"3\" value=\"Customers\">Client</MenuItem>\n                </Select>\n                <br /><br />\n\n                <ButtonGroup variant=\"contained\" >\n                    <Button type=\"submit\" color=\"primary\" > LOGIN </Button>\n                </ButtonGroup>\n\n            </form>\n\n        </div>\n    );\n}\n\nexport default LoginFC;\n\n","import \"./page404.css\";\n\nfunction Page404(): JSX.Element {\n    return (\n        <div className=\"page404\">\n            <h1>404</h1>\n            <h3>page not found</h3>\n            <h2>הכל לטובה :)</h2>\n\t\t\t<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/fBRcn-uPuDg\" title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n        </div>\n    );\n}\n\nexport default Page404;\n","import { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport store from \"../../redux/store\";\nimport \"./privateAside.css\";\n\nfunction PrivateAside(): JSX.Element {\n\n    let history = useHistory();\n    function ADcompanies() { history.push(\"/private/screen/admin/companies\") }\n    function ADcustomers() { history.push(\"/private/screen/admin/customers\") }\n    \n\n    function CPcopAdd() { history.push(\"/private/screen/company/coupon/add\") }\n    function CPdetails() { history.push(\"/private/screen/company/details\") }\n    function CPcoupons() { history.push(\"/private/screen/company/coupons\") }\n\n    function CSpurchase() { history.push(\"/private/screen/customer/purchase\") }\n    function CSdetails() { history.push(\"/private/screen/customer/details\") }\n    function CScoupons() { history.push(\"/private/screen/customer/coupons\") }\n\n\n    switch (store.getState().authState.userDetails.clientType) {\n        case \"Administrator\":\n            return (\n                <div className=\"privateAside\">\n                    admin main menu <br /><hr />\n                    <Button type=\"submit\" color=\"primary\" onClick={ADcompanies} variant=\"contained\" fullWidth>Companies</Button>\n                    <Button type=\"submit\" color=\"primary\" onClick={ADcustomers} variant=\"contained\" fullWidth>Customers</Button>\n\n                </div>\n            );\n          \n        case \"Companies\":\n            return (\n                <div className=\"privateAside\">\n                    company main menu <br /><hr />\n                    <Button type=\"submit\" color=\"primary\" onClick={CPcopAdd} variant=\"contained\" fullWidth>Add Coupon</Button>\n                    <Button type=\"submit\" color=\"primary\" onClick={CPcoupons} variant=\"contained\" fullWidth>MY Coupons</Button>\n                    <Button type=\"submit\" color=\"primary\" onClick={CPdetails} variant=\"contained\" fullWidth>View my details</Button>\n                </div>\n            );\n        \n\n        case \"Customers\":\n            return (\n                <div className=\"privateAside\">\n                    customer main menu <br /><hr />\n                    <Button type=\"submit\" color=\"primary\" onClick={CSpurchase} variant=\"contained\" fullWidth>purchase Coupons</Button>\n                    <Button type=\"submit\" color=\"primary\" onClick={CScoupons} variant=\"contained\" fullWidth>MY Coupons</Button>\n                    <Button type=\"submit\" color=\"primary\" onClick={CSdetails} variant=\"contained\" fullWidth>View my details</Button>\n                </div>\n            );\n          \n        default:\n            return (\n                <div>\n\n                </div>\n\n            )\n    }\n\n}\n\nexport default PrivateAside;\n\n\n","import Company from \"../model/Company\";\r\nimport Customer from \"../model/Customer\";\r\nimport { addCompanyAction, addCustomerAction, companyDownloadedAction, customerDownloadedAction, deleteCompanyAction, deleteCustomerAction, updateCompanyAction, updateCustomerAction } from \"../redux/adminState\";\r\nimport store from \"../redux/store\";\r\nimport globals from \"../utils/Globals\";\r\nimport jwtAxios from \"./JWTAxios\";\r\n\r\n//companies\r\nexport async function getAllCompaniesAxios() {\r\n    await jwtAxios.post(globals.urls.administrator + \"company/getAll\")\r\n        .then(res => {\r\n            console.log(\"new data:\\n\" + res);\r\n            store.dispatch(companyDownloadedAction(res.data))\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport async function addCompanyAxios(company: Company) {\r\n    await jwtAxios.post(globals.urls.administrator + \"company/add\", company)\r\n        .then((response) => {\r\n            console.log(\"data arraived\")\r\n            console.log(response);\r\n            store.dispatch(addCompanyAction(company))\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        });\r\n\r\n}\r\n\r\nexport async function updateCompanyAxios(company: Company) {\r\n    await jwtAxios.post<Company>(globals.urls.administrator + \"company/update\", company)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            store.dispatch(updateCompanyAction(company))\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n}\r\n\r\nexport async function deleteCompanyAxios(id: string) {\r\n    await jwtAxios.delete(globals.urls.administrator + \"company/delete/:\" + id)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            store.dispatch(deleteCompanyAction(parseInt(id)))\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n}\r\n\r\n\r\n//customers\r\nexport async function getAllCustomersAxios() {\r\n    await jwtAxios.post(globals.urls.administrator + \"customer/getAll\")\r\n        .then(res => {\r\n            console.log(\"new data:\\n\" + res);\r\n            store.dispatch(customerDownloadedAction(res.data))\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport async function addCustomerAxios(customer: Customer) {\r\n    await jwtAxios.post(globals.urls.administrator + \"customer/add\", customer)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            store.dispatch(addCustomerAction(customer))\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        });\r\n}\r\n\r\nexport async function updateCustomerAxios(customer: Customer) {\r\n    await jwtAxios.post<Customer>(globals.urls.administrator + \"customer/update\", customer)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            store.dispatch(updateCustomerAction(customer));\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n}\r\n\r\nexport async function deleteCustomerAxios(id: string) {\r\n    await jwtAxios.delete(globals.urls.administrator + \"customer/delete/:\" + id)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            store.dispatch(deleteCustomerAction(parseInt(id)))\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n}\r\n\r\n","import { Typography, TextField, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport \"./addCompany.css\";\nimport Company from \"../../model/Company\";\nimport { addCompanyAxios } from \"../../axios/AdminAxiosService\";\nimport store from \"../../redux/store\";\n\nfunction AddCompany(): JSX.Element {\n    const { register, handleSubmit, setError, formState: { errors } } = useForm<Company>();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n    }, []);\n\n    async function send(company: Company) {\n        await addCompanyAxios(company)\n    }\n\n\n    return (\n        <div className=\"addCompany\">\n\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Add New Company</Typography><br />\n                <TextField label=\"name\" variant=\"outlined\"\n                    {...register(\"name\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.name && <p>{errors.name.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"email\" variant=\"outlined\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"field is required\" },\n                        pattern: {\n                            value: /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'Invalid Email'\n                        }\n                    })} />\n                <span className=\"errors\"> {errors.email && <p>{errors.email.message}</p>}</span>\n\n                <LockOpenIcon style={{ fontSize: 40, margin: 10 }} />\n                <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                    {...register(\"password\", { required: true, minLength: 3, maxLength: 10 })} />\n                <span className=\"errors\"> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n            </form>\n            <br /><br />\n\n        </div>\n    );\n}\n\nexport default AddCompany;\n\n","import { Typography, TextField, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport Customer from \"../../model/Customer\";\nimport \"./addCustomer.css\";\nimport { addCustomerAxios } from \"../../axios/AdminAxiosService\";\nimport store from \"../../redux/store\";\n\nfunction AddCustomer(): JSX.Element {\n    const { register, handleSubmit, setError, formState: { errors } } = useForm<Customer>();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n    }, [])\n\n    async function send(customer: Customer) {\n        await addCustomerAxios(customer);\n    }\n\n    return (\n        <div className=\"addCustomer\">\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Add New Customer</Typography><br />\n                <TextField label=\"firstName\" variant=\"outlined\"\n                    {...register(\"firstName\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.firstName && <p>{errors.firstName.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"lastName\" variant=\"outlined\"\n                    {...register(\"lastName\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.lastName && <p>{errors.lastName.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"email\" variant=\"outlined\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"field is required\" }, pattern: {\n                            value: /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'Invalid Email'\n                        }\n                    })} />\n                <span className=\"errors\"> {errors.email && <p>{errors.email.message}</p>}</span>\n                <LockOpenIcon style={{ fontSize: 40, margin: 10 }} />\n                <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                    {...register(\"password\", { required: true, minLength: 3, maxLength: 10 })} />\n                <span className=\"errors\"> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n            </form>\n        </div>\n    );\n}\n\nexport default AddCustomer;\n\n","import { Button, ButtonGroup, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport store from \"../../redux/store\";\nimport { addCouponAxios } from \"../../axios/CompanyAxiosService\";\nimport \"./addCoupon.css\";\nimport { fileHandler } from \"../../axios/GeneralAxiosService\";\n\n\nfunction AddCoupon(): JSX.Element {\n    const { register, handleSubmit, setError, formState: { errors }, setValue } = useForm<CouponDetails>();\n    const [imgEvent, setImgEvent] = useState();\n    let history = useHistory();\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Companies\") { history.push(\"/private/screen\") }\n    }, []);\n\n    async function send(coupon: CouponDetails) {\n        if (imgEvent!=undefined) {\n            let url = await fileHandler(imgEvent)\n            console.log(url)\n            if(url!=\"error\"){coupon.image = url};\n        }\n        await addCouponAxios(coupon);\n    }\n\n   \n\n    function imageHandler(event:any) {\n                setImgEvent(event);\n    }\n\n    // async function send(coupon: CouponDetails) {\n    //     let url = await fileHandler(imgEvent)\n    //     setValue(\"image\", url);\n    //     await addCouponAxios(coupon);\n    // };\n\n    // async function imageHandler(myEvent: any) {\n    //     setImgEvent(myEvent);\n    // }\n\n    return (\n        <div className=\"addCoupon\">\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Add New Coupon</Typography><br />\n                <TextField label=\"title\" variant=\"outlined\"\n                    {...register(\"title\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.title && <p>{errors.title.message}</p>}</span>\n                <br /><br />\n                Category<br />\n                <Select style={{ width: 250 }} {...register(\"categoryID\", {\n                    required: { value: true, message: \"this field is required\" }\n                })}>\n                    <MenuItem value={\"0\"}>FOOD</MenuItem>\n                    <MenuItem value={\"1\"}>ELECTRICITY</MenuItem>\n                    <MenuItem value={\"2\"}>RESTAURANT </MenuItem>\n                    <MenuItem value={\"3\"}>VACATION</MenuItem>\n                </Select>\n                <br />\n                <span className=\"errors\"> {errors.categoryID && <p>{errors.categoryID.message}</p>}</span>\n                <br />\n                <TextField label=\"description\" variant=\"outlined\"\n                    {...register(\"description\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.description && <p>{errors.description.message}</p>}</span>\n                <br /><br />\n                <TextField\n                    {...register(\"startDate\")}\n                    id=\"datetime-local\"\n                    label=\"Start Date\"\n                    type=\"datetime-local\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <br /><br />\n                <TextField\n                    {...register(\"endDate\")}\n                    id=\"date-local\"\n                    label=\"End Date\"\n                    type=\"datetime-local\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <br /><br />\n\n                <TextField type=\"number\" label=\"amount\" variant=\"outlined\" {...register(\"amount\", {\n                    required: { value: true, message: \"this field is required\" },\n                    min: { value: 1, message: \"minimum amount is 1 Piece\" },\n\n                })} />\n                <br />\n                <span className=\"errors\"> {errors.amount && <p>{errors.amount.message}</p>}</span>\n                <br />\n                <TextField type=\"number\" label=\"price\" variant=\"outlined\" {...register(\"price\", {\n                    required: { value: true, message: \"this field is required\" },\n                    min: { value: 1, message: \"minimum price is 1 NIS\" },\n                })} />\n                <br />\n                <span className=\"errors\"> {errors.price && <p>{errors.price.message}</p>}</span>\n                <br />\n                <input type=\"file\" name=\"myImg\" accept=\"image/*\" onChange={imageHandler} />\n                <span className=\"errors\"> {errors.image && <p>{errors.image.message}</p>}</span>\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n            </form>\n        </div>\n    );\n}\n\nexport default AddCoupon;\n","import { useHistory } from \"react-router\";\nimport { deleteCouponAxios } from \"../../axios/CompanyAxiosService\";\nimport \"./deleteCoupon.css\";\nimport { useEffect } from \"react\";\nimport store from \"../../redux/store\";\n\n\ninterface DeleteId {\n    id: string;\n}\n\nfunction DeleteCoupon(props: DeleteId): JSX.Element {\n    let history = useHistory();\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Companies\") { history.push(\"/private/screen\") }\n    }, []);\n\n\n    async function deleteCoupon() {\n        await deleteCouponAxios(props.id);\n        history.push(\"/company/coupon/getAll\")\n    }\n    return (\n        <div className=\"deleteCoupon smallBox\">\n            <h2>are you sure you want to delete this coupon?</h2>\n            <input type=\"button\" value=\"yes, i want to delete it\" onClick={deleteCoupon} />\n        </div>\n    );\n}\n\nexport default DeleteCoupon;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport \"./updateCoupon.css\";\nimport { useForm } from \"react-hook-form\";\nimport Coupon from \"../../model/CouponDetails\";\nimport store from \"../../redux/store\";\nimport { Button, ButtonGroup, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport { updateCouponAxios } from \"../../axios/CompanyAxiosService\";\nimport { fileHandler } from \"../../axios/GeneralAxiosService\";\n\ninterface Id {\n    id: string;\n}\n\nfunction UpdateCoupon(props: Id): JSX.Element {\n    const { register, handleSubmit, formState: { errors }, setValue } = useForm<CouponDetails>();\n    const [imgEvent, setImgEvent] = useState<any>();\n    let history = useHistory();\n    const propId = parseInt(props.id.replace(\":\", \"\"));\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Companies\") { history.push(\"/private/screen\") }\n    }, []);\n\n\n    const CouponNow = store.getState().CompaniesState.company.coupons.find(coupon => coupon.id == propId)\n    console.log(CouponNow);\n    setValue(\"id\", CouponNow.id);\n    setValue(\"companyID\", CouponNow.companyID);\n    setValue(\"categoryID\", CouponNow.categoryID);\n    setValue(\"title\", CouponNow.title);\n    setValue(\"description\", CouponNow.description);\n    setValue(\"amount\", CouponNow.amount);\n    setValue(\"price\", CouponNow.price);\n    setValue(\"image\", CouponNow.image);\n\n    async function send(coupon: Coupon) {\n        if (imgEvent!=undefined) {\n            let url = await fileHandler(imgEvent)\n            console.log(url)\n            if(url!=\"error\"){coupon.image = url};\n            console.log(CouponNow);\n        }\n        await updateCouponAxios(coupon);\n    }\n\n   \n\n    function imageHandler(event:any) {\n                setImgEvent(event);\n    }\n  \n\n    return (\n        <div className=\"updateCoupon\">\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">update Coupon{CouponNow.title}</Typography><br />\n                <TextField label=\"title\" variant=\"outlined\"\n                    {...register(\"title\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.title && <p>{errors.title.message}</p>}</span>\n                <br /><br />\n\n                <br />\n                Category<br />\n                <Select style={{ width: 250 }} defaultValue={CouponNow.categoryID} {...register(\"categoryID\", {\n                    required: { value: true, message: \"this field is required\" }\n                })}>\n                    { }\n                    <MenuItem value={\"FOOD\"}>FOOD</MenuItem>\n                    <MenuItem value={\"ELECTRICITY\"}>ELECTRICITY</MenuItem>\n                    <MenuItem value={\"RESTAURANT\"}>RESTAURANT </MenuItem>\n                    <MenuItem value={\"VACATION\"}>VACATION</MenuItem>\n                </Select>\n                <br />\n                <span className=\"errors\"> {errors.categoryID && <p>{errors.categoryID.message}</p>}</span>\n                <br />\n                <TextField label=\"description\" variant=\"outlined\"\n                    {...register(\"description\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.description && <p>{errors.description.message}</p>}</span>\n                <br /><br />\n\n                <TextField\n                    {...register(\"startDate\")}\n                    id=\"datetime-local\"\n                    label=\"Start Date\"\n                    type=\"datetime-local\"\n                    defaultValue={CouponNow.startDate.toString().split(\":\")[0] + \":\" + (CouponNow.startDate.toString().split(\":\")[1])}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <br /><br />\n                <TextField\n                    {...register(\"endDate\")}\n                    id=\"datetime-local\"\n                    label=\"End Date\"\n                    type=\"datetime-local\"\n                    defaultValue={CouponNow.endDate.toString().split(\":\")[0] + \":\" + (CouponNow.endDate.toString().split(\":\")[1])}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <br /><br />\n\n\n                <TextField type=\"number\" label=\"amount\" variant=\"outlined\" {...register(\"amount\", {\n                    required: { value: true, message: \"this field is required\" },\n                    min: { value: 1, message: \"minimum amount is 1 Piece\" },\n\n                })} />\n                <br />\n                <span className=\"errors\"> {errors.amount && <p>{errors.amount.message}</p>}</span>\n                <br />\n                <TextField type=\"number\" label=\"price\" variant=\"outlined\" {...register(\"price\", {\n                    required: { value: true, message: \"this field is required\" },\n                    min: { value: 0, message: \"minimum price is 0 NIS\" },\n                })} />\n                <br />\n                <span className=\"errors\"> {errors.price && <p>{errors.price.message}</p>}</span>\n                <br />\n                <label>Image</label> <br />\n                <img className=\"img\" src={CouponNow.image} ></img>\n                <input type=\"file\" name=\"myImg\" accept=\"image/*\" onChange={imageHandler} />\n\n                <br /><br />\n\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n                <input type=\"button\" value=\"back\" onClick={() => history.go(-1)} />\n\n\n            </form>\n        \n        </div>\n    );\n}\n\nexport default UpdateCoupon;\n","import \"./companyDetails.css\";\nimport { useEffect } from \"react\";\nimport store from \"../../redux/store\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction CompanyDetails(): JSX.Element {\n    let history = useHistory();\n    const Company1 = store.getState().CompaniesState.company;\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Companies\") { history.push(\"/private/screen\") }\n    }, []);\n\n    return (\n        <div className=\"companyDetails\">\n            my details\n            <div>\n                id: {Company1.id} <br />\n                name: {Company1.name} <br />\n                email: {Company1.email} <br />\n                password: {Company1.password} <br />\n                <input type=\"button\" value=\"Back\" onClick={() => history.go(-1)} />\n                <br /><br />\n\n            </div>\n        </div>\n    );\n}\n\nexport default CompanyDetails;\n","import { useEffect } from \"react\";\nimport store from \"../../redux/store\";\nimport \"./customerDetails.css\";\nimport { useHistory } from \"react-router\";\n\n\nfunction CustomerDetails(): JSX.Element {\n    let history = useHistory();\n    let Customer1 = store.getState().CustomersState.customer;\n\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Customers\") { history.push(\"/private/screen\") }\n    }, []);\n\n    return (\n        <div className=\"customerDetails\">\n            my details\n            <div>\n\n                id: {Customer1.id} <br />\n                name: {Customer1.firstName} {Customer1.lastName}<br />\n                email: {Customer1.email} <br />\n                password: {Customer1.password} <br />\n                <input type=\"button\" value=\"Back\" onClick={() => history.go(-1)} />\n                <br /><br />\n\n            </div>\n        </div>\n    );\n}\n\nexport default CustomerDetails;\n","import { useEffect } from \"react\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport store from \"../../redux/store\";\nimport \"./privateMain.css\";\n\nfunction PrivateMain(): JSX.Element {\n    useEffect(() => {\n        store.dispatch(couponsForViewAction(store.getState().CouponsState.allCoupons))\n        console.log(\"in main\")\n    }\n        , []);\n\n\n    switch (store.getState().authState.userDetails.clientType) {\n        case \"Administrator\":\n            return (\n                <div className=\"privateMain\">\n\n                    Wellcom Admin <br /><br />\n                    what wold you like to do?\n\n\n                </div>\n            );\n            break;\n\n        case \"Companies\":\n            return (\n                <div className=\"privateMain\">\n\n                    Wellcom Company <br /><br />\n                    what wold you like to do?\n\n                </div>\n            );\n            break;\n\n        case \"Customers\":\n            return (\n                <div className=\"privateMain\">\n                    wellcome customer\n\n                    <ViewCouponsSmall />\n\n                </div>\n            );\n            break;\n\n        default:\n            return (\n                <div>\n                </div>\n\n            )\n    }\n\n}\n\nexport default PrivateMain;\n","import \"./paymentPage.css\";\nimport {  useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport store from \"../../redux/store\";\nimport { useHistory } from \"react-router\";\nimport { purchaseCouponAxios } from \"../../axios/CustomerAxiosService\";\n\ninterface GetCoupon {\n    id: string;\n}\n\n\n\nfunction PaymentPage(props: GetCoupon): JSX.Element {\n    console.log(props.id)\n    let history = useHistory();\n    const couponId = parseInt(props.id.replace(\":\", \"\"));\n    const myCoupon = store.getState().CouponsState.allCoupons.find(CouponDetails => CouponDetails.id == couponId);\n    const [buy, setBuy] = useState<boolean>(false);\n\n    async function purchase() {\n        if (store.getState().authState.userDetails.clientType == \"Customers\") {\n            await purchaseCouponAxios(myCoupon);\n        }\n        else {\n            setBuy(true);\n        }\n    }\n\n    function login() {\n        history.push(\"/login\")\n    }\n\n    function showLogin() {\n        if (buy) {\n            return <div>\n                log in as client\n                <input type=\"button\" value=\"LOGIN\" onClick={login} />\n            </div>\n\n        }\n    }\n    return (\n        <div className=\"purchaseCoupon\">\n            <h2> enter credit card details:</h2>\n            number:_________________\n            cvv:_________\n            exp:___ ___\n            name:________\n            <br /><br />\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\" onClick={purchase}> I want to buy it!! </Button>\n             \n            {showLogin()}\n        </div>\n    );\n}\n\nexport default PaymentPage;","import { Select, MenuItem, Button, ButtonGroup, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport store from \"../../redux/store\";\nimport \"./companyCoupons.css\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport { useHistory } from \"react-router\";\n\n\nfunction CompanyCoupons(): JSX.Element {\n    const [searchType, setType] = useState(\"\");\n    const { register, handleSubmit, setError, formState: { errors } } = useForm<CouponDetails>();\n    let history = useHistory();\n\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Companies\") { history.push(\"/private/screen\") }\n        store.dispatch(couponsForViewAction(store.getState().CompaniesState.company.coupons));\n    }, []);\n\n\n    function typeSet(args: any) {\n        setType(args.target.value);\n        console.log(searchType);\n    }\n\n    function searchBy() {\n        switch (searchType) {\n            case \"All\":\n                return <div></div>\n            case \"Id\":\n                return <div>\n                    <TextField type=\"number\" label=\"id\" variant=\"outlined\" {...register(\"id\", {\n                        required: { value: true, message: \"this field is required\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errors.price && <p>{errors.price.message}</p>}</span>\n\n                </div>\n            case \"MaxPrice\":\n                return <div>\n                    <TextField type=\"number\" label=\"price\" variant=\"outlined\" {...register(\"price\", {\n                        required: { value: true, message: \"this field is required\" },\n                        min: { value: 0, message: \"minimum price is 0 NIS\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errors.price && <p>{errors.price.message}</p>}</span>\n\n                </div>\n            case \"Category\":\n                return <div>\n                    Category<br />\n                    <Select style={{ width: 250 }} {...register(\"categoryID\", {\n                        required: { value: true, message: \"this field is required\" }\n                    })}>\n                        <MenuItem value={\"FOOD\"}>FOOD</MenuItem>\n                        <MenuItem value={\"ELECTRICITY\"}>ELECTRICITY</MenuItem>\n                        <MenuItem value={\"RESTAURANT\"}>RESTAURANT </MenuItem>\n                        <MenuItem value={\"VACATION\"}>VACATION</MenuItem>\n                    </Select>\n                    <br />\n                    <span className=\"errors\"> {errors.categoryID && <p>{errors.categoryID.message}</p>}</span>\n\n                </div>\n        }\n    }\n\n    function search(couponFilter: CouponDetails) {\n        const couponsInStore = store.getState().CompaniesState.company.coupons;\n        switch (searchType) {\n            case \"All\":\n                store.dispatch(couponsForViewAction(couponsInStore));\n                break;\n            case \"Id\":\n                let couponsArray: CouponDetails[] = [];\n                const idCoupon = couponsInStore.find(coupon => coupon.id == couponFilter.id)\n                if (idCoupon) { couponsArray.push(idCoupon) };\n                store.dispatch(couponsForViewAction(couponsArray));\n                break;\n            case \"MaxPrice\":\n                store.dispatch(couponsForViewAction(couponsInStore.filter(coupon => coupon.price <= couponFilter.price)));\n                break;\n            case \"Category\":\n                store.dispatch(couponsForViewAction(couponsInStore.filter(coupon => coupon.categoryID === couponFilter.categoryID)));\n        }\n    }\n\n    return (\n\n        <div className=\"companyCoupons\">\n\n            <Select style={{ width: 250 }} defaultValue=\"All\" onChange={typeSet}  >\n                <MenuItem value={\"All\"}>All</MenuItem>\n                <MenuItem value={\"MaxPrice\"}>Max Price</MenuItem>\n                <MenuItem value={\"Category\"}>Category </MenuItem>\n                <MenuItem value={\"Id\"}>Id</MenuItem>\n            </Select>\n            <form onSubmit={handleSubmit(search)}>\n\n                {searchBy()}\n\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\" >Search</Button>\n                </ButtonGroup>\n\n                <br />\n            </form>\n\n            <ViewCouponsSmall />\n        </div>\n    );\n}\n\nexport default CompanyCoupons;\n","import \"./customerCoupons.css\";\nimport { Select, MenuItem, Button, ButtonGroup, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport store from \"../../redux/store\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport { useHistory } from \"react-router\";\n\n\nfunction CustomerCoupons(): JSX.Element {\n    const [searchType, setType] = useState(\"\");\n    const { register, handleSubmit, formState: { errors } } = useForm<CouponDetails>();\n    let history = useHistory();\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Customers\") { history.push(\"/private/screen\") }\n        store.dispatch(couponsForViewAction(store.getState().CustomersState.customer.coupons));\n    }\n        , []);\n\n    function typeSet(args: any) {\n        setType(args.target.value);\n        console.log(searchType);\n    }\n\n    function searchBy() {\n        switch (searchType) {\n            case \"All\":\n                return <div></div>\n            case \"MaxPrice\":\n                return <div>\n                    <TextField type=\"number\" label=\"price\" variant=\"outlined\" {...register(\"price\", {\n                        required: { value: true, message: \"this field is required\" },\n                        min: { value: 1, message: \"minimum price is 1 NIS\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errors.price && <p>{errors.price.message}</p>}</span>\n\n                </div>\n            case \"Category\":\n                return <div>\n                    Category<br />\n                    <Select style={{ width: 250 }} {...register(\"categoryID\", {\n                        required: { value: true, message: \"this field is required\" }\n                    })}>\n                        <MenuItem value={\"FOOD\"}>FOOD</MenuItem>\n                        <MenuItem value={\"ELECTRICITY\"}>ELECTRICITY</MenuItem>\n                        <MenuItem value={\"RESTAURANT\"}>RESTAURANT </MenuItem>\n                        <MenuItem value={\"VACATION\"}>VACATION</MenuItem>\n                    </Select>\n                    <br />\n                    <span className=\"errors\"> {errors.categoryID && <p>{errors.categoryID.message}</p>}</span>\n\n                </div>\n        }\n    }\n\n    function search(couponFilter: CouponDetails) {\n        console.log(\"couponFilter\")\n        console.log(couponFilter)\n        const couponsInStore = store.getState().CustomersState.customer.coupons;\n        switch (searchType) {\n            case \"All\":\n                store.dispatch(couponsForViewAction(couponsInStore));\n                break;\n            case \"MaxPrice\":\n                store.dispatch(couponsForViewAction(couponsInStore.filter(coupon => coupon.price <= couponFilter.price)));\n                break;\n            case \"Category\":\n                store.dispatch(couponsForViewAction(couponsInStore.filter(coupon => coupon.categoryID === couponFilter.categoryID)));\n                break;\n        }\n    }\n\n    return (\n\n        <div className=\"customerCoupons\">\n\n            <Select style={{ width: 250 }} defaultValue=\"All\" onChange={typeSet}  >\n                <MenuItem value={\"All\"}>All</MenuItem>\n                <MenuItem value={\"MaxPrice\"}>Max Price</MenuItem>\n                <MenuItem value={\"Category\"}>Category </MenuItem>\n            </Select>\n            <form onSubmit={handleSubmit(search)}>\n\n                {searchBy()}\n\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\" >Search</Button>\n                </ButtonGroup>\n\n                <br />\n            </form>\n\n            <ViewCouponsSmall />\n        </div>\n    );\n}\n\nexport default CustomerCoupons;\n\n\n\n","import { Typography, TextField, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Customer from \"../../model/Customer\";\nimport store from \"../../redux/store\";\nimport \"./updateCustomer.css\";\nimport { updateCustomerAxios } from \"../../axios/AdminAxiosService\";\n\ninterface Id {\n    id: number;\n}\n\n\nfunction UpdateCustomer(props: Id): JSX.Element {\n    const { register, handleSubmit, formState: { errors }, setValue } = useForm<Customer>();\n    let history = useHistory();\n    const CustomerNow = store.getState().AdminState.customers.find(customer => customer.id == props.id)\n    setValue(\"id\", CustomerNow.id);\n    setValue(\"firstName\", CustomerNow.firstName);\n    setValue(\"lastName\", CustomerNow.lastName);\n    setValue(\"email\", CustomerNow.email);\n    setValue(\"password\", CustomerNow.password);\n    setValue(\"coupons\", CustomerNow.coupons);\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n    }, [])\n\n    async function send(customer: Customer) {\n        await updateCustomerAxios(customer);\n    }\n\n    return (\n        <div className=\"updateCustomer\">\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Update Customer {CustomerNow.firstName} {CustomerNow.lastName}</Typography><br />\n                <TextField label=\"firstName\" variant=\"outlined\"\n                    {...register(\"firstName\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.firstName && <p>{errors.firstName.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"lastName\" variant=\"outlined\"\n                    {...register(\"lastName\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.lastName && <p>{errors.lastName.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"email\" variant=\"outlined\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"field is required\" }, pattern: {\n                            value: /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'Invalid Email'\n                        }\n                    })} />\n                <span className=\"errors\"> {errors.email && <p>{errors.email.message}</p>}</span>\n                <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                    {...register(\"password\", { required: true, minLength: 3, maxLength: 10 })} />\n                <span className=\"errors\"> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateCustomer;\n\n\n","import { Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport { Paper, TableContainer, Table, TableHead, TableRow, TableBody, TablePagination, TableCell } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteCustomerAxios, getAllCustomersAxios } from \"../../axios/AdminAxiosService\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport Customer from \"../../model/Customer\";\nimport LoginDetails from \"../../model/LoginDetails\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport store from \"../../redux/store\";\nimport \"./adminCustomers.css\";\nimport PasswordIcon from '@mui/icons-material/Password';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport AppsIcon from '@mui/icons-material/Apps';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport UpdateCustomer from \"../updateCustomer/updateCustomer\";\nimport addCompany from \"../addCompany/addCompany\";\nimport { loginAxios } from \"../../axios/GeneralAxiosService\";\n\n\ninterface Column {\n    id: 'id' | 'firstName' | 'lastName' | 'email' | 'password' | 'coupons' | 'update' | 'deleteIt';\n    label: string;\n    minWidth?: number;\n    align?: 'right';\n    format?: (value: number) => string;\n}\n\nfunction AdminCustomers(): JSX.Element {\n\n    const [customers, setData] = useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [passss, setPass] = useState(\"***\");\n    const [CustomerInRow, setCustomerInRow] = useState<Customer>(new Customer());\n    const [openPasswordBox, setOpenPasswordBox] = React.useState(false);\n    const [isAllow, setAllowedPassword] = React.useState(false);\n    const { register, handleSubmit, setError, formState: { errors }, setValue } = useForm<LoginDetails>();\n    setValue(\"clientType\", \"Administrator\")\n    const [openUpdateBox, setOpenUpdateBox] = React.useState(false);\n    const { register: registerCust, handleSubmit: handleSubmitCust, setError: setErrorCust, formState: { errors: errorsCust }, setValue: setValueCust } = useForm<Customer>();\n    const [openCouponsBox, setOpenCouponsBox] = React.useState(false);\n    const [openDeleteBox, setOpenDeleteBox] = React.useState(false);\n    const [searchType, setType] = useState(\"\");\n    let history = useHistory();\n\n    React.useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n        syncSetData();\n    }, []);\n\n    function addCustomer() {\n        history.push(\"/private/screen/admin/customer/add\");\n    }\n\n    async function syncSetData() {\n        await getAllCustomersAxios();\n        setData(store.getState().AdminState.customers);\n    }\n\n    function searchTypeSet(args: any) {\n        setType(args.target.value);\n    }\n\n    function searchBy() {\n        switch (searchType) {\n            case \"All\":\n                return <div></div>\n            case \"Id\":\n                return <div>\n                    <TextField type=\"number\" label=\"id\" variant=\"outlined\" {...registerCust(\"id\", {\n                        required: { value: true, message: \"this field is required\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errorsCust.id && <p>{errorsCust.id.message}</p>}</span>\n                </div>\n\n            case \"FirstName\":\n                return <div>\n                    <TextField label=\"firstName\" variant=\"outlined\" {...registerCust(\"firstName\", {\n                        required: { value: true, message: \"this field is required\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errorsCust.firstName && <p>{errorsCust.firstName.message}</p>}</span>\n                </div>\n\n            case \"LastName\":\n                return <div>\n                    <TextField label=\"lastName\" variant=\"outlined\" {...registerCust(\"lastName\", {\n                        required: { value: true, message: \"this field is required\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errorsCust.lastName && <p>{errorsCust.lastName.message}</p>}</span>\n\n                </div>\n\n\n        }\n    }\n\n    function search(customer: Customer) {\n        switch (searchType) {\n            case \"All\":\n                setData(store.getState().AdminState.customers);\n                break;\n            case \"Id\":\n                let customersArray: Customer[] = [];\n                const myCustomer = store.getState().AdminState.customers.find(customer1 => customer1.id == customer.id)\n                if (myCustomer) { customersArray.push(myCustomer) };\n                setData(customersArray);\n                break;\n            case \"FirstName\":\n                let customersFirstNameArray: Customer[] = [];\n                const mycustomerFirstName = store.getState().AdminState.customers.filter(customer1 => customer1.firstName.includes(customer.firstName));\n                if (mycustomerFirstName) { mycustomerFirstName.map((customerItem) => customersFirstNameArray.push(customerItem)); }\n                setData(customersFirstNameArray);\n                break;\n            case \"LastName\":\n                let customersLastNameArray: Customer[] = [];\n                const mycustomerLastName = store.getState().AdminState.customers.filter(customer1 => customer1.lastName.includes(customer.lastName));\n                if (mycustomerLastName) { mycustomerLastName.map((customerItem) => customersLastNameArray.push(customerItem)); }\n                setData(customersLastNameArray);\n                break;\n        }\n    }\n\n    function showPassword() {\n        let show = <div>***</div>;\n        if (isAllow) { show = <div>{passss}</div> }\n        return show\n    }\n\n    async function chekAdminDetails(loginDetails: LoginDetails) {\n        await loginAxios(loginDetails);\n        if (!store.getState().ErrorsState.wrongDetails) {\n            setAllowedPassword(true)\n        }\n    }\n\n    async function deleteCustomer() {\n        await deleteCustomerAxios(CustomerInRow.id.toString());\n    }\n\n    const handleOpenPasswordBox = (event: string) => {\n        setOpenPasswordBox(!openPasswordBox);\n        setPass(event);\n    };\n\n    const handleClosePasswordBox = () => {\n        setOpenPasswordBox(!openPasswordBox);\n        setAllowedPassword(false)\n    };\n\n    const handleOpenUpdateBox = (customer: Customer) => {\n        setOpenUpdateBox(!openUpdateBox);\n        setCustomerInRow(customer);\n    };\n\n    const handleCloseUpdateBox = () => {\n        setOpenUpdateBox(!openUpdateBox);\n    };\n\n    const handleOpenDeleteBox = (customer: Customer) => {\n        setOpenDeleteBox(!openDeleteBox);\n        setCustomerInRow(customer);\n    };\n\n    const handleCloseDeleteBox = () => {\n        setOpenDeleteBox(!openDeleteBox);\n    };\n\n    async function handleOpenCouponsBox(customer: Customer) {\n        store.dispatch(couponsForViewAction(customer.coupons));\n        setOpenCouponsBox(!openCouponsBox);\n    };\n\n    const handleCloseCouponsBox = () => {\n        setOpenCouponsBox(!openCouponsBox);\n    };\n\n    const columns: readonly Column[] = [\n        { id: 'id', label: 'Id', minWidth: 20, align: \"right\" },\n        { id: 'firstName', label: 'firstName', minWidth: 80, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'lastName', label: 'lastName', minWidth: 80, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'email', label: 'Email', minWidth: 100, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'password', label: 'Password', minWidth: 30, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'coupons', label: 'Coupons', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'update', label: 'Edit', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'deleteIt', label: 'Delete', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    ];\n\n    function createData(customer1: Customer) {\n        const id = customer1.id;\n        const firstName = customer1.firstName;\n        const lastName = customer1.lastName;\n        const email = customer1.email;\n        const password = <div>\n            <Button value={customer1.password} startIcon={<PasswordIcon />} onClick={() => {\n                handleOpenPasswordBox(customer1.password);\n            }}> </Button>\n            <Dialog\n                open={openPasswordBox}\n                onClose={handleClosePasswordBox}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"View Password\"}\n                    <Button className=\"close\" onClick={handleClosePasswordBox} autoFocus>X</Button>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        For double chek, enter your admin's email and password\n                        <br />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <form onSubmit={handleSubmit(chekAdminDetails)}>\n                        <TextField label=\"email\" variant=\"outlined\"\n                            {...register(\"email\", {\n                                required: { value: true, message: \"field is required\" }\n                            })} />\n                        <span className=\"errors\" > {errors.email && <p>{errors.email.message}</p>}</span>\n                        <br /><br />\n                        <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                            {...register(\"password\", { required: true })} />\n                        <br /><br />\n                        <ButtonGroup variant=\"contained\" >\n                            <Button type=\"submit\" color=\"primary\" > SEND & SHOW </Button>\n                        </ButtonGroup>\n                        <br /><br />\n\n                    </form>\n                    {showPassword()}\n                </DialogActions>\n            </Dialog>\n        </div>;\n\n\n        const update = <div>\n            <Button startIcon={<ModeEditIcon />} onClick={() => {\n                handleOpenUpdateBox(customer1);\n            }}> </Button>\n            <Dialog\n                open={openUpdateBox}\n                onClose={handleCloseUpdateBox}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Update Customer\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        *************\n                        <br />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <UpdateCustomer id={CustomerInRow.id} />\n\n                    <Button onClick={handleCloseUpdateBox} autoFocus>X</Button>\n                </DialogActions>\n            </Dialog>\n        </div>;\n        <div> <input type=\"button\" value=\"update\" />  </div>;\n\n        const deleteIt = <div>\n            <Button value={customer1.password} startIcon={<DeleteIcon />} onClick={() => { handleOpenDeleteBox(customer1); }}> </Button>\n\n            <Dialog\n                open={openDeleteBox}\n                onClose={handleCloseDeleteBox}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Delete this Customer?\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Deleting a customer is not returnable, after you will delete the\n                        customer it will be lost forever.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDeleteBox}>NO, STOP!</Button>\n                    <Button onClick={deleteCustomer} autoFocus>\n                        CONTINUE\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n\n        const coupons = <div>\n            <Button startIcon={<AppsIcon />} onClick={() => { handleOpenCouponsBox(customer1) }}> </Button>\n            <Dialog\n                open={openCouponsBox}\n                onClose={handleCloseCouponsBox}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"View Coupons\"}\n                    <Button className=\"close\" onClick={handleCloseCouponsBox} autoFocus>X</Button>\n                </DialogTitle>\n                <DialogActions>\n                    <ViewCouponsSmall />\n                </DialogActions>\n            </Dialog>\n        </div>;\n\n        return { id, firstName, lastName, email, password, coupons, update, deleteIt };\n    }\n\n    const rows: { id: number; firstName: string; lastName: string; email: string; password: JSX.Element; coupons: JSX.Element; update: JSX.Element; deleteIt: JSX.Element; }[] = [];\n    customers.map((customer) => rows.push(createData(customer)));\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n\n    return (\n        <div className=\"adminCustomers\">\n            <ButtonGroup variant=\"contained\" fullWidth>\n                <Button type=\"button\" color=\"primary\" onClick={addCustomer}>Add New Customer</Button>\n            </ButtonGroup>\n            <br /><br />\n\n            <Select style={{ width: 250 }} defaultValue=\"All\" onChange={searchTypeSet}  >\n                <MenuItem value={\"All\"}>All</MenuItem>\n                <MenuItem value={\"Id\"}>Id</MenuItem>\n                <MenuItem value={\"FirstName\"}>FirstName</MenuItem>\n                <MenuItem value={\"LastName\"}>LastName</MenuItem>\n            </Select>\n\n            {searchBy()}\n\n            <form onSubmit={handleSubmitCust(search)}>\n\n\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\" >Search</Button>\n                </ButtonGroup>\n            </form>\n\n            <br /><br />\n\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                <TableContainer sx={{ maxHeight: 440 }}>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row) => {\n                                    return (\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                                            {columns.map((column) => {\n                                                const value = row[column.id];\n                                                return (\n                                                    <TableCell key={column.id} align={column.align}>\n                                                        {column.format && typeof value === 'number'\n                                                            ? column.format(value)\n                                                            : value}\n                                                    </TableCell>\n                                                );\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n\nexport default AdminCustomers;","import { Typography, TextField, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Company from \"../../model/Company\";\nimport store from \"../../redux/store\";\nimport \"./updateCompany.css\";\nimport { updateCompanyAxios } from \"../../axios/AdminAxiosService\";\n\n\ninterface Id {\n    id: number;\n}\n\nfunction UpdateCompany(props: Id): JSX.Element {\n    const { register, handleSubmit, formState: { errors }, setValue } = useForm<Company>();\n    let history = useHistory();\n\n\n    const CompanyNow = store.getState().AdminState.companies.find(company => company.id == props.id)\n    setValue(\"id\", CompanyNow.id);\n    setValue(\"name\", CompanyNow.name);\n    setValue(\"email\", CompanyNow.email);\n    setValue(\"password\", CompanyNow.password);\n    setValue(\"coupons\", CompanyNow.coupons);\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n    }, [])\n\n    async function send(company: Company) {\n        console.log(company);\n        await updateCompanyAxios(company);\n    }\n\n\n    return (\n        <div className=\"updateCompany\">\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Update Company {CompanyNow.name}</Typography><br />\n                <TextField label=\"email\" variant=\"outlined\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"field is required\" }, pattern: {\n                            value: /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'Invalid Email'\n                        }\n                    })} />\n                <span className=\"errors\"> {errors.email && <p>{errors.email.message}</p>}</span>\n                <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                    {...register(\"password\", { required: true, minLength: 3, maxLength: 10 })} />\n                <span className=\"errors\"> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateCompany;\n\n","import { Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport { Paper, TableContainer, Table, TableHead, TableRow, TableBody, TablePagination, TableCell } from \"@mui/material\";\nimport PasswordIcon from '@mui/icons-material/Password';\nimport { useState } from \"react\";\nimport \"./adminCompanies.css\";\nimport * as React from 'react';\nimport store from \"../../redux/store\";\nimport { useHistory } from \"react-router\";\nimport Company from \"../../model/Company\";\nimport LoginDetails from \"../../model/LoginDetails\";\nimport { useForm } from \"react-hook-form\";\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport AppsIcon from '@mui/icons-material/Apps';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { deleteCompanyAxios, getAllCompaniesAxios } from \"../../axios/AdminAxiosService\";\nimport { loginAxios } from \"../../axios/GeneralAxiosService\";\nimport UpdateCompany from \"../updateCompany/updateCompany\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\n\ninterface Column {\n  id: 'id' | 'name' | 'email' | 'password' | 'coupons' | 'update' | 'deleteIt';\n  label: string;\n  minWidth?: number;\n  align?: 'right';\n  format?: (value: number) => string;\n}\n\n\nfunction AdminCompanies(): JSX.Element {\n\n  const [companies, setData] = useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [passss, setPass] = useState(\"*******\");\n  const [CompanyInRow, setCompanyInRow] = useState<Company>(new Company());\n  const [openPasswordBox, setOpenPasswordBox] = React.useState(false);\n  const [isAllow, setAllowedPassword] = React.useState(false);\n  const { register, handleSubmit, setError, formState: { errors }, setValue } = useForm<LoginDetails>();\n  setValue(\"clientType\", \"Administrator\")\n  const [openUpdateBox, setOpenUpdateBox] = React.useState(false);\n  const { register: registerComp, handleSubmit: handleSubmitComp, setError: setErrorComp, formState: { errors: errorsComp }, setValue: setValueComp } = useForm<Company>();\n  const [openCouponsBox, setOpenCouponsBox] = React.useState(false);\n  const [openDeleteBox, setOpenDeleteBox] = React.useState(false);\n  const [searchType, setType] = useState(\"\");\n  let history = useHistory();\n\n  React.useEffect(() => {\n    if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n    syncSetData();\n  }, []);\n\n  function addCompany() {\n    history.push(\"/private/screen/admin/company/add\");\n  }\n\n  async function syncSetData() {\n    await getAllCompaniesAxios();\n    setData(store.getState().AdminState.companies);\n  }\n\n\n  function searchTypeSet(args: any) {\n    setType(args.target.value);\n    console.log(searchType);\n  }\n\n  function searchBy() {\n    switch (searchType) {\n      case \"All\":\n        return <div></div>\n      case \"Id\":\n        return <div>\n          <TextField type=\"number\" label=\"id\" variant=\"outlined\" {...registerComp(\"id\", {\n            required: { value: true, message: \"this field is required\" },\n          })} />\n          <br />\n          <span className=\"errors\"> {errorsComp.id && <p>{errorsComp.id.message}</p>}</span>\n\n        </div>\n      case \"Name\":\n        return <div>\n          <TextField label=\"name\" variant=\"outlined\" {...registerComp(\"name\", {\n            required: { value: true, message: \"this field is required\" },\n          })} />\n          <br />\n          <span className=\"errors\"> {errorsComp.name && <p>{errorsComp.name.message}</p>}</span>\n\n        </div>\n    }\n  }\n\n  function search(company: Company) {\n    switch (searchType) {\n      case \"All\":\n        setData(store.getState().AdminState.companies);\n        break;\n      case \"Id\":\n        let companiesArray: Company[] = [];\n        const myCompany = store.getState().AdminState.companies.find(company1 => company1.id == company.id)\n        if (myCompany) { companiesArray.push(myCompany) };\n        setData(companiesArray);\n        break;\n      case \"Name\":\n        let companiesNameArray: Company[] = [];\n        const myCompanyName = store.getState().AdminState.companies.filter(company1 => company1.name.includes(company.name));\n        if (myCompanyName) { myCompanyName.map((companyyy) => companiesNameArray.push(companyyy)); }\n        setData(companiesNameArray);\n        break;\n    }\n  }\n\n\n  function showPassword() {\n    let show = <div>*******</div>;\n    if (isAllow) { show = <div>{passss}</div> }\n    return show\n  }\n\n  async function chekAdminDetails(loginDetails: LoginDetails) {\n    await loginAxios(loginDetails);\n    if (!store.getState().ErrorsState.wrongDetails) {\n      setAllowedPassword(true)\n    }\n  }\n\n  async function deleteCompany() {\n    await deleteCompanyAxios(CompanyInRow.id.toString());\n\n  }\n\n  const handleOpenPasswordBox = (event: string) => {\n    setOpenPasswordBox(!openPasswordBox);\n    setPass(event);\n  };\n\n  const handleClosePasswordBox = () => {\n    setOpenPasswordBox(!openPasswordBox);\n    setAllowedPassword(false)\n  };\n\n  const handleOpenUpdateBox = (company: Company) => {\n    setOpenUpdateBox(!openUpdateBox);\n    setCompanyInRow(company);\n    //    setPass(password);\n  };\n\n  const handleCloseUpdateBox = () => {\n    setOpenUpdateBox(!openUpdateBox);\n  };\n\n  const handleOpenDeleteBox = (company: Company) => {\n    setOpenDeleteBox(!openDeleteBox);\n    setCompanyInRow(company);\n  };\n\n  const handleCloseDeleteBox = () => {\n    setOpenDeleteBox(!openDeleteBox);\n  };\n\n  async function handleOpenCouponsBox(company: Company) {\n    store.dispatch(couponsForViewAction(company.coupons));\n    setOpenCouponsBox(!openCouponsBox);\n\n  };\n\n  const handleCloseCouponsBox = () => {\n    setOpenCouponsBox(!openCouponsBox);\n  };\n\n\n\n  const columns: readonly Column[] = [\n    { id: 'id', label: 'Id', minWidth: 20, align: \"right\" },\n    { id: 'name', label: 'Name', minWidth: 80, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    { id: 'email', label: 'Email', minWidth: 100, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    { id: 'password', label: 'Password', minWidth: 30, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    { id: 'coupons', label: 'Coupons', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    { id: 'update', label: 'Edit', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    { id: 'deleteIt', label: 'Delete', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n  ];\n\n  function createData(company1: Company) {\n    const id = company1.id;\n    const name = company1.name;\n    const email = company1.email;\n    const password = <div>\n      <Button value={company1.password} startIcon={<PasswordIcon />} onClick={() => {\n        handleOpenPasswordBox(company1.password);\n      }}> </Button>\n      <Dialog\n        open={openPasswordBox}\n        onClose={handleClosePasswordBox}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"View Password\"}\n          <Button className=\"close\" onClick={handleClosePasswordBox} autoFocus>X</Button>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            For double chek, enter your admin's email and password\n            <br />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <form onSubmit={handleSubmit(chekAdminDetails)}>\n            <TextField label=\"email\" variant=\"outlined\"\n              {...register(\"email\", {\n                required: { value: true, message: \"field is required\" }\n              })} />\n            <span className=\"errors\" > {errors.email && <p>{errors.email.message}</p>}</span>\n            <br /><br />\n            <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n              {...register(\"password\", { required: true })} />\n            <br /><br />\n            <ButtonGroup variant=\"contained\" >\n              <Button type=\"submit\" color=\"primary\" > SEND & SHOW </Button>\n            </ButtonGroup>\n            <br /><br />\n\n          </form>\n          {showPassword()}\n        </DialogActions>\n      </Dialog>\n    </div>;\n\n\n    const update = <div>\n      <Button startIcon={<ModeEditIcon />} onClick={() => {\n        handleOpenUpdateBox(company1);\n      }}> </Button>\n      <Dialog\n        open={openUpdateBox}\n        onClose={handleCloseUpdateBox}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Update Company\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            ***************************************\n            <br />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n\n          <UpdateCompany id={CompanyInRow.id} />\n\n          <Button onClick={handleCloseUpdateBox} autoFocus>X</Button>\n        </DialogActions>\n      </Dialog>\n    </div>;\n    <div> <input type=\"button\" value=\"update\" />  </div>;\n\n    const deleteIt = <div>\n      <Button startIcon={<DeleteIcon />} onClick={() => { handleOpenDeleteBox(company1); }}> </Button>\n\n      <Dialog\n        open={openDeleteBox}\n        onClose={handleCloseDeleteBox}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Delete this Company?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Deleting a company is not returnable, after you will delete the\n            company it will be lost forever.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDeleteBox}>NO, STOP!</Button>\n          <Button onClick={deleteCompany} autoFocus>\n            CONTINUE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n\n    const coupons = <div>\n      <Button startIcon={<AppsIcon />} onClick={() => { handleOpenCouponsBox(company1) }}> </Button>\n      <Dialog\n        open={openCouponsBox}\n        onClose={handleCloseCouponsBox}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"View Coupons\"}\n          <Button className=\"close\" onClick={handleCloseCouponsBox} autoFocus>X</Button>\n        </DialogTitle>\n        <DialogActions>\n          <ViewCouponsSmall />\n        </DialogActions>\n      </Dialog>\n    </div>;\n\n    return { id, name, email, password, coupons, update, deleteIt };\n  }\n\n\n  const rows: { id: number; name: string; email: string; password: JSX.Element; coupons: JSX.Element; update: JSX.Element; deleteIt: JSX.Element; }[] = [];\n  companies.map((company) => rows.push(createData(company)));\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <ButtonGroup variant=\"contained\" fullWidth>\n        <Button type=\"button\" color=\"primary\" onClick={addCompany}>Add New Company</Button>\n      </ButtonGroup>\n      <br /><br />\n\n      <Select style={{ width: 250 }} defaultValue=\"All\" onChange={searchTypeSet}  >\n        <MenuItem value={\"All\"}>All</MenuItem>\n        <MenuItem value={\"Id\"}>Id</MenuItem>\n        <MenuItem value={\"Name\"}>Name</MenuItem>\n      </Select>\n\n      {searchBy()}\n\n      <form onSubmit={handleSubmitComp(search)}>\n\n\n        <ButtonGroup variant=\"contained\" fullWidth>\n          <Button type=\"submit\" color=\"primary\" >Search</Button>\n        </ButtonGroup>\n      </form>\n\n      <br /><br />\n\n      <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n        <TableContainer sx={{ maxHeight: 440 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\n                      {columns.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number'\n                              ? column.format(value)\n                              : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default AdminCompanies;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport store from \"../../redux/store\";\nimport \"./purchasePage.css\";\n\nfunction PurchasePage(): JSX.Element {\n    var couponsArray : CouponDetails[]= [];\n    store.getState().CouponsState.allCoupons.map((item)=>{couponsArray.push(item)});\n    let customerCoupons = store.getState().CustomersState.customer.coupons;\n    let history = useHistory();\n    const [ready, setReady] = useState(false)\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Customers\") { history.push(\"/private/screen\") }\n\n      \n        customerCoupons.map((myCoupon) => {\n            let index = couponsArray.findIndex(item => item.id === myCoupon.id);\n            if (index != -1) { couponsArray.splice(index, 1); }\n         } )\n\n        store.dispatch(couponsForViewAction(couponsArray));\n        setReady(true);\n\n    }, []);\n\n\n    return (\n        <div className=\"purchasePage\">\n            coupons you can purchase\n            {ready && <ViewCouponsSmall />}\n        </div>\n    );\n}\n\nexport default PurchasePage;\n","import { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AddCompany from \"../../adminComponents/addCompany/addCompany\";\nimport AddCustomer from \"../../adminComponents/addCustomer/addCustomer\";\nimport AddCoupon from \"../../companyComponents/addCoupon/addCoupon\";\nimport DeleteCoupon from \"../../companyComponents/deleteCoupon/deleteCoupon\";\nimport UpdateCoupon from \"../../companyComponents/updateCoupon/updateCoupon\";\nimport CompanyDetails from \"../../companyComponents/companyDetails/companyDetails\";\nimport CustomerDetails from \"../../customerComponents/customerDetails/customerDetails\";\nimport GetOneCoupon from \"../../coupons/getOneCoupon/getOneCoupon\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport PrivateMain from \"../privateMain/privateMain\";\nimport PaymentPage from \"../../customerComponents/paymentPage/paymentPage\";\nimport CompanyCoupons from \"../../companyComponents/companyCoupons/companyCoupons\";\nimport CustomerCoupons from \"../../customerComponents/customerCoupons/customerCoupons\";\nimport AdminCustomers from \"../../adminComponents/adminCustomers/adminCustomers\";\nimport AdminCompanies from \"../../adminComponents/adminCompanies/adminCompanies\";\nimport PurchasePage from \"../../customerComponents/purchasePage/purchasePage\";\nimport LoginFC from \"../../mainComponent/LoginFC/LoginFC\";\n\n\nclass PrivateRouting extends Component {\n\n    public render(): JSX.Element {\n\n        return (\n            <div className=\"privateRouting\">\n\n\n                <Switch >\n                    <Route\n                        path=\"/private/screen\"\n                        render={({ match: { url } }) => (\n                            <>\n                                <Route path={`${url}/`} component={PrivateMain} exact />\n\n                                {/* admin */}\n                                <Route path={`${url}/admin/companies`} component={AdminCompanies} />\n                                <Route path={`${url}/admin/customers`} component={AdminCustomers} />\n                                <Route path={`${url}/admin/company/add`} component={AddCompany} />\n                                <Route path={`${url}/admin/customer/add`} component={AddCustomer} />\n\n                                {/* company */}\n                                <Route path={`${url}/company/coupon/delete/:id`} render={(props) => <DeleteCoupon id={props.match.params.id} />} />\n                                <Route path={`${url}/company/coupon/add`} component={AddCoupon} />\n                                <Route path={`${url}/company/coupon/update/:id`} render={(props) => <UpdateCoupon id={props.match.params.id} />} />\n                                <Route path={`${url}/company/details`} component={CompanyDetails} />\n                                <Route path={`${url}/company/coupons`} component={CompanyCoupons} />\n\n                                {/* customer */}\n                                <Route path={`${url}/customer/details`} component={CustomerDetails} />\n                                <Route path={`${url}/customer/purchase`} component={PurchasePage} />\n                                <Route path={`${url}/customer/coupon/payment/:id`} render={(props) => <PaymentPage id={props.match.params.id} />} />\n                                <Route path={`${url}/customer/coupons`} component={CustomerCoupons} />\n\n                                {/* general */}\n                                <Route path={`${url}/coupons/view`} component={ViewCouponsSmall} />\n                                <Route path={`${url}/coupon/getOne/:id`} render={(props) => <GetOneCoupon id={props.match.params.id} />} />\n                                <Route path={`${url}/login`} component={LoginFC} exact />\n                            </>\n                        )}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default PrivateRouting;\n","import { BrowserRouter } from \"react-router-dom\";\nimport LoginFC from \"../../mainComponent/LoginFC/LoginFC\";\nimport store from \"../../redux/store\";\nimport PrivateAside from \"../privateAside/privateAside\";\nimport PrivateRouting from \"../privateRouting/privateRouting\";\n\nimport \"./privateScreen.css\";\n\nfunction PrivateScreen(): JSX.Element {\n    if (store.getState().authState.userDetails.clientType === \"\") {\n        return (\n            <div>\n                <h5>need to login</h5>\n                <LoginFC />\n            </div>\n        )\n    }\n    else return (\n        <div className=\"privateScreen\">\n\n            <BrowserRouter>\n                <aside><PrivateAside /></aside>\n                <main><PrivateRouting /></main>\n            </BrowserRouter>\n\n        </div>\n    );\n}\n\nexport default PrivateScreen;\n","import { useEffect, useState } from \"react\";\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport Main from \"../../guestComponents/main/main\";\nimport About from \"../../mainComponent/about/about\";\nimport GetOneCoupon from \"../../coupons/getOneCoupon/getOneCoupon\";\nimport LoginFC from \"../../mainComponent/LoginFC/LoginFC\";\nimport Page404 from \"../../mainComponent/page404/page404\";\nimport { error404Action } from \"../../redux/ErrorState\";\nimport store from \"../../redux/store\";\nimport PrivateScreen from \"../privateScreen/privateScreen\";\nimport \"./mainRouting.css\";\nimport PaymentPage from \"../../customerComponents/paymentPage/paymentPage\";\n\nfunction MainRouting(): JSX.Element {\n    const [ClientType, setType] = useState(store.getState().authState.userDetails.clientType);\n    const [Error404, set404] = useState(store.getState().ErrorsState.error404);\n    let history = useHistory();\n\n    useEffect(() => {\n        const unsubscribeMe = store.subscribe(() => setType(store.getState().authState.userDetails.clientType));\n        const error404unsubscribeMe = store.subscribe(() => set404(store.getState().ErrorsState.error404));\n        return () => { unsubscribeMe(); error404unsubscribeMe(); }\n\n\n    }, []);\n\n    function chek404() {\n        if (Error404 == true) {\n            history.push(\"/page404\")\n            store.dispatch(error404Action(false))\n        }\n    }\n\n    function chekUser() {\n        if (ClientType == \"\") {\n            history.push(\"/guest/main\")\n        }\n    }\n\n    return (\n        <div className=\"mainRouting\">\n            {chek404()}\n            {chekUser}\n\n            <Switch>\n                <Route path=\"/guest/main\" component={Main} exact />\n                <Route path=\"/private/screen\" component={PrivateScreen} />\n                <Route path=\"/login\" component={LoginFC} exact />\n                <Route path=\"/about\" component={About} exact />\n                <Route path=\"/page404\" component={Page404} exact />\n                <Route path=\"/coupon/getOne/:id\" render={(props) => <GetOneCoupon id={props.match.params.id} />} exact />\n                <Route path=\"/coupon/payment/:id\" render={(props) => <PaymentPage id={props.match.params.id} />} exact />\n                <Redirect from=\"/\" to=\"/guest/main\" exact />\n                <Route component={Page404} />\n            </Switch>\n\n        </div>\n    );\n}\n\nexport default MainRouting;\n","import { BrowserRouter } from \"react-router-dom\";\nimport Footer from \"../footer/footer\";\nimport Header from \"../header/header\";\nimport MainRouting from \"../mainRouting/mainRouting\";\nimport \"./layout.css\";\n\nfunction Layout(): JSX.Element {\n    return (\n        <div className=\"layout\">\n            <BrowserRouter> \n            <header><Header/></header>\n            <main><MainRouting/></main>\n            <footer><Footer/></footer>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default Layout;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from 'react-router-dom';\nimport Layout from './Components/mainLayout/layout/layout';\n\nReactDOM.render(\n \n  <BrowserRouter>\n    <Layout />\n  </BrowserRouter>,\n  \n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}