{"version":3,"sources":["reportWebVitals.ts","Components/mainLayout/footer/footer.tsx","Components/redux/authState.ts","Components/model/userDetails.ts","Components/redux/ErrorState.ts","Components/redux/customersState.ts","Components/model/Customer.ts","Components/redux/adminState.ts","Components/redux/couponsState.ts","Components/utils/Globals.ts","Components/axios/GuestAxiosService.ts","Components/redux/companiesState.ts","Components/model/Company.ts","Components/redux/store.ts","Components/mainLayout/header/header.tsx","Components/coupons/couponSmallCard/couponSmallCard.tsx","Components/coupons/viewCouponsSmall/viewCouponsSmall.tsx","Components/guestComponents/getCoupons/getCoupons.tsx","Components/guestComponents/main/main.tsx","Components/mainComponent/about/about.tsx","Components/coupons/couponCard/couponCard.tsx","Components/model/CouponDetails.ts","Components/coupons/getOneCoupon/getOneCoupon.tsx","Components/utils/Notify.ts","Components/axios/JWTAxios.ts","Components/axios/CompanyAxiosService.ts","Components/axios/CustomerAxiosService.ts","Components/axios/GeneralAxiosService.ts","Components/mainComponent/LoginFC/LoginFC.tsx","Components/mainComponent/page404/page404.tsx","Components/mainLayout/privateAside/privateAside.tsx","Components/axios/AdminAxiosService.ts","Components/adminComponents/addCompany/addCompany.tsx","Components/adminComponents/addCustomer/addCustomer.tsx","Components/companyComponents/addCoupon/addCoupon.tsx","Components/companyComponents/deleteCoupon/deleteCoupon.tsx","Components/companyComponents/updateCoupon/updateCoupon.tsx","Components/companyComponents/companyDetails/companyDetails.tsx","Components/customerComponents/customerDetails/customerDetails.tsx","Components/mainLayout/privateMain/privateMain.tsx","Components/customerComponents/paymentPage/paymentPage.tsx","Components/companyComponents/companyCoupons/companyCoupons.tsx","Components/customerComponents/customerCoupons/customerCoupons.tsx","Components/adminComponents/updateCustomer/updateCustomer.tsx","Components/adminComponents/adminCustomers/adminCustomers.tsx","Components/adminComponents/updateCompany/updateCompany.tsx","Components/adminComponents/adminCompanies/adminCompanies.tsx","Components/customerComponents/purchasePage/purchasePage.tsx","Components/mainLayout/privateRouting/privateRouting.tsx","Components/mainLayout/privateScreen/privateScreen.tsx","Components/mainLayout/mainRouting/mainRouting.tsx","Components/mainLayout/layout/layout.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","AuthActionType","className","UserDetails","token","clientType","id","AuthState","userDetails","logoutUser","type","LogoutUser","payload","loginUser","ErrorsActionType","ErrorsState","error404","wrongDetails","error404Action","Error404","wrongDetailsAction","CustomerActionType","Customer","firstName","lastName","email","password","coupons","CustomersState","customer","customerDetailsAction","CustomerDetails","purchaseCouponAction","coupon","PurchaseCoupon","AdminActionType","AdminState","companies","customers","companyDownloadedAction","CompaniesDownload","addCompanyAction","company","AddCompany","updateCompanyAction","UpdateCompany","deleteCompanyAction","DeleteCompany","customerDownloadedAction","ad","addCustomerAction","AddCustomer","updateCustomerAction","UpdateCustomer","deleteCustomerAction","DeleteCustomer","CouponsActionType","CouponsState","allCoupons","couponsForView","cart","couponsDownloadedAction","CouponsDownload","couponsForViewAction","CouponsForView","Globals","globals","urls","administrator","guest","general","getAllCoupons","a","axios","post","res","console","log","store","dispatch","data","catch","err","CompanyActionType","Company","name","CompaniesState","companyDetailsAction","CompanyDetails","deleteCouponAction","DeleteCoupon","updateCouponAction","UpdateCoupon","reducers","combineReducers","authState","currentState","action","newState","localStorage","setItem","removeItem","decoded","jwtDecode","UpdateToken","push","findIndex","item","splice","parseInt","GetCoupons","CouponsDownloadUpdate","Cart","createStore","applyMiddleware","thunkMiddleware","Header","useState","getState","ClientType","setType","openLogoutBox","setOpenLogoutBox","useEffect","unsubscribeMe","subscribe","history","useHistory","handleLogoutBox","home","Button","startIcon","onClick","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","CouponSmallCard","props","edit","value","purchase","src","image","location","pathname","title","description","price","ViewCouponsSmall","setData","map","syncSetData","Main","About","myButton","setValue","hide","setHide","more","CouponCard","startDate","setStartDate","endDate","setEndDate","formatDate","date","myNewDate","split","companyID","categoryID","amount","CouponDetails","Date","GetOneCoupon","Coupon1","propId","replace","find","toString","go","notify","notification","Notyf","duration","position","x","y","message","this","success","error","jwtAxios","create","interceptors","request","use","headers","response","status","authorization","addCouponAxios","companyCouponsAxios","deleteCouponAxios","deleteUrl","delete","updateCouponAxios","companyDetailsAxios","url","customerDetailsAxios","purchaseCouponAxios","loginAxios","loginGetDetailsAxios","fileHandler","myEvent","myFileUrl","file","target","files","Backendless","initApp","Files","upload","fileURL","LoginFC","useForm","register","handleSubmit","errors","setError","formState","loginDetails","onSubmit","Typography","variant","TextField","label","required","pattern","minLength","maxLength","Select","style","width","defaultValue","MenuItem","ButtonGroup","color","Page404","height","allow","PrivateAside","fullWidth","getAllCompaniesAxios","addCompanyAxios","updateCompanyAxios","deleteCompanyAxios","getAllCustomersAxios","addCustomerAxios","updateCustomerAxios","deleteCustomerAxios","fontSize","margin","AddCoupon","imgEvent","setImgEvent","undefined","InputLabelProps","shrink","min","accept","onChange","event","CouponNow","Company1","Customer1","PrivateMain","PaymentPage","couponId","myCoupon","buy","setBuy","login","showLogin","CompanyCoupons","searchType","args","couponFilter","couponsInStore","couponsArray","idCoupon","filter","searchBy","CustomerCoupons","CustomerNow","AdminCustomers","React","page","setPage","rowsPerPage","setRowsPerPage","passss","setPass","CustomerInRow","setCustomerInRow","openPasswordBox","setOpenPasswordBox","isAllow","setAllowedPassword","openUpdateBox","setOpenUpdateBox","registerCust","handleSubmitCust","errorsCust","openCouponsBox","setOpenCouponsBox","openDeleteBox","setOpenDeleteBox","showPassword","show","chekAdminDetails","deleteCustomer","handleClosePasswordBox","handleCloseUpdateBox","handleCloseDeleteBox","handleCloseCouponsBox","columns","minWidth","align","format","toLocaleString","createData","customer1","update","deleteIt","handleOpenCouponsBox","rows","customersArray","myCustomer","customersFirstNameArray","mycustomerFirstName","includes","customerItem","customersLastNameArray","mycustomerLastName","Paper","sx","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","role","tabIndex","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","newPage","onRowsPerPageChange","CompanyNow","AdminCompanies","CompanyInRow","setCompanyInRow","registerComp","handleSubmitComp","errorsComp","deleteCompany","company1","companiesArray","myCompany","companiesNameArray","myCompanyName","companyyy","PurchasePage","customerCoupons","ready","setReady","index","PrivateRouting","path","render","match","exact","params","Component","PrivateScreen","MainRouting","set404","error404unsubscribeMe","from","to","Layout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c795f761.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./footer.css\";\n\nfunction Footer(): JSX.Element {\n    return (\n        <div className=\"footer\">\n\t\t\t@Yehushua Rozenberg & Shalom Gottlieb  *contact us in about page* \n        </div>\n    );\n}\n\nexport default Footer;\n","import jwtDecode from \"jwt-decode\";\r\nimport UserDetails from \"../model/userDetails\";\r\n\r\n\r\nexport class AuthState {\r\n    public userDetails: UserDetails = new UserDetails();\r\n}\r\n\r\nexport enum AuthActionType {\r\n    userDetails = \"userDetails\",\r\n    LogoutUser = \"LogoutUser\",\r\n    loginUser = \"loginUser\",\r\n    UpdateToken = \"UpdateToken\",\r\n}\r\n\r\nexport interface AuthAction {\r\n    type: AuthActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function userDetails(user: UserDetails): AuthAction {\r\n    return { type: AuthActionType.userDetails, payload: user }\r\n}\r\n\r\nexport function logoutUser(): AuthAction {\r\n    return { type: AuthActionType.LogoutUser, payload: null }\r\n}\r\n\r\nexport function loginUser(token: string): AuthAction {\r\n    return { type: AuthActionType.loginUser, payload: token }\r\n}\r\n\r\nexport function updateToken(token: string): AuthAction {\r\n    return { type: AuthActionType.UpdateToken, payload: token }\r\n}\r\n\r\nexport function authReducer(currentState: AuthState = new AuthState(), action: AuthAction): AuthState {\r\n    const newState = { ...currentState };\r\n    switch (action.type) {\r\n        case AuthActionType.userDetails:\r\n            newState.userDetails = action.payload;\r\n            localStorage.setItem(\"token\", action.payload);\r\n            break;\r\n        case AuthActionType.LogoutUser:\r\n            newState.userDetails = new UserDetails();\r\n            localStorage.removeItem(\"token\");\r\n            break;\r\n        case AuthActionType.loginUser:\r\n            newState.userDetails.token = action.payload;\r\n            const decoded: UserDetails = jwtDecode(newState.userDetails.token);\r\n            newState.userDetails.clientType = decoded.clientType;\r\n            newState.userDetails.id = decoded.id;\r\n            console.log(\"-------------------------------\");\r\n            console.log(decoded);\r\n            console.log(newState.userDetails.clientType)\r\n            console.log(newState.userDetails.id)\r\n            console.log(\"-------------------------------\");\r\n            break;\r\n\r\n        case AuthActionType.UpdateToken:\r\n            newState.userDetails.token = action.payload;\r\n            localStorage.setItem(\"token\", action.payload);\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n\r\n\r\n","class UserDetails{\r\n    token:string = \"\";\r\n    clientType:string = \"\";\r\n    id:number=0;\r\n}\r\n\r\nexport default UserDetails;","export class ErrorsState {\r\n    public error404: boolean = false;\r\n    public wrongDetails: boolean = false;\r\n\r\n}\r\n\r\nexport enum ErrorsActionType {\r\n    Error404 = \"Error404\",\r\n    wrongDetails = \"wrongDetails\"\r\n}\r\n\r\nexport interface ErrorsAction {\r\n    type: ErrorsActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function error404Action(error404: boolean): ErrorsAction {\r\n    return { type: ErrorsActionType.Error404, payload: error404 }\r\n}\r\n\r\nexport function wrongDetailsAction(wrongDetails: boolean): ErrorsAction {\r\n    return { type: ErrorsActionType.wrongDetails, payload: wrongDetails }\r\n}\r\n\r\nexport function errorsReducer(currentState: ErrorsState = new ErrorsState(), action: ErrorsAction): ErrorsState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case ErrorsActionType.Error404:\r\n            newState.error404 = action.payload;\r\n            console.log(newState.error404);\r\n            break;\r\n        case ErrorsActionType.wrongDetails:\r\n            newState.wrongDetails = action.payload;\r\n            console.log(newState.wrongDetails);\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n","import CouponDetails from \"../model/CouponDetails\";\r\nimport Customer from '../model/Customer';\r\n\r\nexport class CustomersState {\r\n    public customer: Customer = new Customer();\r\n}\r\n\r\nexport enum CustomerActionType {\r\n    CustomerDetails = \"CustomerDetails\",\r\n    PurchaseCoupon = \"PurchaseCoupon\",\r\n}\r\n\r\nexport interface CustomerAction {\r\n    type: CustomerActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function customerDetailsAction(customer: Customer): CustomerAction {\r\n    return { type: CustomerActionType.CustomerDetails, payload: customer }\r\n}\r\n\r\nexport function purchaseCouponAction(coupon: CouponDetails): CustomerAction {\r\n    return { type: CustomerActionType.PurchaseCoupon, payload: coupon }\r\n}\r\n\r\nexport function customersReduser(currentState: CustomersState = new CustomersState(), action: CustomerAction): CustomersState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case CustomerActionType.CustomerDetails:\r\n            newState.customer = action.payload\r\n            break;\r\n        case CustomerActionType.PurchaseCoupon:\r\n            newState.customer.coupons.push(action.payload)\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n\r\n","import CouponDetails from \"./CouponDetails\";\r\n\r\nclass Customer{\r\n    public id: number=0;\r\n    public firstName: string=\"\";\r\n    public lastName: string=\"\";\r\n    public email: string=\"\";\r\n    public password: string=\"\";\r\n    public coupons: CouponDetails[] = []; \r\n    \r\n}\r\n\r\nexport default Customer;\r\n\r\n","import Company from \"../model/Company\";\r\nimport Customer from \"../model/Customer\";\r\n\r\nexport class AdminState {\r\n    public companies: Company[] = [];\r\n    public customers: Customer[] = [];\r\n}\r\n\r\nexport enum AdminActionType {\r\n    CompaniesDownload = \"CompaniesDownloaded\",\r\n    AddCompany = \"AddCompany\",\r\n    UpdateCompany = \"UpdateCompany\",\r\n    DeleteCompany = \"DeleteCompany\",\r\n    ad = \"aded\",\r\n    AddCustomer = \"AddCustomer\",\r\n    UpdateCustomer = \"UpdateCustomer\",\r\n    DeleteCustomer = \"DeleteCustomer\",\r\n}\r\n\r\nexport interface AdminAction {\r\n    type: AdminActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function companyDownloadedAction(companies: Company[]): AdminAction {\r\n    return { type: AdminActionType.CompaniesDownload, payload: companies }\r\n}\r\n\r\nexport function addCompanyAction(company: Company): AdminAction {\r\n    return { type: AdminActionType.AddCompany, payload: company }\r\n}\r\n\r\nexport function updateCompanyAction(company: Company): AdminAction {\r\n    return { type: AdminActionType.UpdateCompany, payload: company }\r\n}\r\n\r\nexport function deleteCompanyAction(id: number): AdminAction {\r\n    return { type: AdminActionType.DeleteCompany, payload: id }\r\n}\r\n\r\nexport function customerDownloadedAction(customers: Customer[]): AdminAction {\r\n    return { type: AdminActionType.ad, payload: customers }\r\n}\r\n\r\nexport function addCustomerAction(customer: Customer): AdminAction {\r\n    return { type: AdminActionType.AddCustomer, payload: customer }\r\n}\r\n\r\nexport function updateCustomerAction(customer: Customer): AdminAction {\r\n    return { type: AdminActionType.UpdateCustomer, payload: customer }\r\n}\r\n\r\nexport function deleteCustomerAction(id: number): AdminAction {\r\n    return { type: AdminActionType.DeleteCustomer, payload: id }\r\n}\r\n\r\n\r\nexport function adminReducer(currentState: AdminState = new AdminState(), action: AdminAction): AdminState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case AdminActionType.CompaniesDownload:\r\n            newState.companies = action.payload;\r\n            break;\r\n        case AdminActionType.AddCompany:\r\n            newState.companies.push(action.payload);\r\n            break;\r\n        case AdminActionType.UpdateCompany:\r\n            newState.companies[newState.companies.findIndex(item => item.id == action.payload.id)] = action.payload;\r\n            break;\r\n        case AdminActionType.DeleteCompany:\r\n            newState.companies.splice(newState.companies.findIndex(item => item.id === parseInt(action.payload)), 1);\r\n            break;\r\n        case AdminActionType.ad:\r\n            newState.customers = action.payload;\r\n            break;\r\n        case AdminActionType.AddCustomer:\r\n            newState.customers.push(action.payload);\r\n            break;\r\n        case AdminActionType.UpdateCustomer:\r\n            newState.customers[newState.customers.findIndex(item => item.id == action.payload.id)] = action.payload;\r\n            break;\r\n        case AdminActionType.DeleteCustomer:\r\n            newState.customers.splice(newState.customers.findIndex(item => item.id === parseInt(action.payload)), 1);\r\n            break;\r\n\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n","import CouponDetails from \"../model/CouponDetails\";\r\n\r\nexport class CouponsState {\r\n    public allCoupons: CouponDetails[] = [];\r\n    public couponsForView: CouponDetails[] = [];\r\n    public cart: CouponDetails[] = [];\r\n\r\n\r\n}\r\n\r\nexport enum CouponsActionType {\r\n    CouponsDownload = \"CouponsDownloaded\",\r\n    CouponsDownloadUpdate = \"CouponsDownloadedUpdate\",\r\n    CouponsForView = \"CouponsForView\",\r\n    Cart = \"Cart\",\r\n}\r\n\r\n\r\nexport interface CouponsAction {\r\n    type: CouponsActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function couponsDownloadedAction(coupons: CouponDetails[]): CouponsAction {\r\n    return { type: CouponsActionType.CouponsDownload, payload: coupons }\r\n}\r\n\r\nexport function couponsDownloadedUpdateAction(func: any): CouponsAction {\r\n    return { type: CouponsActionType.CouponsDownloadUpdate, payload: func }\r\n}\r\n\r\nexport function couponsForViewAction(coupons: CouponDetails[]): CouponsAction {\r\n    return { type: CouponsActionType.CouponsForView, payload: coupons }\r\n}\r\n\r\nexport function cartAction(coupons: CouponDetails[]): CouponsAction {\r\n    return { type: CouponsActionType.Cart, payload: coupons }\r\n}\r\n\r\nexport function couponsReducer(currentState: CouponsState = new CouponsState(), action: CouponsAction): CouponsState {\r\n    const newState = { ...currentState };\r\n    switch (action.type) {\r\n        case CouponsActionType.CouponsDownload:\r\n            newState.allCoupons = action.payload;\r\n            break;\r\n        case CouponsActionType.CouponsDownloadUpdate:\r\n            newState.allCoupons=action.payload;\r\n            break;\r\n        case CouponsActionType.CouponsForView:\r\n            newState.couponsForView = action.payload;\r\n            break;\r\n        case CouponsActionType.Cart:\r\n            newState.cart = action.payload;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n","class Globals { }\r\n\r\nclass DevelopmentGlobals extends Globals {\r\n    public urls = {\r\n        general: \"http://localhost:8080/couponsProject/\",\r\n        administrator: \"http://localhost:8080/couponsProject/admin/\",\r\n        company: \"http://localhost:8080/couponsProject/company/\",\r\n        customer: \"http://localhost:8080/couponsProject/customer/\",\r\n        guest: \"http://localhost:8080/couponsProject/guest/\"\r\n    }\r\n}\r\n\r\nclass ProductionGlobals extends Globals {\r\n    public urls = {\r\n        administrator: \"/couponsProject/admin/\",\r\n        company: \"/couponsProject/company/\",\r\n        customer: \"/couponsProject/customer/\",\r\n        guest: \"/couponsProject/guest/\",\r\n        general: \"/couponsProject/\"\r\n    }\r\n}\r\n\r\nconst globals = process.env.NODE_ENV === \"production\" ? new ProductionGlobals() : new DevelopmentGlobals();\r\n\r\nexport default globals;","import axios from \"axios\";\r\nimport { couponsDownloadedAction } from \"../redux/couponsState\";\r\nimport store from \"../redux/store\";\r\nimport globals from \"../utils/Globals\";\r\n\r\nexport async function getAllCoupons() {\r\n    await axios.post(globals.urls.guest + \"coupons/get\")\r\n        .then(res => {\r\n            console.log(\"new data:\\n\" + res);\r\n            store.dispatch(couponsDownloadedAction(res.data))\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\n","import { getAllCoupons } from \"../axios/GuestAxiosService\";\r\nimport Company from \"../model/Company\";\r\nimport CouponDetails from \"../model/CouponDetails\";\r\n\r\nexport class CompaniesState {\r\n    public company: Company = new Company();\r\n}\r\n\r\nexport enum CompanyActionType {\r\n    CompanyDetails = \"CompanyDetails\",\r\n    GetCoupons = \"GetCoupons\",\r\n    DeleteCoupon = \"DeleteCoupon\",\r\n    UpdateCoupon = \"UpdateCoupon\",\r\n}\r\n\r\nexport interface CompanyAction {\r\n    type: CompanyActionType,\r\n    payload?: any,\r\n}\r\n\r\nexport function companyDetailsAction(company: Company): CompanyAction {\r\n    return { type: CompanyActionType.CompanyDetails, payload: company }\r\n}\r\n\r\nexport function getCouponsAction(coupons: CouponDetails[]): CompanyAction {\r\n    return { type: CompanyActionType.GetCoupons, payload: coupons }\r\n}\r\n\r\nexport function deleteCouponAction(id: string): CompanyAction {\r\n    return { type: CompanyActionType.DeleteCoupon, payload: id }\r\n}\r\n\r\nexport function updateCouponAction(coupon: CouponDetails): CompanyAction {\r\n    return { type: CompanyActionType.UpdateCoupon, payload: coupon }\r\n}\r\n\r\n\r\nexport function companiesReducer(currentState: CompaniesState = new CompaniesState(), action: CompanyAction): CompaniesState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case CompanyActionType.CompanyDetails:\r\n            newState.company = action.payload\r\n            break;\r\n        case CompanyActionType.GetCoupons:\r\n            newState.company.coupons =action.payload;\r\n            getAllCoupons();\r\n            break;\r\n        case CompanyActionType.DeleteCoupon:\r\n            newState.company.coupons.splice(newState.company.coupons.findIndex(item => item.id === parseInt(action.payload)), 1);\r\n            getAllCoupons();\r\n            break;\r\n        case CompanyActionType.UpdateCoupon:\r\n            newState.company.coupons[newState.company.coupons.findIndex(item => item.id == action.payload.id)] = action.payload;\r\n            getAllCoupons();\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\n","import CouponDetails from \"./CouponDetails\";\r\n\r\nclass Company{\r\n    public id: number=0;\r\n    public name: string=\"\";\r\n    public email: string=\"\";\r\n    public password: string=\"\";\r\n    public coupons: CouponDetails[] = []; \r\n    \r\n}\r\n\r\nexport default Company;","import { errorsReducer } from './ErrorState';\r\nimport { customersReduser } from './customersState';\r\nimport { adminReducer } from './adminState';\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport { authReducer } from \"./authState\";\r\nimport { couponsReducer } from './couponsState';\r\nimport { applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { companiesReducer } from './companiesState';\r\n\r\nconst reducers = combineReducers({\r\n    authState: authReducer,\r\n    AdminState: adminReducer,\r\n    CompaniesState: companiesReducer,\r\n    CustomersState: customersReduser,\r\n    CouponsState: couponsReducer,\r\n    ErrorsState: errorsReducer,\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;\r\n","import {  Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport {  useHistory } from \"react-router-dom\";\nimport { logoutUser } from \"../../redux/authState\";\nimport store from \"../../redux/store\";\nimport PersonIcon from '@mui/icons-material/Person';\nimport \"./header.css\";\nimport LoginIcon from '@mui/icons-material/Login';\nimport HomeIcon from '@mui/icons-material/Home';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\n\nfunction Header(): JSX.Element {\n    const [ClientType, setType] = useState(store.getState().authState.userDetails.clientType);\n    const [openLogoutBox, setOpenLogoutBox] = useState(false);\n\n    useEffect(() => {\n        const unsubscribeMe = store.subscribe(() => setType(store.getState().authState.userDetails.clientType));\n        return () => unsubscribeMe();\n    }, []);\n\n    let history = useHistory();\n\n    function handleLogoutBox() {\n        setOpenLogoutBox(!openLogoutBox);\n    }\n\n\n    function logout() {\n        setOpenLogoutBox(!openLogoutBox);\n        store.dispatch(logoutUser())\n        console.log(store.getState().authState.userDetails.clientType);\n        home();\n    }\n\n    function logIn() {\n        history.push(\"/login\");\n    }\n\n    function home() {\n        history.push(\"/guest/main\");\n    }\n\n    function privateArea() {\n        history.push(\"/private/screen\");\n    }\n\n    function about() {\n        history.push(\"/about\");\n    }\n\n\n    return (\n        <div className=\"header\">\n            <div className=\"title\">\n                <h1>BETTER LIFE</h1>\n                <h3>BETTER LIFE IN CHEEPER PRICE</h3>\n            </div>\n\n            <div className=\"buttons\">\n                <div>\n                <Button startIcon={<LoginIcon />} onClick={!ClientType?logIn:handleLogoutBox}></Button>\n                    <Dialog\n                        open={openLogoutBox}\n                        onClose={handleLogoutBox}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">\n                            {\"Sure you want to logout?\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">\n                                you will go to home page\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleLogoutBox}>NO, Go Back</Button>\n                            <Button onClick={logout} autoFocus>YES</Button>\n                        </DialogActions>\n                    </Dialog>\n                    <Button startIcon={<PersonIcon />} onClick={privateArea} ></Button>\n                    <Button startIcon={<HomeIcon />} onClick={home} ></Button>\n                    <Button startIcon={<InfoOutlinedIcon />} onClick={about} ></Button>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import { useHistory } from \"react-router-dom\";\nimport \"./couponSmallCard.css\";\nimport store from \"../../redux/store\";\n\ninterface CouponSmallCard {\n    id: number;\n    title: string;\n    price: number;\n    description: string;\n    image: string;\n}\n\nfunction CouponSmallCard(props: CouponSmallCard): JSX.Element {\n    let history = useHistory();\n    let type = store.getState().authState.userDetails.clientType\n    console.log(\"in small card\")\n    console.log(store.getState().CouponsState.allCoupons)\n\n\n\n    function moreInfo() {\n        if (type === \"\") {\n            history.push(\"/coupon/getOne/:\" + props.id)\n        }\n        else {\n            history.push(\"/private/screen/coupon/getOne/:\" + props.id)\n        }\n    }\n\n    function deleteCoupon() {\n        history.push(\"/private/screen/company/coupon/delete/:\" + props.id)\n    }\n\n    function updateCoupon() {\n        history.push(\"/private/screen/company/coupon/update/:\" + props.id)\n    }\n\n    function purchaseCoupon() {\n        if (type === \"\") {\n            history.push(\"/coupon/payment/:\" + props.id)\n        }\n        else {\n            history.push(\"/private/screen/customer/coupon/payment/:\" + props.id)\n        }\n    }\n\n    const edit = <div>\n        <input type=\"button\" value=\"Update Coupon\" onClick={updateCoupon} />\n        <br /><br />\n        <input type=\"button\" value=\"Delete Coupon\" onClick={deleteCoupon} />\n        <br /><br />\n    </div>\n\n    const purchase =\n        <div>\n            <input type=\"button\" value=\"purchase Coupon\" onClick={purchaseCoupon} />\n            <br /><br />\n        </div>\n\n\n    return (\n        <div className=\"CouponSmallCard smallBox\">\n            <img src={props.image}></img>\n            {((type!=\"Customers\")&&(history.location.pathname != \"/guest/main\"))&& props.id} <br />\n            {props.title} <br />\n            {props.description}{\"  \"} \n            {props.price} $ <br />\n            {((type != \"Companies\" && type != \"Administrator\") && (history.location.pathname != \"/private/screen/customer/coupons\") ||  \n            (history.location.pathname === \"/guest/main\")) && purchase}\n            <input type=\"button\" value=\"See More Information\" onClick={moreInfo} />\n            {(type === \"Companies\" && history.location.pathname != \"/guest/main\") && edit}\n        </div>\n    );\n}\n\nexport default CouponSmallCard;\n","import { useState, useEffect } from \"react\";\nimport CouponSmallCard from \"../couponSmallCard/couponSmallCard\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport store from \"../../redux/store\";\nimport \"./viewCouponsSmall.css\";\n\n\nfunction ViewCouponsSmall(): JSX.Element {\n    const [coupons, setData] = useState<CouponDetails[]>(store.getState().CouponsState.couponsForView);\n\n    useEffect(() => {\n        setData(store.getState().CouponsState.couponsForView);\n        const unsubscribeMe = store.subscribe(() => setData(store.getState().CouponsState.couponsForView))\n        return () => { unsubscribeMe(); }\n    }, [])\n\n\n\n    return (\n        <div className=\"viewCouponsSmall\">\n            {coupons.map(item => <CouponSmallCard\n                key={item.id}\n                id={item.id}\n                title={item.title}\n                description={item.description}\n                price={item.price}\n                image={item.image} />\n            )}\n\n        </div>\n    );\n}\n\nexport default ViewCouponsSmall;\n","\nimport { useEffect } from \"react\";\nimport { getAllCoupons } from \"../../axios/GuestAxiosService\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport store from \"../../redux/store\";\nimport \"./getCoupons.css\";\n\n\nfunction GetCoupons(): JSX.Element {\n\n    useEffect(() => {\n        syncSetData();\n    }, []);\n\n    async function syncSetData() {\n        await getAllCoupons();\n        store.dispatch(couponsForViewAction(store.getState().CouponsState.allCoupons))\n    }\n\n\n    return (\n        <div className=\"getCoupons\">\n            <ViewCouponsSmall />\n\n        </div>\n    );\n}\n\nexport default GetCoupons;\n\n\n","import GetCoupons from \"../getCoupons/getCoupons\";\nimport \"./main.css\";\n\nfunction Main(): JSX.Element {\n\n\n    return (\n        <div className=\"main\">\n            <GetCoupons />\n        </div>\n    );\n}\n\nexport default Main;\n\n","import { useState } from \"react\";\nimport \"./about.css\";\n\nfunction About(): JSX.Element {\n    const [myButton, setValue] = useState(\"Contact Us\")\n    const [hide, setHide] = useState(false)\n\n    function readMore() {\n        if (hide) {\n            setValue(\"Contact Us\")\n        }\n        else { setValue(\"close\") }\n        setHide(!hide)\n    }\n\n    function more() {\n        let text;\n        if (hide) {\n            text = <div>\n                <div><h2>Shalom Gottlieb and yehoshua Rosenberg,</h2></div>\n                <div><h4>full stuck Software Developers, graduates of John Bryce's Java full stack course with honors.</h4></div>\n                <div><h4>we are controlled in Java, Spring, Type script and React.</h4></div>\n                <div><h4>Try us, and you won't be disappointed!</h4></div>\n\n                <div><h2> Shalom Gottlieb </h2></div>\n                <div><h2> Phone: 058-6126333</h2></div>\n                <div><h2> email: shalomgottlieb@gmail.com‏ </h2></div>\n\n                <div><h2> yehoshua Rosenberg</h2></div>\n                <div><h2> Phone: 054-2106049</h2></div>\n                <div><h2>  Email: yerozenberg@gmail.com</h2></div>            </div>\n            return text;\n        }\n    }\n\n    return (\n        <div className=\"about\">\n            <div> <h1> About BETTER AND CHEEPER  </h1></div>\n            <div> <h2> We are here to unite people into a huge purchasing power </h2>  </div>\n            <div> On BETTER AND CHEEPER website, countless deals are published at more affordable prices than ever, thanks to the group's purchasing power  </div>\n            <div>  Why pay dearly, when you can get the same thing at a group price, significantly cheaper?  </div>\n            <div> <h2> BETTER AND CHEEPER: because of the reliability, service, and price </h2>  </div>\n            <div> Reliability: We have no hidden clauses or small print that are hidden. You can be sure that you will get what you want, without surprises </div>\n            <div> Service: The businesses we work with have been carefully selected, with an emphasis on a developed service consciousness </div>\n            <div>  And the price? No need to expand. Just take a look at our deals, and you will understand for yourself  </div>\n            {more()}\n            <input type=\"button\" value={myButton} onClick={readMore} />\n\n        </div>\n    );\n}\n\nexport default About;\n","import { useEffect, useState } from \"react\";\nimport \"./couponCard.css\";\n\n\ninterface CouponCardProps {\n    id: number;\n    companyID: number;\n    categoryID: number;\n    title: string;\n    description: string;\n    startDate: string;\n    endDate: string;\n    amount: number;\n    price: number;\n    image: string;\n}\n\n\nfunction CouponCard(props: CouponCardProps): JSX.Element {\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n\n    useEffect(() => {\n        setStartDate(formatDate(props.startDate));\n        setEndDate(formatDate(props.endDate));\n    })\n\n    function formatDate(date: string) {\n        var myNewDate = date.split('T')[0].split(\"-\");\n        var formattedDate = myNewDate[2] + \"/\" + myNewDate[1] + \"/\" + myNewDate[0];\n        return formattedDate;\n    }\n\n    return (\n        <div className=\"couponCard smallBox\">\n            <img src={props.image}></img>\n            {props.id} <br /><br />\n            {props.title}<br />\n            {props.companyID}<br />\n            {props.categoryID} <br />\n            description: {props.description}  <br />\n            {props.price} $ <br />\n            amount: {props.amount} <br />\n            startDate: {startDate}  <br />\n            expDate: {endDate} <br />\n\n\n        </div>\n\n    );\n}\n\nexport default CouponCard;\n\n","\r\nexport default class CouponDetails {\r\n    id: number = 0;\r\n    companyID: number = 0;\r\n    categoryID: number = 0;\r\n    title: string = \"\";\r\n    description: string = \"\";\r\n    startDate: Date = new Date();\r\n    endDate: Date = new Date();\r\n    amount: number = 0;\r\n    price: number = 0;\r\n    image: string = \"\";\r\n}\r\n\r\n\r\n\r\n","import \"./getOneCoupon.css\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CouponCard from \"../couponCard/couponCard\";\nimport store from \"../../redux/store\";\nimport CouponDetails from \"../../model/CouponDetails\";\n\n\ninterface GetOneId {\n    id: string;\n}\n\nfunction GetOneCoupon(props: GetOneId): JSX.Element {\n\n    const [Coupon1, setData] = useState(new CouponDetails());\n    const propId = parseInt(props.id.replace(\":\", \"\"));\n\n    useEffect(() => {\n        console.log(\"in get one coupon\")\n        setData(store.getState().CouponsState.allCoupons.find(coupon => coupon.id == propId));\n    }, []);\n\n    let history = useHistory();\n\n    return (\n        <div className=\"getOneCoupon\">\n            <h2>Coupon #{props.id} details</h2><br />\n            <div className=\"center\">\n                <CouponCard\n                    id={Coupon1.id}\n                    companyID={Coupon1.companyID}\n                    categoryID={Coupon1.categoryID}\n                    title={Coupon1.title}\n                    startDate={Coupon1.startDate.toString()}\n                    endDate={Coupon1.endDate.toString()}\n                    description={Coupon1.description}\n                    amount={Coupon1.amount}\n                    price={Coupon1.price}\n                    image={Coupon1.image} />\n            </div>\n            <input type=\"button\" value=\"back\" onClick={() => history.go(-1)} />\n\n        </div>\n    );\n}\n\nexport default GetOneCoupon;\n","import { Notyf } from \"notyf\";\r\n\r\nclass Notify {\r\n    private notification = new Notyf({ duration: 4000, position: { x: \"center\", y: \"center\" } });\r\n\r\n    public success(message: string) {\r\n        this.notification.success(message);\r\n    }\r\n\r\n    public error(message: string) {\r\n        this.notification.error(message);\r\n    }\r\n}\r\n\r\nconst notify = new Notify();\r\n\r\nexport default notify;","import { error404Action } from './../redux/ErrorState';\r\nimport { logoutUser, updateToken } from './../redux/authState';\r\nimport axios from \"axios\";\r\nimport store from \"../redux/store\";\r\nimport notify from '../utils/Notify';\r\n\r\n\r\n\r\nconst jwtAxios = axios.create();\r\n\r\njwtAxios.interceptors.request.use(request => {\r\n  request.headers = {\r\n    \"Authorization\": store.getState().authState.userDetails.token,\r\n    'Content-Type': 'application/json',\r\n  }\r\n  return request;\r\n});\r\n\r\njwtAxios.interceptors.response.use(\r\n  response => {\r\n    switch (response.status) {\r\n      case 200:\r\n        console.log(\"ok\")\r\n        break;\r\n      case 202:\r\n        console.log(\"accepted\")\r\n        notify.success(response.data)\r\n        break;\r\n      default:\r\n        console.log(response.status);\r\n        break;\r\n    }\r\n    store.dispatch(updateToken(response.headers.authorization))\r\n    return response;\r\n  },\r\n  error => {\r\n    console.log(\"in erorr interceptor\");\r\n    if (error.response.status === 401) {\r\n      console.log(\"token time expired\")\r\n      notify.error(\"connection time expired, log in again to continue\")\r\n      store.dispatch(logoutUser());\r\n      throw error;\r\n    } else {\r\n      switch (error.response.status) {\r\n        case 400:\r\n          notify.error(error.response.data.description)\r\n          throw error\r\n        case 405:\r\n          notify.error(\"error in send\")\r\n          throw error;\r\n        case 404:\r\n          store.dispatch(error404Action(true))\r\n          throw error;\r\n        case 500:\r\n          notify.error(error.response.data.description)\r\n          throw error;\r\n        default:\r\n          throw error;\r\n      }\r\n\r\n    }\r\n  }\r\n);\r\nexport default jwtAxios;\r\n\r\n","import CouponDetails from \"../model/CouponDetails\";\r\nimport { companyDetailsAction, deleteCouponAction, getCouponsAction, updateCouponAction } from '../redux/companiesState';\r\nimport store from '../redux/store';\r\nimport globals from '../utils/Globals';\r\nimport jwtAxios from \"./JWTAxios\";\r\n\r\n\r\nexport async function addCouponAxios(coupon: CouponDetails) {\r\n    await jwtAxios.post(globals.urls.company + \"coupon/add\", coupon)\r\n        .then( (response) => {\r\n            console.log(response.data);\r\n            console.log(\"coupon added sucssfuly\");\r\n            companyCouponsAxios();\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n}\r\n\r\nexport async function deleteCouponAxios(id: string) {\r\n    const deleteUrl = globals.urls.company + \"coupon/delete/\" + id\r\n    await jwtAxios.delete(deleteUrl).then((response) => {\r\n        console.log(response.data);\r\n        console.log(\"coupon added sucssfuly\");\r\n        store.dispatch(deleteCouponAction(id));\r\n    })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n}\r\n\r\n\r\nexport async function updateCouponAxios(coupon: CouponDetails) {\r\n    await jwtAxios.post<CouponDetails>(globals.urls.company + \"coupon/update\", coupon)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            store.dispatch(updateCouponAction(coupon))\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n}\r\n\r\nexport async function companyDetailsAxios() {\r\n    const url = globals.urls.company + \"getDetails\";\r\n    console.log(url);\r\n    await jwtAxios.post(url)\r\n        .then(res => {\r\n            store.dispatch(companyDetailsAction(res.data))\r\n            console.log(store.getState().CompaniesState.company)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n}\r\nexport  function companyCouponsAxios() {\r\n    console.log(\"in couponsAxios\")\r\n    const url = globals.urls.company + \"coupon/getAll\";\r\n     jwtAxios.post(url)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            store.dispatch(getCouponsAction(res.data));\r\n            console.log(res.data)\r\n        }\r\n        )\r\n        .catch((err) => {\r\n            console.log(\"something was terrebliy wrong\");\r\n        })\r\n\r\n}\r\n","import CouponDetails from \"../model/CouponDetails\";\r\nimport { customerDetailsAction, purchaseCouponAction } from '../redux/customersState';\r\nimport store from '../redux/store';\r\nimport globals from '../utils/Globals';\r\nimport { getAllCoupons } from './GuestAxiosService';\r\nimport jwtAxios from \"./JWTAxios\";\r\n\r\n\r\nexport async function customerDetailsAxios() {\r\n    const url = globals.urls.customer + \"getDetails\";\r\n    await jwtAxios.post(url).then(async (res) => {\r\n        store.dispatch(customerDetailsAction(res.data));\r\n        console.log(\"got customer details:\")\r\n        console.log(res.data)\r\n        console.log(store.getState().CustomersState.customer)\r\n        await getAllCoupons();\r\n\r\n    }\r\n    )\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport async function purchaseCouponAxios(coupon: CouponDetails) {\r\n    await jwtAxios.post(globals.urls.customer + \"coupon/purchase\", coupon)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            console.log(\"coupon purchase secsfuly\")\r\n            store.dispatch(purchaseCouponAction(coupon))\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n}\r\n\r\n","import UserDetails from \"../model/LoginDetails\";\r\nimport { loginUser } from \"../redux/authState\";\r\nimport { wrongDetailsAction } from \"../redux/ErrorState\";\r\nimport store from \"../redux/store\";\r\nimport globals from \"../utils/Globals\";\r\nimport { companyDetailsAxios } from \"./CompanyAxiosService\";\r\nimport { customerDetailsAxios } from \"./CustomerAxiosService\";\r\nimport jwtAxios from \"./JWTAxios\";\r\nimport Backendless from \"backendless\";\r\n\r\n//login\r\nexport async function loginAxios(userDetails: UserDetails) {\r\n    await jwtAxios.post(globals.urls.general + \"loginManager/login\", userDetails)\r\n        .then(async (response) => {\r\n            store.dispatch(loginUser(response.headers.authorization));\r\n            await loginGetDetailsAxios(userDetails.clientType);\r\n            store.dispatch(wrongDetailsAction(false));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            store.dispatch(wrongDetailsAction(true));\r\n\r\n        });\r\n\r\n}\r\nasync function loginGetDetailsAxios(type: string) {\r\n    switch (type) {\r\n        case (\"Companies\"):\r\n            await companyDetailsAxios();\r\n            break;\r\n        case (\"Customers\"):\r\n            console.log(\"in customers\")\r\n            await customerDetailsAxios();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\n\r\n//backendless\r\ninterface myFileName {\r\n    fileURL: string\r\n}\r\n\r\nexport async function fileHandler(myEvent: any) {\r\n    var myFileUrl = \"\";\r\n    console.log(myEvent);\r\n    console.log(\"in file handler\")\r\n    var file: File = myEvent.target.files[0];\r\n    Backendless.initApp(\"A27F4009-7EAA-5BC6-FFF3-6D154177E700\", \"5B256D83-CDA2-4D0A-9EFB-74E6802A143E\");\r\n    await Backendless.Files.upload(file, \"img\", true)\r\n        .then(response => {\r\n            console.log(\"File successfully uploaded. Path to download: \");\r\n            myFileUrl = (response as myFileName).fileURL;\r\n            console.log(myFileUrl);\r\n        })\r\n        .catch(error => {\r\n            console.log(\"error - \" + error.message);\r\n        })\r\n    return myFileUrl;\r\n\r\n}\r\n\r\n","import \"./LoginFC.css\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport LoginDetails from \"../../model/LoginDetails\";\nimport store from \"../../redux/store\";\nimport { Typography, TextField, Select, MenuItem, ButtonGroup, Button } from \"@material-ui/core\";\nimport { loginAxios } from \"../../axios/GeneralAxiosService\";\n\nfunction LoginFC(): JSX.Element {\n    const { register, handleSubmit, setError, formState: { errors } } = useForm<LoginDetails>();\n    const history = useHistory();\n\n    async function send(loginDetails: LoginDetails) {\n        console.log(loginDetails.clientType);\n        await loginAxios(loginDetails);\n        if (store.getState().authState.userDetails.clientType != \"\") { history.push(\"/private/screen\") }\n    }\n\n\n\n\n    return (\n        <div className=\"LoginFC\">\n\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Sign In</Typography><br />\n                <TextField label=\"email\" variant=\"outlined\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"field is required\" }, pattern: {\n                            value: /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'Invalid Email'\n                        }\n                    })} />\n                <span className=\"errors\" > {errors.email && <p>{errors.email.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                    {...register(\"password\", { required: true, minLength: 3, maxLength: 10 })} />\n                <br /><br />\n                select user type <br />\n                <Select style={{ width: 250 }} defaultValue=\"Customers\"/*\"select user type\"*/ {...register(\"clientType\", { required: true })}>\n                    <MenuItem id=\"1\" value=\"Administrator\">System Administrator</MenuItem>\n                    <MenuItem id=\"2\" value=\"Companies\">Company</MenuItem>\n                    <MenuItem id=\"3\" value=\"Customers\">Client</MenuItem>\n                </Select>\n                <br /><br />\n\n                <ButtonGroup variant=\"contained\" >\n                    <Button type=\"submit\" color=\"primary\" > LOGIN </Button>\n                </ButtonGroup>\n\n            </form>\n\n        </div>\n    );\n}\n\nexport default LoginFC;\n\n","import \"./page404.css\";\n\nfunction Page404(): JSX.Element {\n    return (\n        <div className=\"page404\">\n            <h1>404</h1>\n            <h3>page not found</h3>\n            <h2>הכל לטובה :)</h2>\n\t\t\t<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/fBRcn-uPuDg\" title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n        </div>\n    );\n}\n\nexport default Page404;\n","import { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport store from \"../../redux/store\";\nimport \"./privateAside.css\";\n\nfunction PrivateAside(): JSX.Element {\n\n    let history = useHistory();\n    function ADcompanies() { history.push(\"/private/screen/admin/companies\") }\n    function ADcustomers() { history.push(\"/private/screen/admin/customers\") }\n    \n\n    function CPcopAdd() { history.push(\"/private/screen/company/coupon/add\") }\n    function CPdetails() { history.push(\"/private/screen/company/details\") }\n    function CPcoupons() { history.push(\"/private/screen/company/coupons\") }\n\n    function CSpurchase() { history.push(\"/private/screen/customer/purchase\") }\n    function CSdetails() { history.push(\"/private/screen/customer/details\") }\n    function CScoupons() { history.push(\"/private/screen/customer/coupons\") }\n\n\n    switch (store.getState().authState.userDetails.clientType) {\n        case \"Administrator\":\n            return (\n                <div className=\"privateAside\">\n                    admin main menu <br /><hr />\n                    <Button type=\"submit\" color=\"primary\" onClick={ADcompanies} variant=\"contained\" fullWidth>Companies</Button>\n                    <Button type=\"submit\" color=\"primary\" onClick={ADcustomers} variant=\"contained\" fullWidth>Customers</Button>\n\n                </div>\n            );\n          \n        case \"Companies\":\n            return (\n                <div className=\"privateAside\">\n                    company main menu <br /><hr />\n                    <Button type=\"submit\" color=\"primary\" onClick={CPcopAdd} variant=\"contained\" fullWidth>Add Coupon</Button>\n                    <Button type=\"submit\" color=\"primary\" onClick={CPcoupons} variant=\"contained\" fullWidth>MY Coupons</Button>\n                    <Button type=\"submit\" color=\"primary\" onClick={CPdetails} variant=\"contained\" fullWidth>View my details</Button>\n                </div>\n            );\n        \n\n        case \"Customers\":\n            return (\n                <div className=\"privateAside\">\n                    customer main menu <br /><hr />\n                    <Button type=\"submit\" color=\"primary\" onClick={CSpurchase} variant=\"contained\" fullWidth>purchase Coupons</Button>\n                    <Button type=\"submit\" color=\"primary\" onClick={CScoupons} variant=\"contained\" fullWidth>MY Coupons</Button>\n                    <Button type=\"submit\" color=\"primary\" onClick={CSdetails} variant=\"contained\" fullWidth>View my details</Button>\n                </div>\n            );\n          \n        default:\n            return (\n                <div>\n\n                </div>\n\n            )\n    }\n\n}\n\nexport default PrivateAside;\n\n\n","import Company from \"../model/Company\";\r\nimport Customer from \"../model/Customer\";\r\nimport { addCompanyAction, addCustomerAction, companyDownloadedAction, customerDownloadedAction, deleteCompanyAction, deleteCustomerAction, updateCompanyAction, updateCustomerAction } from \"../redux/adminState\";\r\nimport store from \"../redux/store\";\r\nimport globals from \"../utils/Globals\";\r\nimport jwtAxios from \"./JWTAxios\";\r\n\r\n//companies\r\nexport async function getAllCompaniesAxios() {\r\n    await jwtAxios.post(globals.urls.administrator + \"company/getAll\")\r\n        .then(res => {\r\n            console.log(\"new data:\\n\" + res);\r\n            store.dispatch(companyDownloadedAction(res.data))\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport async function addCompanyAxios(company: Company) {\r\n    await jwtAxios.post(globals.urls.administrator + \"company/add\", company)\r\n        .then((response) => {\r\n            console.log(\"data arraived\")\r\n            console.log(response);\r\n            store.dispatch(addCompanyAction(company))\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        });\r\n\r\n}\r\n\r\nexport async function updateCompanyAxios(company: Company) {\r\n    await jwtAxios.post<Company>(globals.urls.administrator + \"company/update\", company)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            store.dispatch(updateCompanyAction(company))\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n}\r\n\r\nexport async function deleteCompanyAxios(id: string) {\r\n    await jwtAxios.delete(globals.urls.administrator + \"company/delete/:\" + id)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            store.dispatch(deleteCompanyAction(parseInt(id)))\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n}\r\n\r\n\r\n//customers\r\nexport async function getAllCustomersAxios() {\r\n    await jwtAxios.post(globals.urls.administrator + \"customer/getAll\")\r\n        .then(res => {\r\n            console.log(\"new data:\\n\" + res);\r\n            store.dispatch(customerDownloadedAction(res.data))\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport async function addCustomerAxios(customer: Customer) {\r\n    await jwtAxios.post(globals.urls.administrator + \"customer/add\", customer)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            store.dispatch(addCustomerAction(customer))\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        });\r\n}\r\n\r\nexport async function updateCustomerAxios(customer: Customer) {\r\n    await jwtAxios.post<Customer>(globals.urls.administrator + \"customer/update\", customer)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            store.dispatch(updateCustomerAction(customer));\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n}\r\n\r\nexport async function deleteCustomerAxios(id: string) {\r\n    await jwtAxios.delete(globals.urls.administrator + \"customer/delete/:\" + id)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            store.dispatch(deleteCustomerAction(parseInt(id)))\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n}\r\n\r\n","import { Typography, TextField, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport \"./addCompany.css\";\nimport Company from \"../../model/Company\";\nimport { addCompanyAxios } from \"../../axios/AdminAxiosService\";\nimport store from \"../../redux/store\";\n\nfunction AddCompany(): JSX.Element {\n    const { register, handleSubmit, setError, formState: { errors } } = useForm<Company>();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n    }, []);\n\n    async function send(company: Company) {\n        await addCompanyAxios(company)\n    }\n\n\n    return (\n        <div className=\"addCompany\">\n\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Add New Company</Typography><br />\n                <TextField label=\"name\" variant=\"outlined\"\n                    {...register(\"name\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.name && <p>{errors.name.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"email\" variant=\"outlined\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"field is required\" },\n                        pattern: {\n                            value: /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'Invalid Email'\n                        }\n                    })} />\n                <span className=\"errors\"> {errors.email && <p>{errors.email.message}</p>}</span>\n\n                <LockOpenIcon style={{ fontSize: 40, margin: 10 }} />\n                <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                    {...register(\"password\", { required: true, minLength: 3, maxLength: 10 })} />\n                <span className=\"errors\"> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n            </form>\n            <br /><br />\n\n        </div>\n    );\n}\n\nexport default AddCompany;\n\n","import { Typography, TextField, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport Customer from \"../../model/Customer\";\nimport \"./addCustomer.css\";\nimport { addCustomerAxios } from \"../../axios/AdminAxiosService\";\nimport store from \"../../redux/store\";\n\nfunction AddCustomer(): JSX.Element {\n    const { register, handleSubmit, setError, formState: { errors } } = useForm<Customer>();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n    }, [])\n\n    async function send(customer: Customer) {\n        await addCustomerAxios(customer);\n    }\n\n    return (\n        <div className=\"addCustomer\">\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Add New Customer</Typography><br />\n                <TextField label=\"firstName\" variant=\"outlined\"\n                    {...register(\"firstName\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.firstName && <p>{errors.firstName.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"lastName\" variant=\"outlined\"\n                    {...register(\"lastName\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.lastName && <p>{errors.lastName.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"email\" variant=\"outlined\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"field is required\" }, pattern: {\n                            value: /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'Invalid Email'\n                        }\n                    })} />\n                <span className=\"errors\"> {errors.email && <p>{errors.email.message}</p>}</span>\n                <LockOpenIcon style={{ fontSize: 40, margin: 10 }} />\n                <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                    {...register(\"password\", { required: true, minLength: 3, maxLength: 10 })} />\n                <span className=\"errors\"> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n            </form>\n        </div>\n    );\n}\n\nexport default AddCustomer;\n\n","import { Button, ButtonGroup, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport store from \"../../redux/store\";\nimport { addCouponAxios } from \"../../axios/CompanyAxiosService\";\nimport \"./addCoupon.css\";\nimport { fileHandler } from \"../../axios/GeneralAxiosService\";\n\n\nfunction AddCoupon(): JSX.Element {\n    const { register, handleSubmit, setError, formState: { errors }, setValue } = useForm<CouponDetails>();\n    const [imgEvent, setImgEvent] = useState();\n    let history = useHistory();\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Companies\") { history.push(\"/private/screen\") }\n    }, []);\n\n    async function send(coupon: CouponDetails) {\n        if (imgEvent!=undefined) {\n            let url = await fileHandler(imgEvent)\n            console.log(url)\n            if(url!=\"error\"){coupon.image = url};\n        }\n        await addCouponAxios(coupon);\n    }\n\n   \n\n    function imageHandler(event:any) {\n                setImgEvent(event);\n    }\n\n    // async function send(coupon: CouponDetails) {\n    //     let url = await fileHandler(imgEvent)\n    //     setValue(\"image\", url);\n    //     await addCouponAxios(coupon);\n    // };\n\n    // async function imageHandler(myEvent: any) {\n    //     setImgEvent(myEvent);\n    // }\n\n    return (\n        <div className=\"addCoupon\">\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Add New Coupon</Typography><br />\n                <TextField label=\"title\" variant=\"outlined\"\n                    {...register(\"title\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.title && <p>{errors.title.message}</p>}</span>\n                <br /><br />\n                Category<br />\n                <Select style={{ width: 250 }} {...register(\"categoryID\", {\n                    required: { value: true, message: \"this field is required\" }\n                })}>\n                    <MenuItem value={\"0\"}>FOOD</MenuItem>\n                    <MenuItem value={\"1\"}>ELECTRICITY</MenuItem>\n                    <MenuItem value={\"2\"}>RESTAURANT </MenuItem>\n                    <MenuItem value={\"3\"}>VACATION</MenuItem>\n                </Select>\n                <br />\n                <span className=\"errors\"> {errors.categoryID && <p>{errors.categoryID.message}</p>}</span>\n                <br />\n                <TextField label=\"description\" variant=\"outlined\"\n                    {...register(\"description\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.description && <p>{errors.description.message}</p>}</span>\n                <br /><br />\n                <TextField\n                    {...register(\"startDate\")}\n                    id=\"datetime-local\"\n                    label=\"Start Date\"\n                    type=\"datetime-local\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <br /><br />\n                <TextField\n                    {...register(\"endDate\")}\n                    id=\"date-local\"\n                    label=\"End Date\"\n                    type=\"datetime-local\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <br /><br />\n\n                <TextField type=\"number\" label=\"amount\" variant=\"outlined\" {...register(\"amount\", {\n                    required: { value: true, message: \"this field is required\" },\n                    min: { value: 1, message: \"minimum amount is 1 Piece\" },\n\n                })} />\n                <br />\n                <span className=\"errors\"> {errors.amount && <p>{errors.amount.message}</p>}</span>\n                <br />\n                <TextField type=\"number\" label=\"price\" variant=\"outlined\" {...register(\"price\", {\n                    required: { value: true, message: \"this field is required\" },\n                    min: { value: 1, message: \"minimum price is 1 NIS\" },\n                })} />\n                <br />\n                <span className=\"errors\"> {errors.price && <p>{errors.price.message}</p>}</span>\n                <br />\n                <input type=\"file\" name=\"myImg\" accept=\"image/*\" onChange={imageHandler} />\n                <span className=\"errors\"> {errors.image && <p>{errors.image.message}</p>}</span>\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n            </form>\n        </div>\n    );\n}\n\nexport default AddCoupon;\n","import { useHistory } from \"react-router\";\nimport { deleteCouponAxios } from \"../../axios/CompanyAxiosService\";\nimport \"./deleteCoupon.css\";\nimport { useEffect } from \"react\";\nimport store from \"../../redux/store\";\n\n\ninterface DeleteId {\n    id: string;\n}\n\nfunction DeleteCoupon(props: DeleteId): JSX.Element {\n    let history = useHistory();\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Companies\") { history.push(\"/private/screen\") }\n    }, []);\n\n\n    async function deleteCoupon() {\n        await deleteCouponAxios(props.id);\n        history.push(\"/company/coupon/getAll\")\n    }\n    return (\n        <div className=\"deleteCoupon smallBox\">\n            <h2>are you sure you want to delete this coupon?</h2>\n            <input type=\"button\" value=\"yes, i want to delete it\" onClick={deleteCoupon} />\n        </div>\n    );\n}\n\nexport default DeleteCoupon;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport \"./updateCoupon.css\";\nimport { useForm } from \"react-hook-form\";\nimport Coupon from \"../../model/CouponDetails\";\nimport store from \"../../redux/store\";\nimport { Button, ButtonGroup, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport { updateCouponAxios } from \"../../axios/CompanyAxiosService\";\nimport { fileHandler } from \"../../axios/GeneralAxiosService\";\n\ninterface Id {\n    id: string;\n}\n\nfunction UpdateCoupon(props: Id): JSX.Element {\n    const { register, handleSubmit, formState: { errors }, setValue } = useForm<CouponDetails>();\n    const [imgEvent, setImgEvent] = useState<any>();\n    let history = useHistory();\n    const propId = parseInt(props.id.replace(\":\", \"\"));\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Companies\") { history.push(\"/private/screen\") }\n    }, []);\n\n\n    const CouponNow = store.getState().CompaniesState.company.coupons.find(coupon => coupon.id == propId)\n    console.log(CouponNow);\n    setValue(\"id\", CouponNow.id);\n    setValue(\"companyID\", CouponNow.companyID);\n    setValue(\"categoryID\", CouponNow.categoryID);\n    setValue(\"title\", CouponNow.title);\n    setValue(\"description\", CouponNow.description);\n    setValue(\"amount\", CouponNow.amount);\n    setValue(\"price\", CouponNow.price);\n    setValue(\"image\", CouponNow.image);\n\n    async function send(coupon: Coupon) {\n        if (imgEvent!=undefined) {\n            let url = await fileHandler(imgEvent)\n            console.log(url)\n            if(url!=\"error\"){coupon.image = url};\n            console.log(CouponNow);\n        }\n        await updateCouponAxios(coupon);\n    }\n\n   \n\n    function imageHandler(event:any) {\n                setImgEvent(event);\n    }\n  \n\n    return (\n        <div className=\"updateCoupon\">\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">update Coupon{CouponNow.title}</Typography><br />\n                <TextField label=\"title\" variant=\"outlined\"\n                    {...register(\"title\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.title && <p>{errors.title.message}</p>}</span>\n                <br /><br />\n\n                <br />\n                Category<br />\n                <Select style={{ width: 250 }} defaultValue={CouponNow.categoryID} {...register(\"categoryID\", {\n                    required: { value: true, message: \"this field is required\" }\n                })}>\n                    { }\n                    <MenuItem value={\"FOOD\"}>FOOD</MenuItem>\n                    <MenuItem value={\"ELECTRICITY\"}>ELECTRICITY</MenuItem>\n                    <MenuItem value={\"RESTAURANT\"}>RESTAURANT </MenuItem>\n                    <MenuItem value={\"VACATION\"}>VACATION</MenuItem>\n                </Select>\n                <br />\n                <span className=\"errors\"> {errors.categoryID && <p>{errors.categoryID.message}</p>}</span>\n                <br />\n                <TextField label=\"description\" variant=\"outlined\"\n                    {...register(\"description\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.description && <p>{errors.description.message}</p>}</span>\n                <br /><br />\n\n                <TextField\n                    {...register(\"startDate\")}\n                    id=\"datetime-local\"\n                    label=\"Start Date\"\n                    type=\"datetime-local\"\n                    defaultValue={CouponNow.startDate.toString().split(\":\")[0] + \":\" + (CouponNow.startDate.toString().split(\":\")[1])}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <br /><br />\n                <TextField\n                    {...register(\"endDate\")}\n                    id=\"datetime-local\"\n                    label=\"End Date\"\n                    type=\"datetime-local\"\n                    defaultValue={CouponNow.endDate.toString().split(\":\")[0] + \":\" + (CouponNow.endDate.toString().split(\":\")[1])}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <br /><br />\n\n\n                <TextField type=\"number\" label=\"amount\" variant=\"outlined\" {...register(\"amount\", {\n                    required: { value: true, message: \"this field is required\" },\n                    min: { value: 1, message: \"minimum amount is 1 Piece\" },\n\n                })} />\n                <br />\n                <span className=\"errors\"> {errors.amount && <p>{errors.amount.message}</p>}</span>\n                <br />\n                <TextField type=\"number\" label=\"price\" variant=\"outlined\" {...register(\"price\", {\n                    required: { value: true, message: \"this field is required\" },\n                    min: { value: 0, message: \"minimum price is 0 NIS\" },\n                })} />\n                <br />\n                <span className=\"errors\"> {errors.price && <p>{errors.price.message}</p>}</span>\n                <br />\n                <label>Image</label> <br />\n                <img className=\"img\" src={CouponNow.image} ></img>\n                <input type=\"file\" name=\"myImg\" accept=\"image/*\" onChange={imageHandler} />\n\n                <br /><br />\n\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n                <input type=\"button\" value=\"back\" onClick={() => history.go(-1)} />\n\n\n            </form>\n        \n        </div>\n    );\n}\n\nexport default UpdateCoupon;\n","import \"./companyDetails.css\";\nimport { useEffect } from \"react\";\nimport store from \"../../redux/store\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction CompanyDetails(): JSX.Element {\n    let history = useHistory();\n    const Company1 = store.getState().CompaniesState.company;\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Companies\") { history.push(\"/private/screen\") }\n    }, []);\n\n    return (\n        <div className=\"companyDetails\">\n            my details\n            <div>\n                id: {Company1.id} <br />\n                name: {Company1.name} <br />\n                email: {Company1.email} <br />\n                password: {Company1.password} <br />\n                <input type=\"button\" value=\"Back\" onClick={() => history.go(-1)} />\n                <br /><br />\n\n            </div>\n        </div>\n    );\n}\n\nexport default CompanyDetails;\n","import { useEffect } from \"react\";\nimport store from \"../../redux/store\";\nimport \"./customerDetails.css\";\nimport { useHistory } from \"react-router\";\n\n\nfunction CustomerDetails(): JSX.Element {\n    let history = useHistory();\n    let Customer1 = store.getState().CustomersState.customer;\n\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Customers\") { history.push(\"/private/screen\") }\n    }, []);\n\n    return (\n        <div className=\"customerDetails\">\n            my details\n            <div>\n\n                id: {Customer1.id} <br />\n                name: {Customer1.firstName} {Customer1.lastName}<br />\n                email: {Customer1.email} <br />\n                password: {Customer1.password} <br />\n                <input type=\"button\" value=\"Back\" onClick={() => history.go(-1)} />\n                <br /><br />\n\n            </div>\n        </div>\n    );\n}\n\nexport default CustomerDetails;\n","import { useEffect } from \"react\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport store from \"../../redux/store\";\nimport \"./privateMain.css\";\n\nfunction PrivateMain(): JSX.Element {\n    useEffect(() => {\n        store.dispatch(couponsForViewAction(store.getState().CouponsState.allCoupons))\n        console.log(\"in main\")\n    }\n        , []);\n\n\n    switch (store.getState().authState.userDetails.clientType) {\n        case \"Administrator\":\n            return (\n                <div className=\"privateMain\">\n\n                    Wellcom Admin <br /><br />\n                    what wold you like to do?\n\n\n                </div>\n            );\n            break;\n\n        case \"Companies\":\n            return (\n                <div className=\"privateMain\">\n\n                    Wellcom Company <br /><br />\n                    what wold you like to do?\n\n                </div>\n            );\n            break;\n\n        case \"Customers\":\n            return (\n                <div className=\"privateMain\">\n                    wellcome customer\n\n                    <ViewCouponsSmall />\n\n                </div>\n            );\n            break;\n\n        default:\n            return (\n                <div>\n                </div>\n\n            )\n    }\n\n}\n\nexport default PrivateMain;\n","import \"./paymentPage.css\";\nimport {  useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport store from \"../../redux/store\";\nimport { useHistory } from \"react-router\";\nimport { purchaseCouponAxios } from \"../../axios/CustomerAxiosService\";\n\ninterface GetCoupon {\n    id: string;\n}\n\n\n\nfunction PaymentPage(props: GetCoupon): JSX.Element {\n    console.log(props.id)\n    let history = useHistory();\n    const couponId = parseInt(props.id.replace(\":\", \"\"));\n    const myCoupon = store.getState().CouponsState.allCoupons.find(CouponDetails => CouponDetails.id == couponId);\n    const [buy, setBuy] = useState<boolean>(false);\n\n    async function purchase() {\n        if (store.getState().authState.userDetails.clientType == \"Customers\") {\n            await purchaseCouponAxios(myCoupon);\n        }\n        else {\n            setBuy(true);\n        }\n    }\n\n    function login() {\n        history.push(\"/login\")\n    }\n\n    function showLogin() {\n        if (buy) {\n            return <div>\n                log in as client\n                <input type=\"button\" value=\"LOGIN\" onClick={login} />\n            </div>\n\n        }\n    }\n    return (\n        <div className=\"purchaseCoupon\">\n            <h2> enter credit card details:</h2>\n            number:_________________\n            cvv:_________\n            exp:___ ___\n            name:________\n            <br /><br />\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\" onClick={purchase}> I want to buy it!! </Button>\n             \n            {showLogin()}\n        </div>\n    );\n}\n\nexport default PaymentPage;","import { Select, MenuItem, Button, ButtonGroup, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport store from \"../../redux/store\";\nimport \"./companyCoupons.css\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport { useHistory } from \"react-router\";\n\n\nfunction CompanyCoupons(): JSX.Element {\n    const [searchType, setType] = useState(\"\");\n    const { register, handleSubmit, setError, formState: { errors } } = useForm<CouponDetails>();\n    let history = useHistory();\n\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Companies\") { history.push(\"/private/screen\") }\n        store.dispatch(couponsForViewAction(store.getState().CompaniesState.company.coupons));\n    }, []);\n\n\n    function typeSet(args: any) {\n        setType(args.target.value);\n        console.log(searchType);\n    }\n\n    function searchBy() {\n        switch (searchType) {\n            case \"All\":\n                return <div></div>\n            case \"Id\":\n                return <div>\n                    <TextField type=\"number\" label=\"id\" variant=\"outlined\" {...register(\"id\", {\n                        required: { value: true, message: \"this field is required\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errors.price && <p>{errors.price.message}</p>}</span>\n\n                </div>\n            case \"MaxPrice\":\n                return <div>\n                    <TextField type=\"number\" label=\"price\" variant=\"outlined\" {...register(\"price\", {\n                        required: { value: true, message: \"this field is required\" },\n                        min: { value: 0, message: \"minimum price is 0 NIS\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errors.price && <p>{errors.price.message}</p>}</span>\n\n                </div>\n            case \"Category\":\n                return <div>\n                    Category<br />\n                    <Select style={{ width: 250 }} {...register(\"categoryID\", {\n                        required: { value: true, message: \"this field is required\" }\n                    })}>\n                        <MenuItem value={\"FOOD\"}>FOOD</MenuItem>\n                        <MenuItem value={\"ELECTRICITY\"}>ELECTRICITY</MenuItem>\n                        <MenuItem value={\"RESTAURANT\"}>RESTAURANT </MenuItem>\n                        <MenuItem value={\"VACATION\"}>VACATION</MenuItem>\n                    </Select>\n                    <br />\n                    <span className=\"errors\"> {errors.categoryID && <p>{errors.categoryID.message}</p>}</span>\n\n                </div>\n        }\n    }\n\n    function search(couponFilter: CouponDetails) {\n        const couponsInStore = store.getState().CompaniesState.company.coupons;\n        switch (searchType) {\n            case \"All\":\n                store.dispatch(couponsForViewAction(couponsInStore));\n                break;\n            case \"Id\":\n                let couponsArray: CouponDetails[] = [];\n                const idCoupon = couponsInStore.find(coupon => coupon.id == couponFilter.id)\n                if (idCoupon) { couponsArray.push(idCoupon) };\n                store.dispatch(couponsForViewAction(couponsArray));\n                break;\n            case \"MaxPrice\":\n                store.dispatch(couponsForViewAction(couponsInStore.filter(coupon => coupon.price <= couponFilter.price)));\n                break;\n            case \"Category\":\n                store.dispatch(couponsForViewAction(couponsInStore.filter(coupon => coupon.categoryID === couponFilter.categoryID)));\n        }\n    }\n\n    return (\n\n        <div className=\"companyCoupons\">\n\n            <Select style={{ width: 250 }} defaultValue=\"All\" onChange={typeSet}  >\n                <MenuItem value={\"All\"}>All</MenuItem>\n                <MenuItem value={\"MaxPrice\"}>Max Price</MenuItem>\n                <MenuItem value={\"Category\"}>Category </MenuItem>\n                <MenuItem value={\"Id\"}>Id</MenuItem>\n            </Select>\n            <form onSubmit={handleSubmit(search)}>\n\n                {searchBy()}\n\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\" >Search</Button>\n                </ButtonGroup>\n\n                <br />\n            </form>\n\n            <ViewCouponsSmall />\n        </div>\n    );\n}\n\nexport default CompanyCoupons;\n","import \"./customerCoupons.css\";\nimport { Select, MenuItem, Button, ButtonGroup, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport store from \"../../redux/store\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport { useHistory } from \"react-router\";\n\n\nfunction CustomerCoupons(): JSX.Element {\n    const [searchType, setType] = useState(\"\");\n    const { register, handleSubmit, formState: { errors } } = useForm<CouponDetails>();\n    let history = useHistory();\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Customers\") { history.push(\"/private/screen\") }\n        store.dispatch(couponsForViewAction(store.getState().CustomersState.customer.coupons));\n    }\n        , []);\n\n    function typeSet(args: any) {\n        setType(args.target.value);\n        console.log(searchType);\n    }\n\n    function searchBy() {\n        switch (searchType) {\n            case \"All\":\n                return <div></div>\n            case \"MaxPrice\":\n                return <div>\n                    <TextField type=\"number\" label=\"price\" variant=\"outlined\" {...register(\"price\", {\n                        required: { value: true, message: \"this field is required\" },\n                        min: { value: 1, message: \"minimum price is 1 NIS\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errors.price && <p>{errors.price.message}</p>}</span>\n\n                </div>\n            case \"Category\":\n                return <div>\n                    Category<br />\n                    <Select style={{ width: 250 }} {...register(\"categoryID\", {\n                        required: { value: true, message: \"this field is required\" }\n                    })}>\n                        <MenuItem value={\"FOOD\"}>FOOD</MenuItem>\n                        <MenuItem value={\"ELECTRICITY\"}>ELECTRICITY</MenuItem>\n                        <MenuItem value={\"RESTAURANT\"}>RESTAURANT </MenuItem>\n                        <MenuItem value={\"VACATION\"}>VACATION</MenuItem>\n                    </Select>\n                    <br />\n                    <span className=\"errors\"> {errors.categoryID && <p>{errors.categoryID.message}</p>}</span>\n\n                </div>\n        }\n    }\n\n    function search(couponFilter: CouponDetails) {\n        console.log(\"couponFilter\")\n        console.log(couponFilter)\n        const couponsInStore = store.getState().CustomersState.customer.coupons;\n        switch (searchType) {\n            case \"All\":\n                store.dispatch(couponsForViewAction(couponsInStore));\n                break;\n            case \"MaxPrice\":\n                store.dispatch(couponsForViewAction(couponsInStore.filter(coupon => coupon.price <= couponFilter.price)));\n                break;\n            case \"Category\":\n                store.dispatch(couponsForViewAction(couponsInStore.filter(coupon => coupon.categoryID === couponFilter.categoryID)));\n                break;\n        }\n    }\n\n    return (\n\n        <div className=\"customerCoupons\">\n\n            <Select style={{ width: 250 }} defaultValue=\"All\" onChange={typeSet}  >\n                <MenuItem value={\"All\"}>All</MenuItem>\n                <MenuItem value={\"MaxPrice\"}>Max Price</MenuItem>\n                <MenuItem value={\"Category\"}>Category </MenuItem>\n            </Select>\n            <form onSubmit={handleSubmit(search)}>\n\n                {searchBy()}\n\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\" >Search</Button>\n                </ButtonGroup>\n\n                <br />\n            </form>\n\n            <ViewCouponsSmall />\n        </div>\n    );\n}\n\nexport default CustomerCoupons;\n\n\n\n","import { Typography, TextField, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Customer from \"../../model/Customer\";\nimport store from \"../../redux/store\";\nimport \"./updateCustomer.css\";\nimport { updateCustomerAxios } from \"../../axios/AdminAxiosService\";\n\ninterface Id {\n    id: number;\n}\n\n\nfunction UpdateCustomer(props: Id): JSX.Element {\n    const { register, handleSubmit, formState: { errors }, setValue } = useForm<Customer>();\n    let history = useHistory();\n    const CustomerNow = store.getState().AdminState.customers.find(customer => customer.id == props.id)\n    setValue(\"id\", CustomerNow.id);\n    setValue(\"firstName\", CustomerNow.firstName);\n    setValue(\"lastName\", CustomerNow.lastName);\n    setValue(\"email\", CustomerNow.email);\n    setValue(\"password\", CustomerNow.password);\n    setValue(\"coupons\", CustomerNow.coupons);\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n    }, [])\n\n    async function send(customer: Customer) {\n        await updateCustomerAxios(customer);\n    }\n\n    return (\n        <div className=\"updateCustomer\">\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Update Customer {CustomerNow.firstName} {CustomerNow.lastName}</Typography><br />\n                <TextField label=\"firstName\" variant=\"outlined\"\n                    {...register(\"firstName\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.firstName && <p>{errors.firstName.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"lastName\" variant=\"outlined\"\n                    {...register(\"lastName\", {\n                        required: { value: true, message: \"field is required\" }\n                    })} />\n                <span className=\"errors\"> {errors.lastName && <p>{errors.lastName.message}</p>}</span>\n                <br /><br />\n                <TextField label=\"email\" variant=\"outlined\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"field is required\" }, pattern: {\n                            value: /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'Invalid Email'\n                        }\n                    })} />\n                <span className=\"errors\"> {errors.email && <p>{errors.email.message}</p>}</span>\n                <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                    {...register(\"password\", { required: true, minLength: 3, maxLength: 10 })} />\n                <span className=\"errors\"> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateCustomer;\n\n\n","import { Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport { Paper, TableContainer, Table, TableHead, TableRow, TableBody, TablePagination, TableCell } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteCustomerAxios, getAllCustomersAxios } from \"../../axios/AdminAxiosService\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport Customer from \"../../model/Customer\";\nimport LoginDetails from \"../../model/LoginDetails\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport store from \"../../redux/store\";\nimport \"./adminCustomers.css\";\nimport PasswordIcon from '@mui/icons-material/Password';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport AppsIcon from '@mui/icons-material/Apps';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport UpdateCustomer from \"../updateCustomer/updateCustomer\";\nimport addCompany from \"../addCompany/addCompany\";\nimport { loginAxios } from \"../../axios/GeneralAxiosService\";\n\n\ninterface Column {\n    id: 'id' | 'firstName' | 'lastName' | 'email' | 'password' | 'coupons' | 'update' | 'deleteIt';\n    label: string;\n    minWidth?: number;\n    align?: 'right';\n    format?: (value: number) => string;\n}\n\nfunction AdminCustomers(): JSX.Element {\n\n    const [customers, setData] = useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [passss, setPass] = useState(\"***\");\n    const [CustomerInRow, setCustomerInRow] = useState<Customer>(new Customer());\n    const [openPasswordBox, setOpenPasswordBox] = React.useState(false);\n    const [isAllow, setAllowedPassword] = React.useState(false);\n    const { register, handleSubmit, setError, formState: { errors }, setValue } = useForm<LoginDetails>();\n    setValue(\"clientType\", \"Administrator\")\n    const [openUpdateBox, setOpenUpdateBox] = React.useState(false);\n    const { register: registerCust, handleSubmit: handleSubmitCust, setError: setErrorCust, formState: { errors: errorsCust }, setValue: setValueCust } = useForm<Customer>();\n    const [openCouponsBox, setOpenCouponsBox] = React.useState(false);\n    const [openDeleteBox, setOpenDeleteBox] = React.useState(false);\n    const [searchType, setType] = useState(\"\");\n    let history = useHistory();\n\n    React.useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n        syncSetData();\n    }, []);\n\n    function addCustomer() {\n        history.push(\"/private/screen/admin/customer/add\");\n    }\n\n    async function syncSetData() {\n        await getAllCustomersAxios();\n        setData(store.getState().AdminState.customers);\n    }\n\n    function searchTypeSet(args: any) {\n        setType(args.target.value);\n    }\n\n    function searchBy() {\n        switch (searchType) {\n            case \"All\":\n                return <div></div>\n            case \"Id\":\n                return <div>\n                    <TextField type=\"number\" label=\"id\" variant=\"outlined\" {...registerCust(\"id\", {\n                        required: { value: true, message: \"this field is required\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errorsCust.id && <p>{errorsCust.id.message}</p>}</span>\n                </div>\n\n            case \"FirstName\":\n                return <div>\n                    <TextField label=\"firstName\" variant=\"outlined\" {...registerCust(\"firstName\", {\n                        required: { value: true, message: \"this field is required\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errorsCust.firstName && <p>{errorsCust.firstName.message}</p>}</span>\n                </div>\n\n            case \"LastName\":\n                return <div>\n                    <TextField label=\"lastName\" variant=\"outlined\" {...registerCust(\"lastName\", {\n                        required: { value: true, message: \"this field is required\" },\n                    })} />\n                    <br />\n                    <span className=\"errors\"> {errorsCust.lastName && <p>{errorsCust.lastName.message}</p>}</span>\n\n                </div>\n\n\n        }\n    }\n\n    function search(customer: Customer) {\n        switch (searchType) {\n            case \"All\":\n                setData(store.getState().AdminState.customers);\n                break;\n            case \"Id\":\n                let customersArray: Customer[] = [];\n                const myCustomer = store.getState().AdminState.customers.find(customer1 => customer1.id == customer.id)\n                if (myCustomer) { customersArray.push(myCustomer) };\n                setData(customersArray);\n                break;\n            case \"FirstName\":\n                let customersFirstNameArray: Customer[] = [];\n                const mycustomerFirstName = store.getState().AdminState.customers.filter(customer1 => customer1.firstName.includes(customer.firstName));\n                if (mycustomerFirstName) { mycustomerFirstName.map((customerItem) => customersFirstNameArray.push(customerItem)); }\n                setData(customersFirstNameArray);\n                break;\n            case \"LastName\":\n                let customersLastNameArray: Customer[] = [];\n                const mycustomerLastName = store.getState().AdminState.customers.filter(customer1 => customer1.lastName.includes(customer.lastName));\n                if (mycustomerLastName) { mycustomerLastName.map((customerItem) => customersLastNameArray.push(customerItem)); }\n                setData(customersLastNameArray);\n                break;\n        }\n    }\n\n    function showPassword() {\n        let show = <div>***</div>;\n        if (isAllow) { show = <div>{passss}</div> }\n        return show\n    }\n\n    async function chekAdminDetails(loginDetails: LoginDetails) {\n        await loginAxios(loginDetails);\n        if (!store.getState().ErrorsState.wrongDetails) {\n            setAllowedPassword(true)\n        }\n    }\n\n    async function deleteCustomer() {\n        await deleteCustomerAxios(CustomerInRow.id.toString());\n    }\n\n    const handleOpenPasswordBox = (event: string) => {\n        setOpenPasswordBox(!openPasswordBox);\n        setPass(event);\n    };\n\n    const handleClosePasswordBox = () => {\n        setOpenPasswordBox(!openPasswordBox);\n        setAllowedPassword(false)\n    };\n\n    const handleOpenUpdateBox = (customer: Customer) => {\n        setOpenUpdateBox(!openUpdateBox);\n        setCustomerInRow(customer);\n    };\n\n    const handleCloseUpdateBox = () => {\n        setOpenUpdateBox(!openUpdateBox);\n    };\n\n    const handleOpenDeleteBox = (customer: Customer) => {\n        setOpenDeleteBox(!openDeleteBox);\n        setCustomerInRow(customer);\n    };\n\n    const handleCloseDeleteBox = () => {\n        setOpenDeleteBox(!openDeleteBox);\n    };\n\n    async function handleOpenCouponsBox(customer: Customer) {\n        store.dispatch(couponsForViewAction(customer.coupons));\n        setOpenCouponsBox(!openCouponsBox);\n    };\n\n    const handleCloseCouponsBox = () => {\n        setOpenCouponsBox(!openCouponsBox);\n    };\n\n    const columns: readonly Column[] = [\n        { id: 'id', label: 'Id', minWidth: 20, align: \"right\" },\n        { id: 'firstName', label: 'firstName', minWidth: 80, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'lastName', label: 'lastName', minWidth: 80, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'email', label: 'Email', minWidth: 100, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'password', label: 'Password', minWidth: 30, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'coupons', label: 'Coupons', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'update', label: 'Edit', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n        { id: 'deleteIt', label: 'Delete', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    ];\n\n    function createData(customer1: Customer) {\n        const id = customer1.id;\n        const firstName = customer1.firstName;\n        const lastName = customer1.lastName;\n        const email = customer1.email;\n        const password = <div>\n            <Button value={customer1.password} startIcon={<PasswordIcon />} onClick={() => {\n                handleOpenPasswordBox(customer1.password);\n            }}> </Button>\n            <Dialog\n                open={openPasswordBox}\n                onClose={handleClosePasswordBox}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"View Password\"}\n                    <Button className=\"close\" onClick={handleClosePasswordBox} autoFocus>X</Button>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        For double chek, enter your admin's email and password\n                        <br />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <form onSubmit={handleSubmit(chekAdminDetails)}>\n                        <TextField label=\"email\" variant=\"outlined\"\n                            {...register(\"email\", {\n                                required: { value: true, message: \"field is required\" }\n                            })} />\n                        <span className=\"errors\" > {errors.email && <p>{errors.email.message}</p>}</span>\n                        <br /><br />\n                        <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                            {...register(\"password\", { required: true })} />\n                        <br /><br />\n                        <ButtonGroup variant=\"contained\" >\n                            <Button type=\"submit\" color=\"primary\" > SEND & SHOW </Button>\n                        </ButtonGroup>\n                        <br /><br />\n\n                    </form>\n                    {showPassword()}\n                </DialogActions>\n            </Dialog>\n        </div>;\n\n\n        const update = <div>\n            <Button startIcon={<ModeEditIcon />} onClick={() => {\n                handleOpenUpdateBox(customer1);\n            }}> </Button>\n            <Dialog\n                open={openUpdateBox}\n                onClose={handleCloseUpdateBox}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Update Customer\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        *************\n                        <br />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <UpdateCustomer id={CustomerInRow.id} />\n\n                    <Button onClick={handleCloseUpdateBox} autoFocus>X</Button>\n                </DialogActions>\n            </Dialog>\n        </div>;\n        <div> <input type=\"button\" value=\"update\" />  </div>;\n\n        const deleteIt = <div>\n            <Button value={customer1.password} startIcon={<DeleteIcon />} onClick={() => { handleOpenDeleteBox(customer1); }}> </Button>\n\n            <Dialog\n                open={openDeleteBox}\n                onClose={handleCloseDeleteBox}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Delete this Customer?\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Deleting a customer is not returnable, after you will delete the\n                        customer it will be lost forever.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDeleteBox}>NO, STOP!</Button>\n                    <Button onClick={deleteCustomer} autoFocus>\n                        CONTINUE\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n\n        const coupons = <div>\n            <Button startIcon={<AppsIcon />} onClick={() => { handleOpenCouponsBox(customer1) }}> </Button>\n            <Dialog\n                open={openCouponsBox}\n                onClose={handleCloseCouponsBox}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"View Coupons\"}\n                    <Button className=\"close\" onClick={handleCloseCouponsBox} autoFocus>X</Button>\n                </DialogTitle>\n                <DialogActions>\n                    <ViewCouponsSmall />\n                </DialogActions>\n            </Dialog>\n        </div>;\n\n        return { id, firstName, lastName, email, password, coupons, update, deleteIt };\n    }\n\n    const rows: { id: number; firstName: string; lastName: string; email: string; password: JSX.Element; coupons: JSX.Element; update: JSX.Element; deleteIt: JSX.Element; }[] = [];\n    customers.map((customer) => rows.push(createData(customer)));\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n\n    return (\n        <div className=\"adminCustomers\">\n            <ButtonGroup variant=\"contained\" fullWidth>\n                <Button type=\"button\" color=\"primary\" onClick={addCustomer}>Add New Customer</Button>\n            </ButtonGroup>\n            <br /><br />\n\n            <Select style={{ width: 250 }} defaultValue=\"All\" onChange={searchTypeSet}  >\n                <MenuItem value={\"All\"}>All</MenuItem>\n                <MenuItem value={\"Id\"}>Id</MenuItem>\n                <MenuItem value={\"FirstName\"}>FirstName</MenuItem>\n                <MenuItem value={\"LastName\"}>LastName</MenuItem>\n            </Select>\n\n            {searchBy()}\n\n            <form onSubmit={handleSubmitCust(search)}>\n\n\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\" >Search</Button>\n                </ButtonGroup>\n            </form>\n\n            <br /><br />\n\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                <TableContainer sx={{ maxHeight: 440 }}>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row) => {\n                                    return (\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                                            {columns.map((column) => {\n                                                const value = row[column.id];\n                                                return (\n                                                    <TableCell key={column.id} align={column.align}>\n                                                        {column.format && typeof value === 'number'\n                                                            ? column.format(value)\n                                                            : value}\n                                                    </TableCell>\n                                                );\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n\nexport default AdminCustomers;","import { Typography, TextField, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Company from \"../../model/Company\";\nimport store from \"../../redux/store\";\nimport \"./updateCompany.css\";\nimport { updateCompanyAxios } from \"../../axios/AdminAxiosService\";\n\n\ninterface Id {\n    id: number;\n}\n\nfunction UpdateCompany(props: Id): JSX.Element {\n    const { register, handleSubmit, formState: { errors }, setValue } = useForm<Company>();\n    let history = useHistory();\n\n\n    const CompanyNow = store.getState().AdminState.companies.find(company => company.id == props.id)\n    setValue(\"id\", CompanyNow.id);\n    setValue(\"name\", CompanyNow.name);\n    setValue(\"email\", CompanyNow.email);\n    setValue(\"password\", CompanyNow.password);\n    setValue(\"coupons\", CompanyNow.coupons);\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n    }, [])\n\n    async function send(company: Company) {\n        console.log(company);\n        await updateCompanyAxios(company);\n    }\n\n\n    return (\n        <div className=\"updateCompany\">\n            <form onSubmit={handleSubmit(send)}>\n                <Typography variant=\"h4\" className=\"HeadLine\">Update Company {CompanyNow.name}</Typography><br />\n                <TextField label=\"email\" variant=\"outlined\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"field is required\" }, pattern: {\n                            value: /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'Invalid Email'\n                        }\n                    })} />\n                <span className=\"errors\"> {errors.email && <p>{errors.email.message}</p>}</span>\n                <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n                    {...register(\"password\", { required: true, minLength: 3, maxLength: 10 })} />\n                <span className=\"errors\"> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button type=\"submit\" color=\"primary\">Send</Button>\n                </ButtonGroup>\n\n\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateCompany;\n\n","import { Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport { Paper, TableContainer, Table, TableHead, TableRow, TableBody, TablePagination, TableCell } from \"@mui/material\";\nimport PasswordIcon from '@mui/icons-material/Password';\nimport { useState } from \"react\";\nimport \"./adminCompanies.css\";\nimport * as React from 'react';\nimport store from \"../../redux/store\";\nimport { useHistory } from \"react-router\";\nimport Company from \"../../model/Company\";\nimport LoginDetails from \"../../model/LoginDetails\";\nimport { useForm } from \"react-hook-form\";\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport AppsIcon from '@mui/icons-material/Apps';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { deleteCompanyAxios, getAllCompaniesAxios } from \"../../axios/AdminAxiosService\";\nimport { loginAxios } from \"../../axios/GeneralAxiosService\";\nimport UpdateCompany from \"../updateCompany/updateCompany\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\n\ninterface Column {\n  id: 'id' | 'name' | 'email' | 'password' | 'coupons' | 'update' | 'deleteIt';\n  label: string;\n  minWidth?: number;\n  align?: 'right';\n  format?: (value: number) => string;\n}\n\n\nfunction AdminCompanies(): JSX.Element {\n\n  const [companies, setData] = useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [passss, setPass] = useState(\"*******\");\n  const [CompanyInRow, setCompanyInRow] = useState<Company>(new Company());\n  const [openPasswordBox, setOpenPasswordBox] = React.useState(false);\n  const [isAllow, setAllowedPassword] = React.useState(false);\n  const { register, handleSubmit, setError, formState: { errors }, setValue } = useForm<LoginDetails>();\n  setValue(\"clientType\", \"Administrator\")\n  const [openUpdateBox, setOpenUpdateBox] = React.useState(false);\n  const { register: registerComp, handleSubmit: handleSubmitComp, setError: setErrorComp, formState: { errors: errorsComp }, setValue: setValueComp } = useForm<Company>();\n  const [openCouponsBox, setOpenCouponsBox] = React.useState(false);\n  const [openDeleteBox, setOpenDeleteBox] = React.useState(false);\n  const [searchType, setType] = useState(\"\");\n  let history = useHistory();\n\n  React.useEffect(() => {\n    if (store.getState().authState.userDetails.clientType != \"Administrator\") { history.push(\"/private/screen\") }\n    syncSetData();\n  }, []);\n\n  function addCompany() {\n    history.push(\"/private/screen/admin/company/add\");\n  }\n\n  async function syncSetData() {\n    await getAllCompaniesAxios();\n    setData(store.getState().AdminState.companies);\n  }\n\n\n  function searchTypeSet(args: any) {\n    setType(args.target.value);\n    console.log(searchType);\n  }\n\n  function searchBy() {\n    switch (searchType) {\n      case \"All\":\n        return <div></div>\n      case \"Id\":\n        return <div>\n          <TextField type=\"number\" label=\"id\" variant=\"outlined\" {...registerComp(\"id\", {\n            required: { value: true, message: \"this field is required\" },\n          })} />\n          <br />\n          <span className=\"errors\"> {errorsComp.id && <p>{errorsComp.id.message}</p>}</span>\n\n        </div>\n      case \"Name\":\n        return <div>\n          <TextField label=\"name\" variant=\"outlined\" {...registerComp(\"name\", {\n            required: { value: true, message: \"this field is required\" },\n          })} />\n          <br />\n          <span className=\"errors\"> {errorsComp.name && <p>{errorsComp.name.message}</p>}</span>\n\n        </div>\n    }\n  }\n\n  function search(company: Company) {\n    switch (searchType) {\n      case \"All\":\n        setData(store.getState().AdminState.companies);\n        break;\n      case \"Id\":\n        let companiesArray: Company[] = [];\n        const myCompany = store.getState().AdminState.companies.find(company1 => company1.id == company.id)\n        if (myCompany) { companiesArray.push(myCompany) };\n        setData(companiesArray);\n        break;\n      case \"Name\":\n        let companiesNameArray: Company[] = [];\n        const myCompanyName = store.getState().AdminState.companies.filter(company1 => company1.name.includes(company.name));\n        if (myCompanyName) { myCompanyName.map((companyyy) => companiesNameArray.push(companyyy)); }\n        setData(companiesNameArray);\n        break;\n    }\n  }\n\n\n  function showPassword() {\n    let show = <div>*******</div>;\n    if (isAllow) { show = <div>{passss}</div> }\n    return show\n  }\n\n  async function chekAdminDetails(loginDetails: LoginDetails) {\n    await loginAxios(loginDetails);\n    if (!store.getState().ErrorsState.wrongDetails) {\n      setAllowedPassword(true)\n    }\n  }\n\n  async function deleteCompany() {\n    await deleteCompanyAxios(CompanyInRow.id.toString());\n\n  }\n\n  const handleOpenPasswordBox = (event: string) => {\n    setOpenPasswordBox(!openPasswordBox);\n    setPass(event);\n  };\n\n  const handleClosePasswordBox = () => {\n    setOpenPasswordBox(!openPasswordBox);\n    setAllowedPassword(false)\n  };\n\n  const handleOpenUpdateBox = (company: Company) => {\n    setOpenUpdateBox(!openUpdateBox);\n    setCompanyInRow(company);\n    //    setPass(password);\n  };\n\n  const handleCloseUpdateBox = () => {\n    setOpenUpdateBox(!openUpdateBox);\n  };\n\n  const handleOpenDeleteBox = (company: Company) => {\n    setOpenDeleteBox(!openDeleteBox);\n    setCompanyInRow(company);\n  };\n\n  const handleCloseDeleteBox = () => {\n    setOpenDeleteBox(!openDeleteBox);\n  };\n\n  async function handleOpenCouponsBox(company: Company) {\n    store.dispatch(couponsForViewAction(company.coupons));\n    setOpenCouponsBox(!openCouponsBox);\n\n  };\n\n  const handleCloseCouponsBox = () => {\n    setOpenCouponsBox(!openCouponsBox);\n  };\n\n\n\n  const columns: readonly Column[] = [\n    { id: 'id', label: 'Id', minWidth: 20, align: \"right\" },\n    { id: 'name', label: 'Name', minWidth: 80, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    { id: 'email', label: 'Email', minWidth: 100, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    { id: 'password', label: 'Password', minWidth: 30, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    { id: 'coupons', label: 'Coupons', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    { id: 'update', label: 'Edit', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n    { id: 'deleteIt', label: 'Delete', minWidth: 10, align: \"right\", format: (value: { toLocaleString: (arg0: string) => any; }) => value.toLocaleString('en-US') },\n  ];\n\n  function createData(company1: Company) {\n    const id = company1.id;\n    const name = company1.name;\n    const email = company1.email;\n    const password = <div>\n      <Button value={company1.password} startIcon={<PasswordIcon />} onClick={() => {\n        handleOpenPasswordBox(company1.password);\n      }}> </Button>\n      <Dialog\n        open={openPasswordBox}\n        onClose={handleClosePasswordBox}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"View Password\"}\n          <Button className=\"close\" onClick={handleClosePasswordBox} autoFocus>X</Button>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            For double chek, enter your admin's email and password\n            <br />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <form onSubmit={handleSubmit(chekAdminDetails)}>\n            <TextField label=\"email\" variant=\"outlined\"\n              {...register(\"email\", {\n                required: { value: true, message: \"field is required\" }\n              })} />\n            <span className=\"errors\" > {errors.email && <p>{errors.email.message}</p>}</span>\n            <br /><br />\n            <TextField label=\"password\" variant=\"outlined\" type=\"password\"\n              {...register(\"password\", { required: true })} />\n            <br /><br />\n            <ButtonGroup variant=\"contained\" >\n              <Button type=\"submit\" color=\"primary\" > SEND & SHOW </Button>\n            </ButtonGroup>\n            <br /><br />\n\n          </form>\n          {showPassword()}\n        </DialogActions>\n      </Dialog>\n    </div>;\n\n\n    const update = <div>\n      <Button startIcon={<ModeEditIcon />} onClick={() => {\n        handleOpenUpdateBox(company1);\n      }}> </Button>\n      <Dialog\n        open={openUpdateBox}\n        onClose={handleCloseUpdateBox}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Update Company\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            ***************************************\n            <br />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n\n          <UpdateCompany id={CompanyInRow.id} />\n\n          <Button onClick={handleCloseUpdateBox} autoFocus>X</Button>\n        </DialogActions>\n      </Dialog>\n    </div>;\n    <div> <input type=\"button\" value=\"update\" />  </div>;\n\n    const deleteIt = <div>\n      <Button startIcon={<DeleteIcon />} onClick={() => { handleOpenDeleteBox(company1); }}> </Button>\n\n      <Dialog\n        open={openDeleteBox}\n        onClose={handleCloseDeleteBox}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Delete this Company?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Deleting a company is not returnable, after you will delete the\n            company it will be lost forever.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDeleteBox}>NO, STOP!</Button>\n          <Button onClick={deleteCompany} autoFocus>\n            CONTINUE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n\n    const coupons = <div>\n      <Button startIcon={<AppsIcon />} onClick={() => { handleOpenCouponsBox(company1) }}> </Button>\n      <Dialog\n        open={openCouponsBox}\n        onClose={handleCloseCouponsBox}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"View Coupons\"}\n          <Button className=\"close\" onClick={handleCloseCouponsBox} autoFocus>X</Button>\n        </DialogTitle>\n        <DialogActions>\n          <ViewCouponsSmall />\n        </DialogActions>\n      </Dialog>\n    </div>;\n\n    return { id, name, email, password, coupons, update, deleteIt };\n  }\n\n\n  const rows: { id: number; name: string; email: string; password: JSX.Element; coupons: JSX.Element; update: JSX.Element; deleteIt: JSX.Element; }[] = [];\n  companies.map((company) => rows.push(createData(company)));\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <ButtonGroup variant=\"contained\" fullWidth>\n        <Button type=\"button\" color=\"primary\" onClick={addCompany}>Add New Company</Button>\n      </ButtonGroup>\n      <br /><br />\n\n      <Select style={{ width: 250 }} defaultValue=\"All\" onChange={searchTypeSet}  >\n        <MenuItem value={\"All\"}>All</MenuItem>\n        <MenuItem value={\"Id\"}>Id</MenuItem>\n        <MenuItem value={\"Name\"}>Name</MenuItem>\n      </Select>\n\n      {searchBy()}\n\n      <form onSubmit={handleSubmitComp(search)}>\n\n\n        <ButtonGroup variant=\"contained\" fullWidth>\n          <Button type=\"submit\" color=\"primary\" >Search</Button>\n        </ButtonGroup>\n      </form>\n\n      <br /><br />\n\n      <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n        <TableContainer sx={{ maxHeight: 440 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\n                      {columns.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number'\n                              ? column.format(value)\n                              : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default AdminCompanies;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport { couponsForViewAction } from \"../../redux/couponsState\";\nimport store from \"../../redux/store\";\nimport \"./purchasePage.css\";\n\nfunction PurchasePage(): JSX.Element {\n    var couponsArray : CouponDetails[]= [];\n    store.getState().CouponsState.allCoupons.map((item)=>{couponsArray.push(item)});\n    let customerCoupons = store.getState().CustomersState.customer.coupons;\n    let history = useHistory();\n    const [ready, setReady] = useState(false)\n\n    useEffect(() => {\n        if (store.getState().authState.userDetails.clientType != \"Customers\") { history.push(\"/private/screen\") }\n\n      \n        customerCoupons.map((myCoupon) => {\n            let index = couponsArray.findIndex(item => item.id === myCoupon.id);\n            if (index != -1) { couponsArray.splice(index, 1); }\n         } )\n\n        store.dispatch(couponsForViewAction(couponsArray));\n        setReady(true);\n\n    }, []);\n\n\n    return (\n        <div className=\"purchasePage\">\n            coupons you can purchase\n            {ready && <ViewCouponsSmall />}\n        </div>\n    );\n}\n\nexport default PurchasePage;\n","import { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AddCompany from \"../../adminComponents/addCompany/addCompany\";\nimport AddCustomer from \"../../adminComponents/addCustomer/addCustomer\";\nimport AddCoupon from \"../../companyComponents/addCoupon/addCoupon\";\nimport DeleteCoupon from \"../../companyComponents/deleteCoupon/deleteCoupon\";\nimport UpdateCoupon from \"../../companyComponents/updateCoupon/updateCoupon\";\nimport CompanyDetails from \"../../companyComponents/companyDetails/companyDetails\";\nimport CustomerDetails from \"../../customerComponents/customerDetails/customerDetails\";\nimport GetOneCoupon from \"../../coupons/getOneCoupon/getOneCoupon\";\nimport ViewCouponsSmall from \"../../coupons/viewCouponsSmall/viewCouponsSmall\";\nimport PrivateMain from \"../privateMain/privateMain\";\nimport PaymentPage from \"../../customerComponents/paymentPage/paymentPage\";\nimport CompanyCoupons from \"../../companyComponents/companyCoupons/companyCoupons\";\nimport CustomerCoupons from \"../../customerComponents/customerCoupons/customerCoupons\";\nimport AdminCustomers from \"../../adminComponents/adminCustomers/adminCustomers\";\nimport AdminCompanies from \"../../adminComponents/adminCompanies/adminCompanies\";\nimport PurchasePage from \"../../customerComponents/purchasePage/purchasePage\";\nimport LoginFC from \"../../mainComponent/LoginFC/LoginFC\";\n\n\nclass PrivateRouting extends Component {\n\n    public render(): JSX.Element {\n\n        return (\n            <div className=\"privateRouting\">\n\n\n                <Switch >\n                    <Route\n                        path=\"/private/screen\"\n                        render={({ match: { url } }) => (\n                            <>\n                                <Route path={`${url}/`} component={PrivateMain} exact />\n\n                                {/* admin */}\n                                <Route path={`${url}/admin/companies`} component={AdminCompanies} />\n                                <Route path={`${url}/admin/customers`} component={AdminCustomers} />\n                                <Route path={`${url}/admin/company/add`} component={AddCompany} />\n                                <Route path={`${url}/admin/customer/add`} component={AddCustomer} />\n\n                                {/* company */}\n                                <Route path={`${url}/company/coupon/delete/:id`} render={(props) => <DeleteCoupon id={props.match.params.id} />} />\n                                <Route path={`${url}/company/coupon/add`} component={AddCoupon} />\n                                <Route path={`${url}/company/coupon/update/:id`} render={(props) => <UpdateCoupon id={props.match.params.id} />} />\n                                <Route path={`${url}/company/details`} component={CompanyDetails} />\n                                <Route path={`${url}/company/coupons`} component={CompanyCoupons} />\n\n                                {/* customer */}\n                                <Route path={`${url}/customer/details`} component={CustomerDetails} />\n                                <Route path={`${url}/customer/purchase`} component={PurchasePage} />\n                                <Route path={`${url}/customer/coupon/payment/:id`} render={(props) => <PaymentPage id={props.match.params.id} />} />\n                                <Route path={`${url}/customer/coupons`} component={CustomerCoupons} />\n\n                                {/* general */}\n                                <Route path={`${url}/coupons/view`} component={ViewCouponsSmall} />\n                                <Route path={`${url}/coupon/getOne/:id`} render={(props) => <GetOneCoupon id={props.match.params.id} />} />\n                                <Route path={`${url}/login`} component={LoginFC} exact />\n                            </>\n                        )}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default PrivateRouting;\n","import { BrowserRouter } from \"react-router-dom\";\nimport LoginFC from \"../../mainComponent/LoginFC/LoginFC\";\nimport store from \"../../redux/store\";\nimport PrivateAside from \"../privateAside/privateAside\";\nimport PrivateRouting from \"../privateRouting/privateRouting\";\n\nimport \"./privateScreen.css\";\n\nfunction PrivateScreen(): JSX.Element {\n    if (store.getState().authState.userDetails.clientType === \"\") {\n        return (\n            <div>\n                <h5>need to login</h5>\n                <LoginFC />\n            </div>\n        )\n    }\n    else return (\n        <div className=\"privateScreen\">\n\n            <BrowserRouter>\n                <aside><PrivateAside /></aside>\n                <main><PrivateRouting /></main>\n            </BrowserRouter>\n\n        </div>\n    );\n}\n\nexport default PrivateScreen;\n","import { useEffect, useState } from \"react\";\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport Main from \"../../guestComponents/main/main\";\nimport About from \"../../mainComponent/about/about\";\nimport GetOneCoupon from \"../../coupons/getOneCoupon/getOneCoupon\";\nimport LoginFC from \"../../mainComponent/LoginFC/LoginFC\";\nimport Page404 from \"../../mainComponent/page404/page404\";\nimport { error404Action } from \"../../redux/ErrorState\";\nimport store from \"../../redux/store\";\nimport PrivateScreen from \"../privateScreen/privateScreen\";\nimport \"./mainRouting.css\";\nimport PaymentPage from \"../../customerComponents/paymentPage/paymentPage\";\n\nfunction MainRouting(): JSX.Element {\n    const [ClientType, setType] = useState(store.getState().authState.userDetails.clientType);\n    const [Error404, set404] = useState(store.getState().ErrorsState.error404);\n    let history = useHistory();\n\n    useEffect(() => {\n        const unsubscribeMe = store.subscribe(() => setType(store.getState().authState.userDetails.clientType));\n        const error404unsubscribeMe = store.subscribe(() => set404(store.getState().ErrorsState.error404));\n        return () => { unsubscribeMe(); error404unsubscribeMe(); }\n\n\n    }, []);\n\n    function chek404() {\n        if (Error404 == true) {\n            history.push(\"/page404\")\n            store.dispatch(error404Action(false))\n        }\n    }\n\n    function chekUser() {\n        if (ClientType == \"\") {\n            history.push(\"/guest/main\")\n        }\n    }\n\n    return (\n        <div className=\"mainRouting\">\n            {chek404()}\n            {chekUser}\n\n            <Switch>\n                <Route path=\"/guest/main\" component={Main} exact />\n                <Route path=\"/private/screen\" component={PrivateScreen} />\n                <Route path=\"/login\" component={LoginFC} exact />\n                <Route path=\"/about\" component={About} exact />\n                <Route path=\"/page404\" component={Page404} exact />\n                <Route path=\"/coupon/getOne/:id\" render={(props) => <GetOneCoupon id={props.match.params.id} />} exact />\n                <Route path=\"/coupon/payment/:id\" render={(props) => <PaymentPage id={props.match.params.id} />} exact />\n                <Redirect from=\"/\" to=\"/guest/main\" exact />\n                <Route component={Page404} />\n            </Switch>\n\n        </div>\n    );\n}\n\nexport default MainRouting;\n","import { BrowserRouter } from \"react-router-dom\";\nimport Footer from \"../footer/footer\";\nimport Header from \"../header/header\";\nimport MainRouting from \"../mainRouting/mainRouting\";\nimport \"./layout.css\";\n\nfunction Layout(): JSX.Element {\n    return (\n        <div className=\"layout\">\n            <BrowserRouter> \n            <header><Header/></header>\n            <main><MainRouting/></main>\n            <footer><Footer/></footer>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default Layout;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from 'react-router-dom';\nimport Layout from './Components/mainLayout/layout/layout';\n\nReactDOM.render(\n \n  <BrowserRouter>\n    <Layout />\n  </BrowserRouter>,\n  \n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}